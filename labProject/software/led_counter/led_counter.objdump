
led_counter.elf:     file format elf32-littlenios2
led_counter.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x010001bc

Program Header:
    LOAD off    0x00001000 vaddr 0x01000000 paddr 0x01000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x01000020 paddr 0x01000020 align 2**12
         filesz 0x0000f014 memsz 0x0000f014 flags r-x
    LOAD off    0x00010034 vaddr 0x0100f034 paddr 0x01010b20 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x0001260c vaddr 0x0101260c paddr 0x0101260c align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  01000000  01000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000019c  01000020  01000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000eb58  010001bc  010001bc  000011bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000320  0100ed14  0100ed14  0000fd14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0100f034  01010b20  00010034  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  0101260c  0101260c  0001260c  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM_ctrl   00000000  01012768  01012768  00011b20  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00011b20  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e88  00000000  00000000  00011b48  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002338a  00000000  00000000  000129d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008e28  00000000  00000000  00035d5a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000af65  00000000  00000000  0003eb82  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001fd0  00000000  00000000  00049ae8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003075  00000000  00000000  0004bab8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00016ed8  00000000  00000000  0004eb2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00065a08  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000017d8  00000000  00000000  00065a38  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006a29b  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0006a29e  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006a2a1  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006a2a2  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006a2a3  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006a2a7  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006a2ab  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0006a2af  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0006a2b8  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0006a2c1  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000a  00000000  00000000  0006a2ca  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000023  00000000  00000000  0006a2d4  2**0
                  CONTENTS, READONLY
 29 .jdi          00003bc8  00000000  00000000  0006a2f7  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     000423a2  00000000  00000000  0006debf  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
01000000 l    d  .entry	00000000 .entry
01000020 l    d  .exceptions	00000000 .exceptions
010001bc l    d  .text	00000000 .text
0100ed14 l    d  .rodata	00000000 .rodata
0100f034 l    d  .rwdata	00000000 .rwdata
0101260c l    d  .bss	00000000 .bss
01012768 l    d  .SDRAM_ctrl	00000000 .SDRAM_ctrl
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../led_counter_bsp//obj/HAL/src/crt0.o
01000204 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
01000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 counter.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0100ed82 l     O .rodata	00000010 zeroes.4255
010023c0 l     F .text	000000bc __sbprintf
0100ed92 l     O .rodata	00000010 blanks.4254
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
010025d0 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0100418c l     F .text	00000008 __fp_lock
01004194 l     F .text	00000008 __fp_unlock
010041a8 l     F .text	0000019c __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0100f034 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0100f478 l     O .rwdata	00000020 lc_ctype_charset
0100f458 l     O .rwdata	00000020 lc_message_charset
0100f498 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0100edc4 l     O .rodata	0000000c p05.2710
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
01007618 l     F .text	000000fc __sprint_r.part.0
0100eef8 l     O .rodata	00000010 blanks.4199
0100eee8 l     O .rodata	00000010 zeroes.4200
01008a20 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
01009f24 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0100c650 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0100c770 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0100c79c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0100c89c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0100c990 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0100ca74 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0100cc50 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
01010b10 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0100ceac l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0100cff4 l     F .text	00000038 alt_dev_reg
0100fa80 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0100d2d0 l     F .text	00000204 altera_avalon_jtag_uart_irq
0100d4d4 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0100dc78 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0100e124 l     F .text	000000c0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0100e25c l     F .text	00000050 alt_get_errno
0100e2ac l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
01006c90 g     F .text	00000074 _mprec_log10
01006d7c g     F .text	0000008c __any_on
01008f8c g     F .text	00000054 _isatty_r
0100edd0 g     O .rodata	00000028 __mprec_tinytens
0100cb98 g     F .text	00000078 alt_main
010002f8 g     F .text	000000a8 _puts_r
01012668 g     O .bss	00000100 alt_irq
01008fe0 g     F .text	0000005c _lseek_r
01010b20 g       *ABS*	00000000 __flash_rwdata_start
0100b1b8 g     F .text	00000084 .hidden __eqdf2
01012768 g       *ABS*	00000000 __alt_heap_start
010002bc g     F .text	0000003c printf
010091ec g     F .text	0000009c _wcrtomb_r
01007510 g     F .text	0000005c __sseek
010044dc g     F .text	00000010 __sinit
01009098 g     F .text	00000138 __swbuf_r
01004f88 g     F .text	0000007c _setlocale_r
01004344 g     F .text	00000068 __sfmoreglue
0100cc30 g     F .text	00000020 __malloc_unlock
01005be8 g     F .text	0000015c memmove
010044c4 g     F .text	00000018 _cleanup
01005e68 g     F .text	000000a8 _Balloc
0100b23c g     F .text	000000e0 .hidden __gtdf2
00000000  w      *UND*	00000000 __errno
01000000 g     F .entry	0000001c __reset
01000020 g       *ABS*	00000000 __flash_exceptions_start
01008f34 g     F .text	00000058 _fstat_r
01012624 g     O .bss	00000004 errno
0100748c g     F .text	00000008 __seofread
0101262c g     O .bss	00000004 alt_argv
01018ae0 g       *ABS*	00000000 _gp
0100f900 g     O .rwdata	00000180 alt_fd_list
0100e68c g     F .text	00000090 alt_find_dev
01005ab0 g     F .text	00000138 memcpy
0100419c g     F .text	0000000c _cleanup_r
0100c478 g     F .text	000000d0 .hidden __floatsidf
0100e1e4 g     F .text	00000078 alt_io_redirect
0100b31c g     F .text	000000e0 .hidden __ltdf2
0100ed14 g       *ABS*	00000000 __DTOR_END__
010003a0 g     F .text	00000014 puts
01007370 g     F .text	00000074 __fpclassifyd
01006bec g     F .text	000000a4 __ratio
010089fc g     F .text	00000024 __vfiprintf_internal
0100d6d0 g     F .text	0000020c altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
01000290 g     F .text	0000002c _printf_r
0100a040 g     F .text	00000008 .hidden __udivsi3
0100c8ec g     F .text	000000a4 isatty
01000000 g       *ABS*	00000000 __alt_mem_SDRAM_ctrl
0100ee20 g     O .rodata	000000c8 __mprec_tens
01005004 g     F .text	0000000c __locale_charset
0100e8e4 g     F .text	0000008c alt_icache_flush
01012620 g     O .bss	00000004 __malloc_top_pad
01010ae8 g     O .rwdata	00000004 __mb_cur_max
01005034 g     F .text	0000000c _localeconv_r
01006274 g     F .text	0000003c __i2b
01004940 g     F .text	000004c0 __sfvwrite_r
010073e4 g     F .text	00000054 _sbrk_r
0100903c g     F .text	0000005c _read_r
01010b08 g     O .rwdata	00000004 alt_max_fd
01008c50 g     F .text	000000f0 _fclose_r
0100415c g     F .text	00000030 fflush
0101261c g     O .bss	00000004 __malloc_max_sbrked_mem
0100a050 g     F .text	0000089c .hidden __adddf3
01006994 g     F .text	0000011c __b2d
01009994 g     F .text	00000590 .hidden __umoddi3
0100cac4 g     F .text	000000d4 lseek
01010ae0 g     O .rwdata	00000004 _global_impure_ptr
01006e08 g     F .text	00000568 _realloc_r
01012768 g       *ABS*	00000000 __bss_end
0100e034 g     F .text	000000f0 alt_iic_isr_register
0100e568 g     F .text	00000104 alt_tick
010093d4 g     F .text	000005c0 .hidden __udivdi3
01008d54 g     F .text	00000184 _fputwc_r
0100edf8 g     O .rodata	00000028 __mprec_bigtens
01006058 g     F .text	00000104 __s2b
0100c548 g     F .text	000000a4 .hidden __floatunsidf
0100673c g     F .text	00000060 __mcmp
010044fc g     F .text	00000018 __fp_lock_all
0100dfe8 g     F .text	0000004c alt_ic_irq_enabled
0100e4d0 g     F .text	00000098 alt_alarm_stop
01012634 g     O .bss	00000004 alt_irq_active
010000ec g     F .exceptions	000000d0 alt_irq_handler
0100f8d8 g     O .rwdata	00000028 alt_dev_null
0100dc34 g     F .text	00000044 alt_dcache_flush_all
0100615c g     F .text	00000068 __hi0bits
0100c3f0 g     F .text	00000088 .hidden __fixdfsi
01010b20 g       *ABS*	00000000 __ram_rwdata_end
01010b00 g     O .rwdata	00000008 alt_dev_list
0100cefc g     F .text	000000f8 write
0100f034 g       *ABS*	00000000 __ram_rodata_end
0100c7ec g     F .text	000000b0 fstat
0100b31c g     F .text	000000e0 .hidden __ledf2
010064ac g     F .text	00000140 __pow5mult
0100772c g     F .text	000012d0 ___vfiprintf_internal_r
01012614 g     O .bss	00000004 __nlocale_changed
0100a048 g     F .text	00000008 .hidden __umodsi3
01012768 g       *ABS*	00000000 end
0100d20c g     F .text	000000c4 altera_avalon_jtag_uart_init
0100ed14 g       *ABS*	00000000 __CTOR_LIST__
02000000 g       *ABS*	00000000 __alt_stack_pointer
0100c5ec g     F .text	00000064 .hidden __clzsi2
0100d8dc g     F .text	00000218 altera_avalon_jtag_uart_write
010044ec g     F .text	00000004 __sfp_lock_acquire
010059c8 g     F .text	000000e8 memchr
0100044c g     F .text	00001f50 ___vfprintf_internal_r
01004650 g     F .text	000002f0 _free_r
01005010 g     F .text	00000010 __locale_mb_cur_max
0100eb4c g     F .text	00000194 __call_exitprocs
01012610 g     O .bss	00000004 __mlocale_changed
01010aec g     O .rwdata	00000004 __malloc_sbrk_base
010001bc g     F .text	0000004c _start
01012638 g     O .bss	00000004 _alt_tick_rate
010065ec g     F .text	00000150 __lshift
0101263c g     O .bss	00000004 _alt_nticks
0100cca0 g     F .text	000000fc read
0100d060 g     F .text	00000048 alt_sys_init
0100ea38 g     F .text	00000114 __register_exitproc
010062b0 g     F .text	000001fc __multiply
0100d57c g     F .text	00000068 altera_avalon_jtag_uart_close
0100f034 g       *ABS*	00000000 __ram_rwdata_start
0100ed14 g       *ABS*	00000000 __ram_rodata_start
01012640 g     O .bss	00000028 __malloc_current_mallinfo
01006ab0 g     F .text	0000013c __d2b
0100d0a8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0100e830 g     F .text	000000b4 alt_get_fd
01008b38 g     F .text	00000054 _close_r
0100e9bc g     F .text	0000007c memcmp
0100d168 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
01012768 g       *ABS*	00000000 __alt_stack_base
0100d1b8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0100247c g     F .text	00000154 __swsetup_r
0100a8ec g     F .text	000008cc .hidden __divdf3
010043ac g     F .text	00000118 __sfp
01006d04 g     F .text	00000078 __copybits
0100f4d0 g     O .rwdata	00000408 __malloc_av_
010044f8 g     F .text	00000004 __sinit_lock_release
0100b3fc g     F .text	00000724 .hidden __muldf3
01007438 g     F .text	00000054 __sread
0100e71c g     F .text	00000114 alt_find_file
0100dcc8 g     F .text	000000a4 alt_dev_llist_insert
0100cc10 g     F .text	00000020 __malloc_lock
0100cdfc g     F .text	000000b0 sbrk
01004100 g     F .text	0000005c _fflush_r
01008b8c g     F .text	000000c4 _calloc_r
0101260c g       *ABS*	00000000 __bss_start
01005d44 g     F .text	00000124 memset
01000208 g     F .text	00000088 main
01012630 g     O .bss	00000004 alt_envp
01012618 g     O .bss	00000004 __malloc_max_total_mem
0100d108 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
010091d0 g     F .text	0000001c __swbuf
0100756c g     F .text	00000008 __sclose
02000000 g       *ABS*	00000000 __alt_heap_limit
01008d40 g     F .text	00000014 fclose
010027d0 g     F .text	00001728 _dtoa_r
01005220 g     F .text	000007a8 _malloc_r
01009348 g     F .text	00000030 __ascii_wctomb
01010b0c g     O .rwdata	00000004 alt_errno
01004e00 g     F .text	000000c4 _fwalk
01009f90 g     F .text	00000054 .hidden __divsi3
0100452c g     F .text	00000124 _malloc_trim_r
0100ed14 g       *ABS*	00000000 __CTOR_END__
01007574 g     F .text	000000a4 strcmp
0100ed14 g       *ABS*	00000000 __flash_rodata_start
0100ed14 g       *ABS*	00000000 __DTOR_LIST__
0100b1b8 g     F .text	00000084 .hidden __nedf2
0100d02c g     F .text	00000034 alt_irq_init
0100cd9c g     F .text	00000060 alt_release_fd
0100ef08 g     O .rodata	00000100 .hidden __clz_tab
0101260c g     O .bss	00000004 _PathLocale
0100e970 g     F .text	00000014 atexit
01008adc g     F .text	0000005c _write_r
01005040 g     F .text	0000001c setlocale
01010ae4 g     O .rwdata	00000004 _impure_ptr
01012628 g     O .bss	00000004 alt_argc
01003ef8 g     F .text	00000208 __sflush_r
0100ddc8 g     F .text	0000005c _do_dtors
0100502c g     F .text	00000008 __locale_cjk_lang
01000020 g       .exceptions	00000000 alt_irq_entry
01006934 g     F .text	00000060 __ulp
01004514 g     F .text	00000018 __fp_unlock_all
01010af8 g     O .rwdata	00000008 alt_fs_list
01000020 g       *ABS*	00000000 __ram_exceptions_start
0100505c g     F .text	0000000c localeconv
0100de54 g     F .text	00000050 alt_ic_isr_register
01010b20 g       *ABS*	00000000 _edata
01012768 g       *ABS*	00000000 _end
010001bc g       *ABS*	00000000 __ram_exceptions_end
0100d5e4 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
0100df44 g     F .text	000000a4 alt_ic_irq_disable
01007494 g     F .text	0000007c __swrite
01010af0 g     O .rwdata	00000004 __malloc_trim_threshold
0100e66c g     F .text	00000020 altera_nios2_qsys_irq_init
01005020 g     F .text	0000000c __locale_msgcharset
0100e984 g     F .text	00000038 exit
01004ec4 g     F .text	000000c4 _fwalk_reent
0100679c g     F .text	00000198 __mdiff
01009fe4 g     F .text	0000005c .hidden __modsi3
02000000 g       *ABS*	00000000 __alt_data_end
01000020 g     F .exceptions	00000000 alt_exception
010044f0 g     F .text	00000004 __sfp_lock_release
0100ece0 g     F .text	00000034 _exit
0100daf4 g     F .text	00000140 alt_alarm_start
01005068 g     F .text	000001b8 __smakebuf_r
010003b4 g     F .text	00000098 strlen
0100e378 g     F .text	00000158 open
0100b23c g     F .text	000000e0 .hidden __gedf2
01010af4 g     O .rwdata	00000004 __wctomb
01007714 g     F .text	00000018 __sprint_r
0100de24 g     F .text	00000030 alt_icache_flush_all
01010b14 g     O .rwdata	00000004 alt_priority_mask
0100dea4 g     F .text	000000a0 alt_ic_irq_enable
0100239c g     F .text	00000024 __vfprintf_internal
01009378 g     F .text	0000005c _wctomb_r
0100bb20 g     F .text	000008d0 .hidden __subdf3
010061c4 g     F .text	000000b0 __lo0bits
01010b18 g     O .rwdata	00000008 alt_alarm_list
0100dd6c g     F .text	0000005c _do_ctors
01009288 g     F .text	000000c0 wcrtomb
0100c6a0 g     F .text	000000d0 close
0100c9f4 g     F .text	00000080 alt_load
01008ed8 g     F .text	0000005c fputwc
00000000  w      *UND*	00000000 free
010044f4 g     F .text	00000004 __sinit_lock_acquire
01005f38 g     F .text	00000120 __multadd
01005f10 g     F .text	00000028 _Bfree



Disassembly of section .entry:

01000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 1000000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 1000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 1000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 100000c:	00bffd16 	blt	zero,r2,1000004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 1000010:	00404034 	movhi	at,256
    ori r1, r1, %lo(_start)
 1000014:	08406f14 	ori	at,at,444
    jmp r1
 1000018:	0800683a 	jmp	at
 100001c:	00000000 	call	0 <__alt_mem_SDRAM_ctrl-0x1000000>

Disassembly of section .exceptions:

01000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 1000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 1000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 1000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 100002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 1000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 1000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 1000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 100003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 1000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 1000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 1000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 100004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 1000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 1000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 1000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 100005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 1000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 1000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 1000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 100006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 1000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 1000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 1000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 100007c:	10000326 	beq	r2,zero,100008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 1000080:	20000226 	beq	r4,zero,100008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 1000084:	10000ec0 	call	10000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 1000088:	00000306 	br	1000098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 100008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 1000090:	e8bfff17 	ldw	r2,-4(ea)

01000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 1000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 1000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 100009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 10000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 10000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 10000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 10000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 10000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 10000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 10000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 10000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 10000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 10000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 10000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 10000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 10000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 10000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 10000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 10000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 10000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 10000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 10000e8:	ef80083a 	eret

010000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 10000ec:	defff904 	addi	sp,sp,-28
 10000f0:	dfc00615 	stw	ra,24(sp)
 10000f4:	df000515 	stw	fp,20(sp)
 10000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 1000100:	0005313a 	rdctl	r2,ipending
 1000104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 1000108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 100010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 1000110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 1000114:	00800044 	movi	r2,1
 1000118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 100011c:	e0fffb17 	ldw	r3,-20(fp)
 1000120:	e0bffc17 	ldw	r2,-16(fp)
 1000124:	1884703a 	and	r2,r3,r2
 1000128:	10001426 	beq	r2,zero,100017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 100012c:	00804074 	movhi	r2,257
 1000130:	10899a04 	addi	r2,r2,9832
 1000134:	e0fffd17 	ldw	r3,-12(fp)
 1000138:	180690fa 	slli	r3,r3,3
 100013c:	10c5883a 	add	r2,r2,r3
 1000140:	10c00017 	ldw	r3,0(r2)
 1000144:	00804074 	movhi	r2,257
 1000148:	10899a04 	addi	r2,r2,9832
 100014c:	e13ffd17 	ldw	r4,-12(fp)
 1000150:	200890fa 	slli	r4,r4,3
 1000154:	21000104 	addi	r4,r4,4
 1000158:	1105883a 	add	r2,r2,r4
 100015c:	10800017 	ldw	r2,0(r2)
 1000160:	1009883a 	mov	r4,r2
 1000164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 1000168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 100016c:	0005313a 	rdctl	r2,ipending
 1000170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 1000174:	e0bfff17 	ldw	r2,-4(fp)
 1000178:	00000706 	br	1000198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 100017c:	e0bffc17 	ldw	r2,-16(fp)
 1000180:	1085883a 	add	r2,r2,r2
 1000184:	e0bffc15 	stw	r2,-16(fp)
      i++;
 1000188:	e0bffd17 	ldw	r2,-12(fp)
 100018c:	10800044 	addi	r2,r2,1
 1000190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1000194:	003fe106 	br	100011c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
 1000198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 100019c:	e0bffb17 	ldw	r2,-20(fp)
 10001a0:	103fdb1e 	bne	r2,zero,1000110 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 10001a4:	0001883a 	nop
}
 10001a8:	e037883a 	mov	sp,fp
 10001ac:	dfc00117 	ldw	ra,4(sp)
 10001b0:	df000017 	ldw	fp,0(sp)
 10001b4:	dec00204 	addi	sp,sp,8
 10001b8:	f800283a 	ret

Disassembly of section .text:

010001bc <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 10001bc:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 10001c0:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 10001c4:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 10001c8:	00bffd16 	blt	zero,r2,10001c0 <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 10001cc:	06c08034 	movhi	sp,512
    ori sp, sp, %lo(__alt_stack_pointer)
 10001d0:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 10001d4:	06804074 	movhi	gp,257
    ori gp, gp, %lo(_gp)
 10001d8:	d6a2b814 	ori	gp,gp,35552
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 10001dc:	00804074 	movhi	r2,257
    ori r2, r2, %lo(__bss_start)
 10001e0:	10898314 	ori	r2,r2,9740

    movhi r3, %hi(__bss_end)
 10001e4:	00c04074 	movhi	r3,257
    ori r3, r3, %lo(__bss_end)
 10001e8:	18c9da14 	ori	r3,r3,10088

    beq r2, r3, 1f
 10001ec:	10c00326 	beq	r2,r3,10001fc <_start+0x40>

0:
    stw zero, (r2)
 10001f0:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 10001f4:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 10001f8:	10fffd36 	bltu	r2,r3,10001f0 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 10001fc:	100c9f40 	call	100c9f4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 1000200:	100cb980 	call	100cb98 <alt_main>

01000204 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 1000204:	003fff06 	br	1000204 <alt_after_alt_main>

01000208 <main>:
#include "io.h"
#include "system.h"

#define DELAY 1000000

int main(void) {
 1000208:	defffc04 	addi	sp,sp,-16
 100020c:	dfc00315 	stw	ra,12(sp)
 1000210:	df000215 	stw	fp,8(sp)
 1000214:	df000204 	addi	fp,sp,8
	int counter = 0;
 1000218:	e03ffe15 	stw	zero,-8(fp)
	unsigned int wait;

	printf("Lets start counting \n");
 100021c:	01004074 	movhi	r4,257
 1000220:	213b4504 	addi	r4,r4,-4844
 1000224:	10003a00 	call	10003a0 <puts>
	IOWR_8DIRECT(LEDS_BASE,0,0);
 1000228:	0007883a 	mov	r3,zero
 100022c:	00808034 	movhi	r2,512
 1000230:	10840404 	addi	r2,r2,4112
 1000234:	10c00025 	stbio	r3,0(r2)

	while(1) {
		counter ++;
 1000238:	e0bffe17 	ldw	r2,-8(fp)
 100023c:	10800044 	addi	r2,r2,1
 1000240:	e0bffe15 	stw	r2,-8(fp)
		printf("counter = %d \n",counter);
 1000244:	01004074 	movhi	r4,257
 1000248:	213b4b04 	addi	r4,r4,-4820
 100024c:	e17ffe17 	ldw	r5,-8(fp)
 1000250:	10002bc0 	call	10002bc <printf>
		IOWR_8DIRECT(LEDS_BASE,0,counter);
 1000254:	00808034 	movhi	r2,512
 1000258:	10840404 	addi	r2,r2,4112
 100025c:	e0fffe03 	ldbu	r3,-8(fp)
 1000260:	10c00025 	stbio	r3,0(r2)
		// silly busy wait
		for(wait = 0; wait < DELAY; wait++)
 1000264:	e03fff15 	stw	zero,-4(fp)
 1000268:	00000406 	br	100027c <main+0x74>
		asm volatile ("nop");
 100026c:	0001883a 	nop
	while(1) {
		counter ++;
		printf("counter = %d \n",counter);
		IOWR_8DIRECT(LEDS_BASE,0,counter);
		// silly busy wait
		for(wait = 0; wait < DELAY; wait++)
 1000270:	e0bfff17 	ldw	r2,-4(fp)
 1000274:	10800044 	addi	r2,r2,1
 1000278:	e0bfff15 	stw	r2,-4(fp)
 100027c:	e0ffff17 	ldw	r3,-4(fp)
 1000280:	008003f4 	movhi	r2,15
 1000284:	10908fc4 	addi	r2,r2,16959
 1000288:	10fff82e 	bgeu	r2,r3,100026c <main+0x64>
		asm volatile ("nop");
	}
 100028c:	003fea06 	br	1000238 <main+0x30>

01000290 <_printf_r>:
 1000290:	defffd04 	addi	sp,sp,-12
 1000294:	dfc00015 	stw	ra,0(sp)
 1000298:	d9800115 	stw	r6,4(sp)
 100029c:	d9c00215 	stw	r7,8(sp)
 10002a0:	280d883a 	mov	r6,r5
 10002a4:	21400217 	ldw	r5,8(r4)
 10002a8:	d9c00104 	addi	r7,sp,4
 10002ac:	100044c0 	call	100044c <___vfprintf_internal_r>
 10002b0:	dfc00017 	ldw	ra,0(sp)
 10002b4:	dec00304 	addi	sp,sp,12
 10002b8:	f800283a 	ret

010002bc <printf>:
 10002bc:	defffc04 	addi	sp,sp,-16
 10002c0:	dfc00015 	stw	ra,0(sp)
 10002c4:	d9400115 	stw	r5,4(sp)
 10002c8:	d9800215 	stw	r6,8(sp)
 10002cc:	d9c00315 	stw	r7,12(sp)
 10002d0:	00804074 	movhi	r2,257
 10002d4:	1082b904 	addi	r2,r2,2788
 10002d8:	10800017 	ldw	r2,0(r2)
 10002dc:	200b883a 	mov	r5,r4
 10002e0:	d9800104 	addi	r6,sp,4
 10002e4:	11000217 	ldw	r4,8(r2)
 10002e8:	100239c0 	call	100239c <__vfprintf_internal>
 10002ec:	dfc00017 	ldw	ra,0(sp)
 10002f0:	dec00404 	addi	sp,sp,16
 10002f4:	f800283a 	ret

010002f8 <_puts_r>:
 10002f8:	defff604 	addi	sp,sp,-40
 10002fc:	dc000715 	stw	r16,28(sp)
 1000300:	2021883a 	mov	r16,r4
 1000304:	2809883a 	mov	r4,r5
 1000308:	dc400815 	stw	r17,32(sp)
 100030c:	dfc00915 	stw	ra,36(sp)
 1000310:	2823883a 	mov	r17,r5
 1000314:	10003b40 	call	10003b4 <strlen>
 1000318:	81400217 	ldw	r5,8(r16)
 100031c:	11000044 	addi	r4,r2,1
 1000320:	d8800115 	stw	r2,4(sp)
 1000324:	00804074 	movhi	r2,257
 1000328:	2980030b 	ldhu	r6,12(r5)
 100032c:	10bb4f04 	addi	r2,r2,-4804
 1000330:	d8800215 	stw	r2,8(sp)
 1000334:	00800044 	movi	r2,1
 1000338:	d8800315 	stw	r2,12(sp)
 100033c:	00800084 	movi	r2,2
 1000340:	d8800515 	stw	r2,20(sp)
 1000344:	dc400015 	stw	r17,0(sp)
 1000348:	d9000615 	stw	r4,24(sp)
 100034c:	dec00415 	stw	sp,16(sp)
 1000350:	3088000c 	andi	r2,r6,8192
 1000354:	1000061e 	bne	r2,zero,1000370 <_puts_r+0x78>
 1000358:	29001917 	ldw	r4,100(r5)
 100035c:	00b7ffc4 	movi	r2,-8193
 1000360:	31880014 	ori	r6,r6,8192
 1000364:	2084703a 	and	r2,r4,r2
 1000368:	2980030d 	sth	r6,12(r5)
 100036c:	28801915 	stw	r2,100(r5)
 1000370:	8009883a 	mov	r4,r16
 1000374:	d9800404 	addi	r6,sp,16
 1000378:	10049400 	call	1004940 <__sfvwrite_r>
 100037c:	1000061e 	bne	r2,zero,1000398 <_puts_r+0xa0>
 1000380:	00800284 	movi	r2,10
 1000384:	dfc00917 	ldw	ra,36(sp)
 1000388:	dc400817 	ldw	r17,32(sp)
 100038c:	dc000717 	ldw	r16,28(sp)
 1000390:	dec00a04 	addi	sp,sp,40
 1000394:	f800283a 	ret
 1000398:	00bfffc4 	movi	r2,-1
 100039c:	003ff906 	br	1000384 <_puts_r+0x8c>

010003a0 <puts>:
 10003a0:	00804074 	movhi	r2,257
 10003a4:	1082b904 	addi	r2,r2,2788
 10003a8:	200b883a 	mov	r5,r4
 10003ac:	11000017 	ldw	r4,0(r2)
 10003b0:	10002f81 	jmpi	10002f8 <_puts_r>

010003b4 <strlen>:
 10003b4:	208000cc 	andi	r2,r4,3
 10003b8:	10002026 	beq	r2,zero,100043c <strlen+0x88>
 10003bc:	20800007 	ldb	r2,0(r4)
 10003c0:	10002026 	beq	r2,zero,1000444 <strlen+0x90>
 10003c4:	2005883a 	mov	r2,r4
 10003c8:	00000206 	br	10003d4 <strlen+0x20>
 10003cc:	10c00007 	ldb	r3,0(r2)
 10003d0:	18001826 	beq	r3,zero,1000434 <strlen+0x80>
 10003d4:	10800044 	addi	r2,r2,1
 10003d8:	10c000cc 	andi	r3,r2,3
 10003dc:	183ffb1e 	bne	r3,zero,10003cc <strlen+0x18>
 10003e0:	10c00017 	ldw	r3,0(r2)
 10003e4:	01ffbff4 	movhi	r7,65279
 10003e8:	39ffbfc4 	addi	r7,r7,-257
 10003ec:	00ca303a 	nor	r5,zero,r3
 10003f0:	01a02074 	movhi	r6,32897
 10003f4:	19c7883a 	add	r3,r3,r7
 10003f8:	31a02004 	addi	r6,r6,-32640
 10003fc:	1946703a 	and	r3,r3,r5
 1000400:	1986703a 	and	r3,r3,r6
 1000404:	1800091e 	bne	r3,zero,100042c <strlen+0x78>
 1000408:	10800104 	addi	r2,r2,4
 100040c:	10c00017 	ldw	r3,0(r2)
 1000410:	19cb883a 	add	r5,r3,r7
 1000414:	00c6303a 	nor	r3,zero,r3
 1000418:	28c6703a 	and	r3,r5,r3
 100041c:	1986703a 	and	r3,r3,r6
 1000420:	183ff926 	beq	r3,zero,1000408 <strlen+0x54>
 1000424:	00000106 	br	100042c <strlen+0x78>
 1000428:	10800044 	addi	r2,r2,1
 100042c:	10c00007 	ldb	r3,0(r2)
 1000430:	183ffd1e 	bne	r3,zero,1000428 <strlen+0x74>
 1000434:	1105c83a 	sub	r2,r2,r4
 1000438:	f800283a 	ret
 100043c:	2005883a 	mov	r2,r4
 1000440:	003fe706 	br	10003e0 <strlen+0x2c>
 1000444:	0005883a 	mov	r2,zero
 1000448:	f800283a 	ret

0100044c <___vfprintf_internal_r>:
 100044c:	deffb604 	addi	sp,sp,-296
 1000450:	dfc04915 	stw	ra,292(sp)
 1000454:	ddc04715 	stw	r23,284(sp)
 1000458:	dd804615 	stw	r22,280(sp)
 100045c:	282f883a 	mov	r23,r5
 1000460:	202d883a 	mov	r22,r4
 1000464:	d9802a15 	stw	r6,168(sp)
 1000468:	d9c02d15 	stw	r7,180(sp)
 100046c:	df004815 	stw	fp,288(sp)
 1000470:	dd404515 	stw	r21,276(sp)
 1000474:	dd004415 	stw	r20,272(sp)
 1000478:	dcc04315 	stw	r19,268(sp)
 100047c:	dc804215 	stw	r18,264(sp)
 1000480:	dc404115 	stw	r17,260(sp)
 1000484:	dc004015 	stw	r16,256(sp)
 1000488:	10050340 	call	1005034 <_localeconv_r>
 100048c:	10800017 	ldw	r2,0(r2)
 1000490:	1009883a 	mov	r4,r2
 1000494:	d8803515 	stw	r2,212(sp)
 1000498:	10003b40 	call	10003b4 <strlen>
 100049c:	d8803815 	stw	r2,224(sp)
 10004a0:	b0000226 	beq	r22,zero,10004ac <___vfprintf_internal_r+0x60>
 10004a4:	b0800e17 	ldw	r2,56(r22)
 10004a8:	1000e126 	beq	r2,zero,1000830 <___vfprintf_internal_r+0x3e4>
 10004ac:	b880030b 	ldhu	r2,12(r23)
 10004b0:	10c8000c 	andi	r3,r2,8192
 10004b4:	1800061e 	bne	r3,zero,10004d0 <___vfprintf_internal_r+0x84>
 10004b8:	b9001917 	ldw	r4,100(r23)
 10004bc:	00f7ffc4 	movi	r3,-8193
 10004c0:	10880014 	ori	r2,r2,8192
 10004c4:	20c6703a 	and	r3,r4,r3
 10004c8:	b880030d 	sth	r2,12(r23)
 10004cc:	b8c01915 	stw	r3,100(r23)
 10004d0:	10c0020c 	andi	r3,r2,8
 10004d4:	1800a726 	beq	r3,zero,1000774 <___vfprintf_internal_r+0x328>
 10004d8:	b8c00417 	ldw	r3,16(r23)
 10004dc:	1800a526 	beq	r3,zero,1000774 <___vfprintf_internal_r+0x328>
 10004e0:	1080068c 	andi	r2,r2,26
 10004e4:	00c00284 	movi	r3,10
 10004e8:	10c0aa26 	beq	r2,r3,1000794 <___vfprintf_internal_r+0x348>
 10004ec:	dac01e04 	addi	r11,sp,120
 10004f0:	db001dc4 	addi	r12,sp,119
 10004f4:	d8800404 	addi	r2,sp,16
 10004f8:	05004074 	movhi	r20,257
 10004fc:	dac02815 	stw	r11,160(sp)
 1000500:	5b17c83a 	sub	r11,r11,r12
 1000504:	a53b6084 	addi	r20,r20,-4734
 1000508:	db002915 	stw	r12,164(sp)
 100050c:	d8801e15 	stw	r2,120(sp)
 1000510:	d8002015 	stw	zero,128(sp)
 1000514:	d8001f15 	stw	zero,124(sp)
 1000518:	d8003315 	stw	zero,204(sp)
 100051c:	d8003715 	stw	zero,220(sp)
 1000520:	d8003915 	stw	zero,228(sp)
 1000524:	1011883a 	mov	r8,r2
 1000528:	d8003b15 	stw	zero,236(sp)
 100052c:	d8003a15 	stw	zero,232(sp)
 1000530:	d8002f15 	stw	zero,188(sp)
 1000534:	dac03c15 	stw	r11,240(sp)
 1000538:	db002a17 	ldw	r12,168(sp)
 100053c:	60800007 	ldb	r2,0(r12)
 1000540:	1000be26 	beq	r2,zero,100083c <___vfprintf_internal_r+0x3f0>
 1000544:	00c00944 	movi	r3,37
 1000548:	10c0bc26 	beq	r2,r3,100083c <___vfprintf_internal_r+0x3f0>
 100054c:	6021883a 	mov	r16,r12
 1000550:	00000106 	br	1000558 <___vfprintf_internal_r+0x10c>
 1000554:	10c08426 	beq	r2,r3,1000768 <___vfprintf_internal_r+0x31c>
 1000558:	84000044 	addi	r16,r16,1
 100055c:	80800007 	ldb	r2,0(r16)
 1000560:	103ffc1e 	bne	r2,zero,1000554 <___vfprintf_internal_r+0x108>
 1000564:	dac02a17 	ldw	r11,168(sp)
 1000568:	82e3c83a 	sub	r17,r16,r11
 100056c:	88000f26 	beq	r17,zero,10005ac <___vfprintf_internal_r+0x160>
 1000570:	d8c02017 	ldw	r3,128(sp)
 1000574:	d8801f17 	ldw	r2,124(sp)
 1000578:	dac02a17 	ldw	r11,168(sp)
 100057c:	1c47883a 	add	r3,r3,r17
 1000580:	10800044 	addi	r2,r2,1
 1000584:	d8c02015 	stw	r3,128(sp)
 1000588:	42c00015 	stw	r11,0(r8)
 100058c:	44400115 	stw	r17,4(r8)
 1000590:	d8801f15 	stw	r2,124(sp)
 1000594:	00c001c4 	movi	r3,7
 1000598:	18809316 	blt	r3,r2,10007e8 <___vfprintf_internal_r+0x39c>
 100059c:	42000204 	addi	r8,r8,8
 10005a0:	db002f17 	ldw	r12,188(sp)
 10005a4:	6459883a 	add	r12,r12,r17
 10005a8:	db002f15 	stw	r12,188(sp)
 10005ac:	80800007 	ldb	r2,0(r16)
 10005b0:	10009426 	beq	r2,zero,1000804 <___vfprintf_internal_r+0x3b8>
 10005b4:	80800044 	addi	r2,r16,1
 10005b8:	84000047 	ldb	r16,1(r16)
 10005bc:	d8002785 	stb	zero,158(sp)
 10005c0:	000d883a 	mov	r6,zero
 10005c4:	027fffc4 	movi	r9,-1
 10005c8:	d8002e15 	stw	zero,184(sp)
 10005cc:	0023883a 	mov	r17,zero
 10005d0:	01001604 	movi	r4,88
 10005d4:	01400244 	movi	r5,9
 10005d8:	02800a84 	movi	r10,42
 10005dc:	01c01b04 	movi	r7,108
 10005e0:	10c00044 	addi	r3,r2,1
 10005e4:	80bff804 	addi	r2,r16,-32
 10005e8:	2082cd36 	bltu	r4,r2,1001120 <___vfprintf_internal_r+0xcd4>
 10005ec:	100490ba 	slli	r2,r2,2
 10005f0:	02c04034 	movhi	r11,256
 10005f4:	5ac18104 	addi	r11,r11,1540
 10005f8:	12c5883a 	add	r2,r2,r11
 10005fc:	10800017 	ldw	r2,0(r2)
 1000600:	1000683a 	jmp	r2
 1000604:	01000f38 	rdprs	r4,zero,60
 1000608:	01001120 	cmpeqi	r4,zero,68
 100060c:	01001120 	cmpeqi	r4,zero,68
 1000610:	01001088 	cmpgei	r4,zero,66
 1000614:	01001120 	cmpeqi	r4,zero,68
 1000618:	01001120 	cmpeqi	r4,zero,68
 100061c:	01001120 	cmpeqi	r4,zero,68
 1000620:	01001120 	cmpeqi	r4,zero,68
 1000624:	01001120 	cmpeqi	r4,zero,68
 1000628:	01001120 	cmpeqi	r4,zero,68
 100062c:	01000f58 	cmpnei	r4,zero,61
 1000630:	01000f84 	movi	r4,62
 1000634:	01001120 	cmpeqi	r4,zero,68
 1000638:	01000844 	movi	r4,33
 100063c:	01000854 	movui	r4,33
 1000640:	01001120 	cmpeqi	r4,zero,68
 1000644:	01000894 	movui	r4,34
 1000648:	010008a4 	muli	r4,zero,34
 100064c:	010008a4 	muli	r4,zero,34
 1000650:	010008a4 	muli	r4,zero,34
 1000654:	010008a4 	muli	r4,zero,34
 1000658:	010008a4 	muli	r4,zero,34
 100065c:	010008a4 	muli	r4,zero,34
 1000660:	010008a4 	muli	r4,zero,34
 1000664:	010008a4 	muli	r4,zero,34
 1000668:	010008a4 	muli	r4,zero,34
 100066c:	01001120 	cmpeqi	r4,zero,68
 1000670:	01001120 	cmpeqi	r4,zero,68
 1000674:	01001120 	cmpeqi	r4,zero,68
 1000678:	01001120 	cmpeqi	r4,zero,68
 100067c:	01001120 	cmpeqi	r4,zero,68
 1000680:	01001120 	cmpeqi	r4,zero,68
 1000684:	01001120 	cmpeqi	r4,zero,68
 1000688:	01001120 	cmpeqi	r4,zero,68
 100068c:	01001120 	cmpeqi	r4,zero,68
 1000690:	01001120 	cmpeqi	r4,zero,68
 1000694:	010008d8 	cmpnei	r4,zero,35
 1000698:	01000d48 	cmpgei	r4,zero,53
 100069c:	01001120 	cmpeqi	r4,zero,68
 10006a0:	01000d48 	cmpgei	r4,zero,53
 10006a4:	01001120 	cmpeqi	r4,zero,68
 10006a8:	01001120 	cmpeqi	r4,zero,68
 10006ac:	01001120 	cmpeqi	r4,zero,68
 10006b0:	01001120 	cmpeqi	r4,zero,68
 10006b4:	01000e34 	movhi	r4,56
 10006b8:	01001120 	cmpeqi	r4,zero,68
 10006bc:	01001120 	cmpeqi	r4,zero,68
 10006c0:	01000cdc 	xori	r4,zero,51
 10006c4:	01001120 	cmpeqi	r4,zero,68
 10006c8:	01001120 	cmpeqi	r4,zero,68
 10006cc:	01001120 	cmpeqi	r4,zero,68
 10006d0:	01001120 	cmpeqi	r4,zero,68
 10006d4:	01001120 	cmpeqi	r4,zero,68
 10006d8:	01000d18 	cmpnei	r4,zero,52
 10006dc:	01001120 	cmpeqi	r4,zero,68
 10006e0:	01001120 	cmpeqi	r4,zero,68
 10006e4:	01000edc 	xori	r4,zero,59
 10006e8:	01001120 	cmpeqi	r4,zero,68
 10006ec:	01001120 	cmpeqi	r4,zero,68
 10006f0:	01001120 	cmpeqi	r4,zero,68
 10006f4:	01001120 	cmpeqi	r4,zero,68
 10006f8:	01001120 	cmpeqi	r4,zero,68
 10006fc:	01001120 	cmpeqi	r4,zero,68
 1000700:	01001120 	cmpeqi	r4,zero,68
 1000704:	01001120 	cmpeqi	r4,zero,68
 1000708:	01001120 	cmpeqi	r4,zero,68
 100070c:	01001120 	cmpeqi	r4,zero,68
 1000710:	01000f94 	movui	r4,62
 1000714:	01000e44 	movi	r4,57
 1000718:	01000d48 	cmpgei	r4,zero,53
 100071c:	01000d48 	cmpgei	r4,zero,53
 1000720:	01000d48 	cmpgei	r4,zero,53
 1000724:	01000e84 	movi	r4,58
 1000728:	01000e44 	movi	r4,57
 100072c:	01001120 	cmpeqi	r4,zero,68
 1000730:	01001120 	cmpeqi	r4,zero,68
 1000734:	01000e94 	movui	r4,58
 1000738:	01001120 	cmpeqi	r4,zero,68
 100073c:	01000ea8 	cmpgeui	r4,zero,58
 1000740:	010010e4 	muli	r4,zero,67
 1000744:	01000dec 	andhi	r4,zero,55
 1000748:	01001098 	cmpnei	r4,zero,66
 100074c:	01001120 	cmpeqi	r4,zero,68
 1000750:	01000fd4 	movui	r4,63
 1000754:	01001120 	cmpeqi	r4,zero,68
 1000758:	010010a8 	cmpgeui	r4,zero,66
 100075c:	01001120 	cmpeqi	r4,zero,68
 1000760:	01001120 	cmpeqi	r4,zero,68
 1000764:	01001048 	cmpgei	r4,zero,65
 1000768:	db002a17 	ldw	r12,168(sp)
 100076c:	8323c83a 	sub	r17,r16,r12
 1000770:	003f7e06 	br	100056c <___vfprintf_internal_r+0x120>
 1000774:	b009883a 	mov	r4,r22
 1000778:	b80b883a 	mov	r5,r23
 100077c:	100247c0 	call	100247c <__swsetup_r>
 1000780:	10000c1e 	bne	r2,zero,10007b4 <___vfprintf_internal_r+0x368>
 1000784:	b880030b 	ldhu	r2,12(r23)
 1000788:	00c00284 	movi	r3,10
 100078c:	1080068c 	andi	r2,r2,26
 1000790:	10ff561e 	bne	r2,r3,10004ec <___vfprintf_internal_r+0xa0>
 1000794:	b880038f 	ldh	r2,14(r23)
 1000798:	103f5416 	blt	r2,zero,10004ec <___vfprintf_internal_r+0xa0>
 100079c:	d9802a17 	ldw	r6,168(sp)
 10007a0:	d9c02d17 	ldw	r7,180(sp)
 10007a4:	b009883a 	mov	r4,r22
 10007a8:	b80b883a 	mov	r5,r23
 10007ac:	10023c00 	call	10023c0 <__sbprintf>
 10007b0:	00000106 	br	10007b8 <___vfprintf_internal_r+0x36c>
 10007b4:	00bfffc4 	movi	r2,-1
 10007b8:	dfc04917 	ldw	ra,292(sp)
 10007bc:	df004817 	ldw	fp,288(sp)
 10007c0:	ddc04717 	ldw	r23,284(sp)
 10007c4:	dd804617 	ldw	r22,280(sp)
 10007c8:	dd404517 	ldw	r21,276(sp)
 10007cc:	dd004417 	ldw	r20,272(sp)
 10007d0:	dcc04317 	ldw	r19,268(sp)
 10007d4:	dc804217 	ldw	r18,264(sp)
 10007d8:	dc404117 	ldw	r17,260(sp)
 10007dc:	dc004017 	ldw	r16,256(sp)
 10007e0:	dec04a04 	addi	sp,sp,296
 10007e4:	f800283a 	ret
 10007e8:	b009883a 	mov	r4,r22
 10007ec:	b80b883a 	mov	r5,r23
 10007f0:	d9801e04 	addi	r6,sp,120
 10007f4:	10077140 	call	1007714 <__sprint_r>
 10007f8:	1000081e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 10007fc:	da000404 	addi	r8,sp,16
 1000800:	003f6706 	br	10005a0 <___vfprintf_internal_r+0x154>
 1000804:	d8802017 	ldw	r2,128(sp)
 1000808:	10000426 	beq	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 100080c:	b009883a 	mov	r4,r22
 1000810:	b80b883a 	mov	r5,r23
 1000814:	d9801e04 	addi	r6,sp,120
 1000818:	10077140 	call	1007714 <__sprint_r>
 100081c:	b880030b 	ldhu	r2,12(r23)
 1000820:	1080100c 	andi	r2,r2,64
 1000824:	103fe31e 	bne	r2,zero,10007b4 <___vfprintf_internal_r+0x368>
 1000828:	d8802f17 	ldw	r2,188(sp)
 100082c:	003fe206 	br	10007b8 <___vfprintf_internal_r+0x36c>
 1000830:	b009883a 	mov	r4,r22
 1000834:	10044dc0 	call	10044dc <__sinit>
 1000838:	003f1c06 	br	10004ac <___vfprintf_internal_r+0x60>
 100083c:	dc002a17 	ldw	r16,168(sp)
 1000840:	003f5a06 	br	10005ac <___vfprintf_internal_r+0x160>
 1000844:	1805883a 	mov	r2,r3
 1000848:	8c400114 	ori	r17,r17,4
 100084c:	1c000007 	ldb	r16,0(r3)
 1000850:	003f6306 	br	10005e0 <___vfprintf_internal_r+0x194>
 1000854:	1c000007 	ldb	r16,0(r3)
 1000858:	18800044 	addi	r2,r3,1
 100085c:	8286ad26 	beq	r16,r10,1002314 <___vfprintf_internal_r+0x1ec8>
 1000860:	82fff404 	addi	r11,r16,-48
 1000864:	1007883a 	mov	r3,r2
 1000868:	0013883a 	mov	r9,zero
 100086c:	2aff5d36 	bltu	r5,r11,10005e4 <___vfprintf_internal_r+0x198>
 1000870:	1c000007 	ldb	r16,0(r3)
 1000874:	4a4002a4 	muli	r9,r9,10
 1000878:	18c00044 	addi	r3,r3,1
 100087c:	5a53883a 	add	r9,r11,r9
 1000880:	82fff404 	addi	r11,r16,-48
 1000884:	2afffa2e 	bgeu	r5,r11,1000870 <___vfprintf_internal_r+0x424>
 1000888:	483f560e 	bge	r9,zero,10005e4 <___vfprintf_internal_r+0x198>
 100088c:	027fffc4 	movi	r9,-1
 1000890:	003f5406 	br	10005e4 <___vfprintf_internal_r+0x198>
 1000894:	8c402014 	ori	r17,r17,128
 1000898:	1805883a 	mov	r2,r3
 100089c:	1c000007 	ldb	r16,0(r3)
 10008a0:	003f4f06 	br	10005e0 <___vfprintf_internal_r+0x194>
 10008a4:	1805883a 	mov	r2,r3
 10008a8:	d8002e15 	stw	zero,184(sp)
 10008ac:	82fff404 	addi	r11,r16,-48
 10008b0:	0019883a 	mov	r12,zero
 10008b4:	14000007 	ldb	r16,0(r2)
 10008b8:	630002a4 	muli	r12,r12,10
 10008bc:	18c00044 	addi	r3,r3,1
 10008c0:	1805883a 	mov	r2,r3
 10008c4:	62d9883a 	add	r12,r12,r11
 10008c8:	82fff404 	addi	r11,r16,-48
 10008cc:	2afff92e 	bgeu	r5,r11,10008b4 <___vfprintf_internal_r+0x468>
 10008d0:	db002e15 	stw	r12,184(sp)
 10008d4:	003f4306 	br	10005e4 <___vfprintf_internal_r+0x198>
 10008d8:	8c400414 	ori	r17,r17,16
 10008dc:	d8c02a15 	stw	r3,168(sp)
 10008e0:	d9802785 	stb	r6,158(sp)
 10008e4:	8880080c 	andi	r2,r17,32
 10008e8:	d8c02d17 	ldw	r3,180(sp)
 10008ec:	10015a26 	beq	r2,zero,1000e58 <___vfprintf_internal_r+0xa0c>
 10008f0:	db002d17 	ldw	r12,180(sp)
 10008f4:	18800117 	ldw	r2,4(r3)
 10008f8:	1cc00017 	ldw	r19,0(r3)
 10008fc:	63000204 	addi	r12,r12,8
 1000900:	db002d15 	stw	r12,180(sp)
 1000904:	1039883a 	mov	fp,r2
 1000908:	10044516 	blt	r2,zero,1001a20 <___vfprintf_internal_r+0x15d4>
 100090c:	dd402783 	ldbu	r21,158(sp)
 1000910:	da403215 	stw	r9,200(sp)
 1000914:	00800044 	movi	r2,1
 1000918:	9f06b03a 	or	r3,r19,fp
 100091c:	48000216 	blt	r9,zero,1000928 <___vfprintf_internal_r+0x4dc>
 1000920:	013fdfc4 	movi	r4,-129
 1000924:	8922703a 	and	r17,r17,r4
 1000928:	1802071e 	bne	r3,zero,1001148 <___vfprintf_internal_r+0xcfc>
 100092c:	4802fa26 	beq	r9,zero,1001518 <___vfprintf_internal_r+0x10cc>
 1000930:	10803fcc 	andi	r2,r2,255
 1000934:	00c00044 	movi	r3,1
 1000938:	10c22926 	beq	r2,r3,10011e0 <___vfprintf_internal_r+0xd94>
 100093c:	00c00084 	movi	r3,2
 1000940:	10c31726 	beq	r2,r3,10015a0 <___vfprintf_internal_r+0x1154>
 1000944:	d8c01e04 	addi	r3,sp,120
 1000948:	9808d0fa 	srli	r4,r19,3
 100094c:	e00a977a 	slli	r5,fp,29
 1000950:	e038d0fa 	srli	fp,fp,3
 1000954:	9cc001cc 	andi	r19,r19,7
 1000958:	98800c04 	addi	r2,r19,48
 100095c:	18ffffc4 	addi	r3,r3,-1
 1000960:	2926b03a 	or	r19,r5,r4
 1000964:	18800005 	stb	r2,0(r3)
 1000968:	9f08b03a 	or	r4,r19,fp
 100096c:	203ff61e 	bne	r4,zero,1000948 <___vfprintf_internal_r+0x4fc>
 1000970:	8900004c 	andi	r4,r17,1
 1000974:	d8c03115 	stw	r3,196(sp)
 1000978:	2003931e 	bne	r4,zero,10017c8 <___vfprintf_internal_r+0x137c>
 100097c:	dac02817 	ldw	r11,160(sp)
 1000980:	58e5c83a 	sub	r18,r11,r3
 1000984:	9005883a 	mov	r2,r18
 1000988:	9240010e 	bge	r18,r9,1000990 <___vfprintf_internal_r+0x544>
 100098c:	4805883a 	mov	r2,r9
 1000990:	d8802b15 	stw	r2,172(sp)
 1000994:	d8003415 	stw	zero,208(sp)
 1000998:	a8803fcc 	andi	r2,r21,255
 100099c:	1080201c 	xori	r2,r2,128
 10009a0:	10bfe004 	addi	r2,r2,-128
 10009a4:	10000326 	beq	r2,zero,10009b4 <___vfprintf_internal_r+0x568>
 10009a8:	db002b17 	ldw	r12,172(sp)
 10009ac:	63000044 	addi	r12,r12,1
 10009b0:	db002b15 	stw	r12,172(sp)
 10009b4:	88c0008c 	andi	r3,r17,2
 10009b8:	d8c02c15 	stw	r3,176(sp)
 10009bc:	18000326 	beq	r3,zero,10009cc <___vfprintf_internal_r+0x580>
 10009c0:	dac02b17 	ldw	r11,172(sp)
 10009c4:	5ac00084 	addi	r11,r11,2
 10009c8:	dac02b15 	stw	r11,172(sp)
 10009cc:	8b00210c 	andi	r12,r17,132
 10009d0:	db003015 	stw	r12,192(sp)
 10009d4:	6001da1e 	bne	r12,zero,1001140 <___vfprintf_internal_r+0xcf4>
 10009d8:	dac02e17 	ldw	r11,184(sp)
 10009dc:	db002b17 	ldw	r12,172(sp)
 10009e0:	5b39c83a 	sub	fp,r11,r12
 10009e4:	0701d60e 	bge	zero,fp,1001140 <___vfprintf_internal_r+0xcf4>
 10009e8:	02400404 	movi	r9,16
 10009ec:	d8c02017 	ldw	r3,128(sp)
 10009f0:	d8801f17 	ldw	r2,124(sp)
 10009f4:	4f053c0e 	bge	r9,fp,1001ee8 <___vfprintf_internal_r+0x1a9c>
 10009f8:	01404074 	movhi	r5,257
 10009fc:	297b6484 	addi	r5,r5,-4718
 1000a00:	d9403615 	stw	r5,216(sp)
 1000a04:	482b883a 	mov	r21,r9
 1000a08:	04c001c4 	movi	r19,7
 1000a0c:	00000306 	br	1000a1c <___vfprintf_internal_r+0x5d0>
 1000a10:	e73ffc04 	addi	fp,fp,-16
 1000a14:	42000204 	addi	r8,r8,8
 1000a18:	af00130e 	bge	r21,fp,1000a68 <___vfprintf_internal_r+0x61c>
 1000a1c:	02c04074 	movhi	r11,257
 1000a20:	18c00404 	addi	r3,r3,16
 1000a24:	10800044 	addi	r2,r2,1
 1000a28:	5afb6484 	addi	r11,r11,-4718
 1000a2c:	42c00015 	stw	r11,0(r8)
 1000a30:	45400115 	stw	r21,4(r8)
 1000a34:	d8c02015 	stw	r3,128(sp)
 1000a38:	d8801f15 	stw	r2,124(sp)
 1000a3c:	98bff40e 	bge	r19,r2,1000a10 <___vfprintf_internal_r+0x5c4>
 1000a40:	b009883a 	mov	r4,r22
 1000a44:	b80b883a 	mov	r5,r23
 1000a48:	d9801e04 	addi	r6,sp,120
 1000a4c:	10077140 	call	1007714 <__sprint_r>
 1000a50:	103f721e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1000a54:	e73ffc04 	addi	fp,fp,-16
 1000a58:	d8c02017 	ldw	r3,128(sp)
 1000a5c:	d8801f17 	ldw	r2,124(sp)
 1000a60:	da000404 	addi	r8,sp,16
 1000a64:	af3fed16 	blt	r21,fp,1000a1c <___vfprintf_internal_r+0x5d0>
 1000a68:	db003617 	ldw	r12,216(sp)
 1000a6c:	e0c7883a 	add	r3,fp,r3
 1000a70:	10800044 	addi	r2,r2,1
 1000a74:	43000015 	stw	r12,0(r8)
 1000a78:	47000115 	stw	fp,4(r8)
 1000a7c:	d8c02015 	stw	r3,128(sp)
 1000a80:	d8801f15 	stw	r2,124(sp)
 1000a84:	010001c4 	movi	r4,7
 1000a88:	20830e16 	blt	r4,r2,10016c4 <___vfprintf_internal_r+0x1278>
 1000a8c:	d8802787 	ldb	r2,158(sp)
 1000a90:	42000204 	addi	r8,r8,8
 1000a94:	10000c26 	beq	r2,zero,1000ac8 <___vfprintf_internal_r+0x67c>
 1000a98:	d8801f17 	ldw	r2,124(sp)
 1000a9c:	d9002784 	addi	r4,sp,158
 1000aa0:	18c00044 	addi	r3,r3,1
 1000aa4:	10800044 	addi	r2,r2,1
 1000aa8:	41000015 	stw	r4,0(r8)
 1000aac:	01000044 	movi	r4,1
 1000ab0:	41000115 	stw	r4,4(r8)
 1000ab4:	d8c02015 	stw	r3,128(sp)
 1000ab8:	d8801f15 	stw	r2,124(sp)
 1000abc:	010001c4 	movi	r4,7
 1000ac0:	2082a716 	blt	r4,r2,1001560 <___vfprintf_internal_r+0x1114>
 1000ac4:	42000204 	addi	r8,r8,8
 1000ac8:	dac02c17 	ldw	r11,176(sp)
 1000acc:	58000c26 	beq	r11,zero,1000b00 <___vfprintf_internal_r+0x6b4>
 1000ad0:	d8801f17 	ldw	r2,124(sp)
 1000ad4:	d9002704 	addi	r4,sp,156
 1000ad8:	18c00084 	addi	r3,r3,2
 1000adc:	10800044 	addi	r2,r2,1
 1000ae0:	41000015 	stw	r4,0(r8)
 1000ae4:	01000084 	movi	r4,2
 1000ae8:	41000115 	stw	r4,4(r8)
 1000aec:	d8c02015 	stw	r3,128(sp)
 1000af0:	d8801f15 	stw	r2,124(sp)
 1000af4:	010001c4 	movi	r4,7
 1000af8:	2082a116 	blt	r4,r2,1001580 <___vfprintf_internal_r+0x1134>
 1000afc:	42000204 	addi	r8,r8,8
 1000b00:	db003017 	ldw	r12,192(sp)
 1000b04:	00802004 	movi	r2,128
 1000b08:	60820326 	beq	r12,r2,1001318 <___vfprintf_internal_r+0xecc>
 1000b0c:	db003217 	ldw	r12,200(sp)
 1000b10:	64abc83a 	sub	r21,r12,r18
 1000b14:	0540260e 	bge	zero,r21,1000bb0 <___vfprintf_internal_r+0x764>
 1000b18:	07000404 	movi	fp,16
 1000b1c:	d8801f17 	ldw	r2,124(sp)
 1000b20:	e544570e 	bge	fp,r21,1001c80 <___vfprintf_internal_r+0x1834>
 1000b24:	01404074 	movhi	r5,257
 1000b28:	297b6084 	addi	r5,r5,-4734
 1000b2c:	d9402c15 	stw	r5,176(sp)
 1000b30:	04c001c4 	movi	r19,7
 1000b34:	00000306 	br	1000b44 <___vfprintf_internal_r+0x6f8>
 1000b38:	ad7ffc04 	addi	r21,r21,-16
 1000b3c:	42000204 	addi	r8,r8,8
 1000b40:	e540110e 	bge	fp,r21,1000b88 <___vfprintf_internal_r+0x73c>
 1000b44:	18c00404 	addi	r3,r3,16
 1000b48:	10800044 	addi	r2,r2,1
 1000b4c:	45000015 	stw	r20,0(r8)
 1000b50:	47000115 	stw	fp,4(r8)
 1000b54:	d8c02015 	stw	r3,128(sp)
 1000b58:	d8801f15 	stw	r2,124(sp)
 1000b5c:	98bff60e 	bge	r19,r2,1000b38 <___vfprintf_internal_r+0x6ec>
 1000b60:	b009883a 	mov	r4,r22
 1000b64:	b80b883a 	mov	r5,r23
 1000b68:	d9801e04 	addi	r6,sp,120
 1000b6c:	10077140 	call	1007714 <__sprint_r>
 1000b70:	103f2a1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1000b74:	ad7ffc04 	addi	r21,r21,-16
 1000b78:	d8c02017 	ldw	r3,128(sp)
 1000b7c:	d8801f17 	ldw	r2,124(sp)
 1000b80:	da000404 	addi	r8,sp,16
 1000b84:	e57fef16 	blt	fp,r21,1000b44 <___vfprintf_internal_r+0x6f8>
 1000b88:	dac02c17 	ldw	r11,176(sp)
 1000b8c:	1d47883a 	add	r3,r3,r21
 1000b90:	10800044 	addi	r2,r2,1
 1000b94:	42c00015 	stw	r11,0(r8)
 1000b98:	45400115 	stw	r21,4(r8)
 1000b9c:	d8c02015 	stw	r3,128(sp)
 1000ba0:	d8801f15 	stw	r2,124(sp)
 1000ba4:	010001c4 	movi	r4,7
 1000ba8:	20826516 	blt	r4,r2,1001540 <___vfprintf_internal_r+0x10f4>
 1000bac:	42000204 	addi	r8,r8,8
 1000bb0:	8880400c 	andi	r2,r17,256
 1000bb4:	1001901e 	bne	r2,zero,10011f8 <___vfprintf_internal_r+0xdac>
 1000bb8:	d8801f17 	ldw	r2,124(sp)
 1000bbc:	db003117 	ldw	r12,196(sp)
 1000bc0:	1c87883a 	add	r3,r3,r18
 1000bc4:	10800044 	addi	r2,r2,1
 1000bc8:	43000015 	stw	r12,0(r8)
 1000bcc:	44800115 	stw	r18,4(r8)
 1000bd0:	d8c02015 	stw	r3,128(sp)
 1000bd4:	d8801f15 	stw	r2,124(sp)
 1000bd8:	010001c4 	movi	r4,7
 1000bdc:	20824016 	blt	r4,r2,10014e0 <___vfprintf_internal_r+0x1094>
 1000be0:	42000204 	addi	r8,r8,8
 1000be4:	8c40010c 	andi	r17,r17,4
 1000be8:	88003126 	beq	r17,zero,1000cb0 <___vfprintf_internal_r+0x864>
 1000bec:	db002e17 	ldw	r12,184(sp)
 1000bf0:	dac02b17 	ldw	r11,172(sp)
 1000bf4:	62e1c83a 	sub	r16,r12,r11
 1000bf8:	04002d0e 	bge	zero,r16,1000cb0 <___vfprintf_internal_r+0x864>
 1000bfc:	04400404 	movi	r17,16
 1000c00:	d8801f17 	ldw	r2,124(sp)
 1000c04:	8c05150e 	bge	r17,r16,100205c <___vfprintf_internal_r+0x1c10>
 1000c08:	01004074 	movhi	r4,257
 1000c0c:	213b6484 	addi	r4,r4,-4718
 1000c10:	d9003615 	stw	r4,216(sp)
 1000c14:	048001c4 	movi	r18,7
 1000c18:	00000306 	br	1000c28 <___vfprintf_internal_r+0x7dc>
 1000c1c:	843ffc04 	addi	r16,r16,-16
 1000c20:	42000204 	addi	r8,r8,8
 1000c24:	8c00130e 	bge	r17,r16,1000c74 <___vfprintf_internal_r+0x828>
 1000c28:	01404074 	movhi	r5,257
 1000c2c:	18c00404 	addi	r3,r3,16
 1000c30:	10800044 	addi	r2,r2,1
 1000c34:	297b6484 	addi	r5,r5,-4718
 1000c38:	41400015 	stw	r5,0(r8)
 1000c3c:	44400115 	stw	r17,4(r8)
 1000c40:	d8c02015 	stw	r3,128(sp)
 1000c44:	d8801f15 	stw	r2,124(sp)
 1000c48:	90bff40e 	bge	r18,r2,1000c1c <___vfprintf_internal_r+0x7d0>
 1000c4c:	b009883a 	mov	r4,r22
 1000c50:	b80b883a 	mov	r5,r23
 1000c54:	d9801e04 	addi	r6,sp,120
 1000c58:	10077140 	call	1007714 <__sprint_r>
 1000c5c:	103eef1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1000c60:	843ffc04 	addi	r16,r16,-16
 1000c64:	d8c02017 	ldw	r3,128(sp)
 1000c68:	d8801f17 	ldw	r2,124(sp)
 1000c6c:	da000404 	addi	r8,sp,16
 1000c70:	8c3fed16 	blt	r17,r16,1000c28 <___vfprintf_internal_r+0x7dc>
 1000c74:	dac03617 	ldw	r11,216(sp)
 1000c78:	1c07883a 	add	r3,r3,r16
 1000c7c:	10800044 	addi	r2,r2,1
 1000c80:	42c00015 	stw	r11,0(r8)
 1000c84:	44000115 	stw	r16,4(r8)
 1000c88:	d8c02015 	stw	r3,128(sp)
 1000c8c:	d8801f15 	stw	r2,124(sp)
 1000c90:	010001c4 	movi	r4,7
 1000c94:	2080060e 	bge	r4,r2,1000cb0 <___vfprintf_internal_r+0x864>
 1000c98:	b009883a 	mov	r4,r22
 1000c9c:	b80b883a 	mov	r5,r23
 1000ca0:	d9801e04 	addi	r6,sp,120
 1000ca4:	10077140 	call	1007714 <__sprint_r>
 1000ca8:	103edc1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1000cac:	d8c02017 	ldw	r3,128(sp)
 1000cb0:	d8802b17 	ldw	r2,172(sp)
 1000cb4:	db002e17 	ldw	r12,184(sp)
 1000cb8:	1300010e 	bge	r2,r12,1000cc0 <___vfprintf_internal_r+0x874>
 1000cbc:	6005883a 	mov	r2,r12
 1000cc0:	dac02f17 	ldw	r11,188(sp)
 1000cc4:	5897883a 	add	r11,r11,r2
 1000cc8:	dac02f15 	stw	r11,188(sp)
 1000ccc:	18020c1e 	bne	r3,zero,1001500 <___vfprintf_internal_r+0x10b4>
 1000cd0:	d8001f15 	stw	zero,124(sp)
 1000cd4:	da000404 	addi	r8,sp,16
 1000cd8:	003e1706 	br	1000538 <___vfprintf_internal_r+0xec>
 1000cdc:	8c400414 	ori	r17,r17,16
 1000ce0:	d8c02a15 	stw	r3,168(sp)
 1000ce4:	8880080c 	andi	r2,r17,32
 1000ce8:	10010126 	beq	r2,zero,10010f0 <___vfprintf_internal_r+0xca4>
 1000cec:	db002d17 	ldw	r12,180(sp)
 1000cf0:	0005883a 	mov	r2,zero
 1000cf4:	64c00017 	ldw	r19,0(r12)
 1000cf8:	67000117 	ldw	fp,4(r12)
 1000cfc:	63000204 	addi	r12,r12,8
 1000d00:	db002d15 	stw	r12,180(sp)
 1000d04:	9f06b03a 	or	r3,r19,fp
 1000d08:	d8002785 	stb	zero,158(sp)
 1000d0c:	da403215 	stw	r9,200(sp)
 1000d10:	002b883a 	mov	r21,zero
 1000d14:	003f0106 	br	100091c <___vfprintf_internal_r+0x4d0>
 1000d18:	8c400414 	ori	r17,r17,16
 1000d1c:	d8c02a15 	stw	r3,168(sp)
 1000d20:	8880080c 	andi	r2,r17,32
 1000d24:	1000e326 	beq	r2,zero,10010b4 <___vfprintf_internal_r+0xc68>
 1000d28:	dac02d17 	ldw	r11,180(sp)
 1000d2c:	00800044 	movi	r2,1
 1000d30:	5cc00017 	ldw	r19,0(r11)
 1000d34:	5f000117 	ldw	fp,4(r11)
 1000d38:	5ac00204 	addi	r11,r11,8
 1000d3c:	dac02d15 	stw	r11,180(sp)
 1000d40:	9f06b03a 	or	r3,r19,fp
 1000d44:	003ff006 	br	1000d08 <___vfprintf_internal_r+0x8bc>
 1000d48:	db002d17 	ldw	r12,180(sp)
 1000d4c:	dac02d17 	ldw	r11,180(sp)
 1000d50:	d8c02a15 	stw	r3,168(sp)
 1000d54:	63000017 	ldw	r12,0(r12)
 1000d58:	5ac00117 	ldw	r11,4(r11)
 1000d5c:	d9802785 	stb	r6,158(sp)
 1000d60:	6009883a 	mov	r4,r12
 1000d64:	580b883a 	mov	r5,r11
 1000d68:	db003715 	stw	r12,220(sp)
 1000d6c:	da003f15 	stw	r8,252(sp)
 1000d70:	da403e15 	stw	r9,248(sp)
 1000d74:	dac03915 	stw	r11,228(sp)
 1000d78:	10073700 	call	1007370 <__fpclassifyd>
 1000d7c:	db002d17 	ldw	r12,180(sp)
 1000d80:	04800044 	movi	r18,1
 1000d84:	da003f17 	ldw	r8,252(sp)
 1000d88:	64c00204 	addi	r19,r12,8
 1000d8c:	da403e17 	ldw	r9,248(sp)
 1000d90:	d9003717 	ldw	r4,220(sp)
 1000d94:	d9403917 	ldw	r5,228(sp)
 1000d98:	14832b1e 	bne	r2,r18,1001a48 <___vfprintf_internal_r+0x15fc>
 1000d9c:	000d883a 	mov	r6,zero
 1000da0:	000f883a 	mov	r7,zero
 1000da4:	100b31c0 	call	100b31c <__ledf2>
 1000da8:	da003f17 	ldw	r8,252(sp)
 1000dac:	1004b716 	blt	r2,zero,100208c <___vfprintf_internal_r+0x1c40>
 1000db0:	dd402783 	ldbu	r21,158(sp)
 1000db4:	008011c4 	movi	r2,71
 1000db8:	14040e0e 	bge	r2,r16,1001df4 <___vfprintf_internal_r+0x19a8>
 1000dbc:	00c04074 	movhi	r3,257
 1000dc0:	18fb5104 	addi	r3,r3,-4796
 1000dc4:	d8c03115 	stw	r3,196(sp)
 1000dc8:	02c000c4 	movi	r11,3
 1000dcc:	00bfdfc4 	movi	r2,-129
 1000dd0:	dac02b15 	stw	r11,172(sp)
 1000dd4:	88a2703a 	and	r17,r17,r2
 1000dd8:	dcc02d15 	stw	r19,180(sp)
 1000ddc:	5825883a 	mov	r18,r11
 1000de0:	d8003215 	stw	zero,200(sp)
 1000de4:	d8003415 	stw	zero,208(sp)
 1000de8:	003eeb06 	br	1000998 <___vfprintf_internal_r+0x54c>
 1000dec:	db002d17 	ldw	r12,180(sp)
 1000df0:	00800c04 	movi	r2,48
 1000df4:	d8802705 	stb	r2,156(sp)
 1000df8:	64c00017 	ldw	r19,0(r12)
 1000dfc:	00801e04 	movi	r2,120
 1000e00:	d8802745 	stb	r2,157(sp)
 1000e04:	00804074 	movhi	r2,257
 1000e08:	10bb5904 	addi	r2,r2,-4764
 1000e0c:	63000104 	addi	r12,r12,4
 1000e10:	d8c02a15 	stw	r3,168(sp)
 1000e14:	d8803b15 	stw	r2,236(sp)
 1000e18:	0039883a 	mov	fp,zero
 1000e1c:	8c400094 	ori	r17,r17,2
 1000e20:	db002d15 	stw	r12,180(sp)
 1000e24:	00800084 	movi	r2,2
 1000e28:	04001e04 	movi	r16,120
 1000e2c:	9807883a 	mov	r3,r19
 1000e30:	003fb506 	br	1000d08 <___vfprintf_internal_r+0x8bc>
 1000e34:	8c400214 	ori	r17,r17,8
 1000e38:	1805883a 	mov	r2,r3
 1000e3c:	1c000007 	ldb	r16,0(r3)
 1000e40:	003de706 	br	10005e0 <___vfprintf_internal_r+0x194>
 1000e44:	d8c02a15 	stw	r3,168(sp)
 1000e48:	d9802785 	stb	r6,158(sp)
 1000e4c:	8880080c 	andi	r2,r17,32
 1000e50:	d8c02d17 	ldw	r3,180(sp)
 1000e54:	103ea61e 	bne	r2,zero,10008f0 <___vfprintf_internal_r+0x4a4>
 1000e58:	8880040c 	andi	r2,r17,16
 1000e5c:	1002221e 	bne	r2,zero,10016e8 <___vfprintf_internal_r+0x129c>
 1000e60:	8880100c 	andi	r2,r17,64
 1000e64:	10022026 	beq	r2,zero,10016e8 <___vfprintf_internal_r+0x129c>
 1000e68:	1cc0000f 	ldh	r19,0(r3)
 1000e6c:	db002d17 	ldw	r12,180(sp)
 1000e70:	9839d7fa 	srai	fp,r19,31
 1000e74:	63000104 	addi	r12,r12,4
 1000e78:	db002d15 	stw	r12,180(sp)
 1000e7c:	e005883a 	mov	r2,fp
 1000e80:	003ea106 	br	1000908 <___vfprintf_internal_r+0x4bc>
 1000e84:	8c401014 	ori	r17,r17,64
 1000e88:	1805883a 	mov	r2,r3
 1000e8c:	1c000007 	ldb	r16,0(r3)
 1000e90:	003dd306 	br	10005e0 <___vfprintf_internal_r+0x194>
 1000e94:	1c000007 	ldb	r16,0(r3)
 1000e98:	81c3e926 	beq	r16,r7,1001e40 <___vfprintf_internal_r+0x19f4>
 1000e9c:	8c400414 	ori	r17,r17,16
 1000ea0:	1805883a 	mov	r2,r3
 1000ea4:	003dce06 	br	10005e0 <___vfprintf_internal_r+0x194>
 1000ea8:	d8c02a15 	stw	r3,168(sp)
 1000eac:	d9802785 	stb	r6,158(sp)
 1000eb0:	8880080c 	andi	r2,r17,32
 1000eb4:	10034726 	beq	r2,zero,1001bd4 <___vfprintf_internal_r+0x1788>
 1000eb8:	db002d17 	ldw	r12,180(sp)
 1000ebc:	dac02f17 	ldw	r11,188(sp)
 1000ec0:	60800017 	ldw	r2,0(r12)
 1000ec4:	5807d7fa 	srai	r3,r11,31
 1000ec8:	63000104 	addi	r12,r12,4
 1000ecc:	db002d15 	stw	r12,180(sp)
 1000ed0:	12c00015 	stw	r11,0(r2)
 1000ed4:	10c00115 	stw	r3,4(r2)
 1000ed8:	003d9706 	br	1000538 <___vfprintf_internal_r+0xec>
 1000edc:	03004074 	movhi	r12,257
 1000ee0:	633b5404 	addi	r12,r12,-4784
 1000ee4:	d8c02a15 	stw	r3,168(sp)
 1000ee8:	d9802785 	stb	r6,158(sp)
 1000eec:	db003b15 	stw	r12,236(sp)
 1000ef0:	88c0080c 	andi	r3,r17,32
 1000ef4:	d8802d17 	ldw	r2,180(sp)
 1000ef8:	18005b26 	beq	r3,zero,1001068 <___vfprintf_internal_r+0xc1c>
 1000efc:	dac02d17 	ldw	r11,180(sp)
 1000f00:	14c00017 	ldw	r19,0(r2)
 1000f04:	17000117 	ldw	fp,4(r2)
 1000f08:	5ac00204 	addi	r11,r11,8
 1000f0c:	dac02d15 	stw	r11,180(sp)
 1000f10:	8880004c 	andi	r2,r17,1
 1000f14:	10022926 	beq	r2,zero,10017bc <___vfprintf_internal_r+0x1370>
 1000f18:	9f06b03a 	or	r3,r19,fp
 1000f1c:	18032b26 	beq	r3,zero,1001bcc <___vfprintf_internal_r+0x1780>
 1000f20:	00800c04 	movi	r2,48
 1000f24:	d8802705 	stb	r2,156(sp)
 1000f28:	dc002745 	stb	r16,157(sp)
 1000f2c:	8c400094 	ori	r17,r17,2
 1000f30:	00800084 	movi	r2,2
 1000f34:	003f7406 	br	1000d08 <___vfprintf_internal_r+0x8bc>
 1000f38:	30803fcc 	andi	r2,r6,255
 1000f3c:	1080201c 	xori	r2,r2,128
 1000f40:	10bfe004 	addi	r2,r2,-128
 1000f44:	1003351e 	bne	r2,zero,1001c1c <___vfprintf_internal_r+0x17d0>
 1000f48:	1805883a 	mov	r2,r3
 1000f4c:	01800804 	movi	r6,32
 1000f50:	1c000007 	ldb	r16,0(r3)
 1000f54:	003da206 	br	10005e0 <___vfprintf_internal_r+0x194>
 1000f58:	dac02d17 	ldw	r11,180(sp)
 1000f5c:	db002d17 	ldw	r12,180(sp)
 1000f60:	5ac00017 	ldw	r11,0(r11)
 1000f64:	dac02e15 	stw	r11,184(sp)
 1000f68:	62c00104 	addi	r11,r12,4
 1000f6c:	db002e17 	ldw	r12,184(sp)
 1000f70:	6003ad16 	blt	r12,zero,1001e28 <___vfprintf_internal_r+0x19dc>
 1000f74:	dac02d15 	stw	r11,180(sp)
 1000f78:	1805883a 	mov	r2,r3
 1000f7c:	1c000007 	ldb	r16,0(r3)
 1000f80:	003d9706 	br	10005e0 <___vfprintf_internal_r+0x194>
 1000f84:	1805883a 	mov	r2,r3
 1000f88:	01800ac4 	movi	r6,43
 1000f8c:	1c000007 	ldb	r16,0(r3)
 1000f90:	003d9306 	br	10005e0 <___vfprintf_internal_r+0x194>
 1000f94:	db002d17 	ldw	r12,180(sp)
 1000f98:	d8c02a15 	stw	r3,168(sp)
 1000f9c:	00c00044 	movi	r3,1
 1000fa0:	60800017 	ldw	r2,0(r12)
 1000fa4:	63000104 	addi	r12,r12,4
 1000fa8:	d8c02b15 	stw	r3,172(sp)
 1000fac:	d8002785 	stb	zero,158(sp)
 1000fb0:	d8801405 	stb	r2,80(sp)
 1000fb4:	db002d15 	stw	r12,180(sp)
 1000fb8:	dac01404 	addi	r11,sp,80
 1000fbc:	1825883a 	mov	r18,r3
 1000fc0:	d8003215 	stw	zero,200(sp)
 1000fc4:	d8003415 	stw	zero,208(sp)
 1000fc8:	dac03115 	stw	r11,196(sp)
 1000fcc:	0005883a 	mov	r2,zero
 1000fd0:	003e7806 	br	10009b4 <___vfprintf_internal_r+0x568>
 1000fd4:	dac02d17 	ldw	r11,180(sp)
 1000fd8:	db002d17 	ldw	r12,180(sp)
 1000fdc:	d8c02a15 	stw	r3,168(sp)
 1000fe0:	5ac00017 	ldw	r11,0(r11)
 1000fe4:	d8002785 	stb	zero,158(sp)
 1000fe8:	64c00104 	addi	r19,r12,4
 1000fec:	dac03115 	stw	r11,196(sp)
 1000ff0:	5803fe26 	beq	r11,zero,1001fec <___vfprintf_internal_r+0x1ba0>
 1000ff4:	d9003117 	ldw	r4,196(sp)
 1000ff8:	4803b416 	blt	r9,zero,1001ecc <___vfprintf_internal_r+0x1a80>
 1000ffc:	480d883a 	mov	r6,r9
 1001000:	000b883a 	mov	r5,zero
 1001004:	da003f15 	stw	r8,252(sp)
 1001008:	da403e15 	stw	r9,248(sp)
 100100c:	10059c80 	call	10059c8 <memchr>
 1001010:	da003f17 	ldw	r8,252(sp)
 1001014:	da403e17 	ldw	r9,248(sp)
 1001018:	10043026 	beq	r2,zero,10020dc <___vfprintf_internal_r+0x1c90>
 100101c:	d8c03117 	ldw	r3,196(sp)
 1001020:	10e5c83a 	sub	r18,r2,r3
 1001024:	4c836b16 	blt	r9,r18,1001dd4 <___vfprintf_internal_r+0x1988>
 1001028:	9005883a 	mov	r2,r18
 100102c:	9003ac16 	blt	r18,zero,1001ee0 <___vfprintf_internal_r+0x1a94>
 1001030:	dd402783 	ldbu	r21,158(sp)
 1001034:	d8802b15 	stw	r2,172(sp)
 1001038:	dcc02d15 	stw	r19,180(sp)
 100103c:	d8003215 	stw	zero,200(sp)
 1001040:	d8003415 	stw	zero,208(sp)
 1001044:	003e5406 	br	1000998 <___vfprintf_internal_r+0x54c>
 1001048:	00804074 	movhi	r2,257
 100104c:	10bb5904 	addi	r2,r2,-4764
 1001050:	d8c02a15 	stw	r3,168(sp)
 1001054:	d8803b15 	stw	r2,236(sp)
 1001058:	d9802785 	stb	r6,158(sp)
 100105c:	88c0080c 	andi	r3,r17,32
 1001060:	d8802d17 	ldw	r2,180(sp)
 1001064:	183fa51e 	bne	r3,zero,1000efc <___vfprintf_internal_r+0xab0>
 1001068:	88c0040c 	andi	r3,r17,16
 100106c:	1802ee26 	beq	r3,zero,1001c28 <___vfprintf_internal_r+0x17dc>
 1001070:	db002d17 	ldw	r12,180(sp)
 1001074:	14c00017 	ldw	r19,0(r2)
 1001078:	0039883a 	mov	fp,zero
 100107c:	63000104 	addi	r12,r12,4
 1001080:	db002d15 	stw	r12,180(sp)
 1001084:	003fa206 	br	1000f10 <___vfprintf_internal_r+0xac4>
 1001088:	8c400054 	ori	r17,r17,1
 100108c:	1805883a 	mov	r2,r3
 1001090:	1c000007 	ldb	r16,0(r3)
 1001094:	003d5206 	br	10005e0 <___vfprintf_internal_r+0x194>
 1001098:	8c400814 	ori	r17,r17,32
 100109c:	1805883a 	mov	r2,r3
 10010a0:	1c000007 	ldb	r16,0(r3)
 10010a4:	003d4e06 	br	10005e0 <___vfprintf_internal_r+0x194>
 10010a8:	d8c02a15 	stw	r3,168(sp)
 10010ac:	8880080c 	andi	r2,r17,32
 10010b0:	103f1d1e 	bne	r2,zero,1000d28 <___vfprintf_internal_r+0x8dc>
 10010b4:	8880040c 	andi	r2,r17,16
 10010b8:	1001b81e 	bne	r2,zero,100179c <___vfprintf_internal_r+0x1350>
 10010bc:	8880100c 	andi	r2,r17,64
 10010c0:	1001b626 	beq	r2,zero,100179c <___vfprintf_internal_r+0x1350>
 10010c4:	dac02d17 	ldw	r11,180(sp)
 10010c8:	0039883a 	mov	fp,zero
 10010cc:	00800044 	movi	r2,1
 10010d0:	5cc0000b 	ldhu	r19,0(r11)
 10010d4:	5ac00104 	addi	r11,r11,4
 10010d8:	dac02d15 	stw	r11,180(sp)
 10010dc:	9807883a 	mov	r3,r19
 10010e0:	003f0906 	br	1000d08 <___vfprintf_internal_r+0x8bc>
 10010e4:	d8c02a15 	stw	r3,168(sp)
 10010e8:	8880080c 	andi	r2,r17,32
 10010ec:	103eff1e 	bne	r2,zero,1000cec <___vfprintf_internal_r+0x8a0>
 10010f0:	8880040c 	andi	r2,r17,16
 10010f4:	1001a11e 	bne	r2,zero,100177c <___vfprintf_internal_r+0x1330>
 10010f8:	8880100c 	andi	r2,r17,64
 10010fc:	10019f26 	beq	r2,zero,100177c <___vfprintf_internal_r+0x1330>
 1001100:	db002d17 	ldw	r12,180(sp)
 1001104:	0039883a 	mov	fp,zero
 1001108:	0005883a 	mov	r2,zero
 100110c:	64c0000b 	ldhu	r19,0(r12)
 1001110:	63000104 	addi	r12,r12,4
 1001114:	db002d15 	stw	r12,180(sp)
 1001118:	9807883a 	mov	r3,r19
 100111c:	003efa06 	br	1000d08 <___vfprintf_internal_r+0x8bc>
 1001120:	d8c02a15 	stw	r3,168(sp)
 1001124:	d9802785 	stb	r6,158(sp)
 1001128:	803db626 	beq	r16,zero,1000804 <___vfprintf_internal_r+0x3b8>
 100112c:	00c00044 	movi	r3,1
 1001130:	d8c02b15 	stw	r3,172(sp)
 1001134:	dc001405 	stb	r16,80(sp)
 1001138:	d8002785 	stb	zero,158(sp)
 100113c:	003f9e06 	br	1000fb8 <___vfprintf_internal_r+0xb6c>
 1001140:	d8c02017 	ldw	r3,128(sp)
 1001144:	003e5306 	br	1000a94 <___vfprintf_internal_r+0x648>
 1001148:	10803fcc 	andi	r2,r2,255
 100114c:	00c00044 	movi	r3,1
 1001150:	10fdfa1e 	bne	r2,r3,100093c <___vfprintf_internal_r+0x4f0>
 1001154:	e000021e 	bne	fp,zero,1001160 <___vfprintf_internal_r+0xd14>
 1001158:	00800244 	movi	r2,9
 100115c:	14c0202e 	bgeu	r2,r19,10011e0 <___vfprintf_internal_r+0xd94>
 1001160:	dc002b15 	stw	r16,172(sp)
 1001164:	dc402c15 	stw	r17,176(sp)
 1001168:	9821883a 	mov	r16,r19
 100116c:	e023883a 	mov	r17,fp
 1001170:	dc801e04 	addi	r18,sp,120
 1001174:	4827883a 	mov	r19,r9
 1001178:	4039883a 	mov	fp,r8
 100117c:	8009883a 	mov	r4,r16
 1001180:	880b883a 	mov	r5,r17
 1001184:	01800284 	movi	r6,10
 1001188:	000f883a 	mov	r7,zero
 100118c:	10099940 	call	1009994 <__umoddi3>
 1001190:	10800c04 	addi	r2,r2,48
 1001194:	94bfffc4 	addi	r18,r18,-1
 1001198:	8009883a 	mov	r4,r16
 100119c:	880b883a 	mov	r5,r17
 10011a0:	01800284 	movi	r6,10
 10011a4:	000f883a 	mov	r7,zero
 10011a8:	90800005 	stb	r2,0(r18)
 10011ac:	10093d40 	call	10093d4 <__udivdi3>
 10011b0:	1021883a 	mov	r16,r2
 10011b4:	10c4b03a 	or	r2,r2,r3
 10011b8:	1823883a 	mov	r17,r3
 10011bc:	103fef1e 	bne	r2,zero,100117c <___vfprintf_internal_r+0xd30>
 10011c0:	dac02817 	ldw	r11,160(sp)
 10011c4:	dc803115 	stw	r18,196(sp)
 10011c8:	dc002b17 	ldw	r16,172(sp)
 10011cc:	dc402c17 	ldw	r17,176(sp)
 10011d0:	9813883a 	mov	r9,r19
 10011d4:	e011883a 	mov	r8,fp
 10011d8:	5ca5c83a 	sub	r18,r11,r18
 10011dc:	003de906 	br	1000984 <___vfprintf_internal_r+0x538>
 10011e0:	9cc00c04 	addi	r19,r19,48
 10011e4:	d8c01dc4 	addi	r3,sp,119
 10011e8:	dcc01dc5 	stb	r19,119(sp)
 10011ec:	dc803c17 	ldw	r18,240(sp)
 10011f0:	d8c03115 	stw	r3,196(sp)
 10011f4:	003de306 	br	1000984 <___vfprintf_internal_r+0x538>
 10011f8:	00801944 	movi	r2,101
 10011fc:	1400710e 	bge	r2,r16,10013c4 <___vfprintf_internal_r+0xf78>
 1001200:	d9003717 	ldw	r4,220(sp)
 1001204:	d9403917 	ldw	r5,228(sp)
 1001208:	000d883a 	mov	r6,zero
 100120c:	000f883a 	mov	r7,zero
 1001210:	d8c03d15 	stw	r3,244(sp)
 1001214:	da003f15 	stw	r8,252(sp)
 1001218:	100b1b80 	call	100b1b8 <__eqdf2>
 100121c:	d8c03d17 	ldw	r3,244(sp)
 1001220:	da003f17 	ldw	r8,252(sp)
 1001224:	1000ef1e 	bne	r2,zero,10015e4 <___vfprintf_internal_r+0x1198>
 1001228:	d8801f17 	ldw	r2,124(sp)
 100122c:	01004074 	movhi	r4,257
 1001230:	213b6004 	addi	r4,r4,-4736
 1001234:	18c00044 	addi	r3,r3,1
 1001238:	10800044 	addi	r2,r2,1
 100123c:	41000015 	stw	r4,0(r8)
 1001240:	01000044 	movi	r4,1
 1001244:	41000115 	stw	r4,4(r8)
 1001248:	d8c02015 	stw	r3,128(sp)
 100124c:	d8801f15 	stw	r2,124(sp)
 1001250:	010001c4 	movi	r4,7
 1001254:	20828e16 	blt	r4,r2,1001c90 <___vfprintf_internal_r+0x1844>
 1001258:	42000204 	addi	r8,r8,8
 100125c:	d8802617 	ldw	r2,152(sp)
 1001260:	dac03317 	ldw	r11,204(sp)
 1001264:	12c00216 	blt	r2,r11,1001270 <___vfprintf_internal_r+0xe24>
 1001268:	8880004c 	andi	r2,r17,1
 100126c:	103e5d26 	beq	r2,zero,1000be4 <___vfprintf_internal_r+0x798>
 1001270:	db003817 	ldw	r12,224(sp)
 1001274:	d8801f17 	ldw	r2,124(sp)
 1001278:	dac03517 	ldw	r11,212(sp)
 100127c:	1b07883a 	add	r3,r3,r12
 1001280:	10800044 	addi	r2,r2,1
 1001284:	42c00015 	stw	r11,0(r8)
 1001288:	43000115 	stw	r12,4(r8)
 100128c:	d8c02015 	stw	r3,128(sp)
 1001290:	d8801f15 	stw	r2,124(sp)
 1001294:	010001c4 	movi	r4,7
 1001298:	2082ed16 	blt	r4,r2,1001e50 <___vfprintf_internal_r+0x1a04>
 100129c:	42000204 	addi	r8,r8,8
 10012a0:	db003317 	ldw	r12,204(sp)
 10012a4:	643fffc4 	addi	r16,r12,-1
 10012a8:	043e4e0e 	bge	zero,r16,1000be4 <___vfprintf_internal_r+0x798>
 10012ac:	04800404 	movi	r18,16
 10012b0:	d8801f17 	ldw	r2,124(sp)
 10012b4:	94007e0e 	bge	r18,r16,10014b0 <___vfprintf_internal_r+0x1064>
 10012b8:	01404074 	movhi	r5,257
 10012bc:	297b6084 	addi	r5,r5,-4734
 10012c0:	d9402c15 	stw	r5,176(sp)
 10012c4:	054001c4 	movi	r21,7
 10012c8:	00000306 	br	10012d8 <___vfprintf_internal_r+0xe8c>
 10012cc:	42000204 	addi	r8,r8,8
 10012d0:	843ffc04 	addi	r16,r16,-16
 10012d4:	9400790e 	bge	r18,r16,10014bc <___vfprintf_internal_r+0x1070>
 10012d8:	18c00404 	addi	r3,r3,16
 10012dc:	10800044 	addi	r2,r2,1
 10012e0:	45000015 	stw	r20,0(r8)
 10012e4:	44800115 	stw	r18,4(r8)
 10012e8:	d8c02015 	stw	r3,128(sp)
 10012ec:	d8801f15 	stw	r2,124(sp)
 10012f0:	a8bff60e 	bge	r21,r2,10012cc <___vfprintf_internal_r+0xe80>
 10012f4:	b009883a 	mov	r4,r22
 10012f8:	b80b883a 	mov	r5,r23
 10012fc:	d9801e04 	addi	r6,sp,120
 1001300:	10077140 	call	1007714 <__sprint_r>
 1001304:	103d451e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001308:	d8c02017 	ldw	r3,128(sp)
 100130c:	d8801f17 	ldw	r2,124(sp)
 1001310:	da000404 	addi	r8,sp,16
 1001314:	003fee06 	br	10012d0 <___vfprintf_internal_r+0xe84>
 1001318:	dac02e17 	ldw	r11,184(sp)
 100131c:	db002b17 	ldw	r12,172(sp)
 1001320:	5b2bc83a 	sub	r21,r11,r12
 1001324:	057df90e 	bge	zero,r21,1000b0c <___vfprintf_internal_r+0x6c0>
 1001328:	07000404 	movi	fp,16
 100132c:	d8801f17 	ldw	r2,124(sp)
 1001330:	e543640e 	bge	fp,r21,10020c4 <___vfprintf_internal_r+0x1c78>
 1001334:	01404074 	movhi	r5,257
 1001338:	297b6084 	addi	r5,r5,-4734
 100133c:	d9402c15 	stw	r5,176(sp)
 1001340:	04c001c4 	movi	r19,7
 1001344:	00000306 	br	1001354 <___vfprintf_internal_r+0xf08>
 1001348:	ad7ffc04 	addi	r21,r21,-16
 100134c:	42000204 	addi	r8,r8,8
 1001350:	e540110e 	bge	fp,r21,1001398 <___vfprintf_internal_r+0xf4c>
 1001354:	18c00404 	addi	r3,r3,16
 1001358:	10800044 	addi	r2,r2,1
 100135c:	45000015 	stw	r20,0(r8)
 1001360:	47000115 	stw	fp,4(r8)
 1001364:	d8c02015 	stw	r3,128(sp)
 1001368:	d8801f15 	stw	r2,124(sp)
 100136c:	98bff60e 	bge	r19,r2,1001348 <___vfprintf_internal_r+0xefc>
 1001370:	b009883a 	mov	r4,r22
 1001374:	b80b883a 	mov	r5,r23
 1001378:	d9801e04 	addi	r6,sp,120
 100137c:	10077140 	call	1007714 <__sprint_r>
 1001380:	103d261e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001384:	ad7ffc04 	addi	r21,r21,-16
 1001388:	d8c02017 	ldw	r3,128(sp)
 100138c:	d8801f17 	ldw	r2,124(sp)
 1001390:	da000404 	addi	r8,sp,16
 1001394:	e57fef16 	blt	fp,r21,1001354 <___vfprintf_internal_r+0xf08>
 1001398:	dac02c17 	ldw	r11,176(sp)
 100139c:	1d47883a 	add	r3,r3,r21
 10013a0:	10800044 	addi	r2,r2,1
 10013a4:	42c00015 	stw	r11,0(r8)
 10013a8:	45400115 	stw	r21,4(r8)
 10013ac:	d8c02015 	stw	r3,128(sp)
 10013b0:	d8801f15 	stw	r2,124(sp)
 10013b4:	010001c4 	movi	r4,7
 10013b8:	20819116 	blt	r4,r2,1001a00 <___vfprintf_internal_r+0x15b4>
 10013bc:	42000204 	addi	r8,r8,8
 10013c0:	003dd206 	br	1000b0c <___vfprintf_internal_r+0x6c0>
 10013c4:	db003317 	ldw	r12,204(sp)
 10013c8:	00800044 	movi	r2,1
 10013cc:	18c00044 	addi	r3,r3,1
 10013d0:	1301530e 	bge	r2,r12,1001920 <___vfprintf_internal_r+0x14d4>
 10013d4:	dc001f17 	ldw	r16,124(sp)
 10013d8:	dac03117 	ldw	r11,196(sp)
 10013dc:	00800044 	movi	r2,1
 10013e0:	84000044 	addi	r16,r16,1
 10013e4:	40800115 	stw	r2,4(r8)
 10013e8:	42c00015 	stw	r11,0(r8)
 10013ec:	d8c02015 	stw	r3,128(sp)
 10013f0:	dc001f15 	stw	r16,124(sp)
 10013f4:	008001c4 	movi	r2,7
 10013f8:	14016b16 	blt	r2,r16,10019a8 <___vfprintf_internal_r+0x155c>
 10013fc:	42000204 	addi	r8,r8,8
 1001400:	db003817 	ldw	r12,224(sp)
 1001404:	dac03517 	ldw	r11,212(sp)
 1001408:	84000044 	addi	r16,r16,1
 100140c:	1b07883a 	add	r3,r3,r12
 1001410:	42c00015 	stw	r11,0(r8)
 1001414:	43000115 	stw	r12,4(r8)
 1001418:	d8c02015 	stw	r3,128(sp)
 100141c:	dc001f15 	stw	r16,124(sp)
 1001420:	008001c4 	movi	r2,7
 1001424:	14016916 	blt	r2,r16,10019cc <___vfprintf_internal_r+0x1580>
 1001428:	44800204 	addi	r18,r8,8
 100142c:	d9003717 	ldw	r4,220(sp)
 1001430:	d9403917 	ldw	r5,228(sp)
 1001434:	000d883a 	mov	r6,zero
 1001438:	000f883a 	mov	r7,zero
 100143c:	d8c03d15 	stw	r3,244(sp)
 1001440:	100b1b80 	call	100b1b8 <__eqdf2>
 1001444:	d8c03d17 	ldw	r3,244(sp)
 1001448:	db003317 	ldw	r12,204(sp)
 100144c:	1000ad26 	beq	r2,zero,1001704 <___vfprintf_internal_r+0x12b8>
 1001450:	dac03117 	ldw	r11,196(sp)
 1001454:	60bfffc4 	addi	r2,r12,-1
 1001458:	1887883a 	add	r3,r3,r2
 100145c:	59000044 	addi	r4,r11,1
 1001460:	84000044 	addi	r16,r16,1
 1001464:	90800115 	stw	r2,4(r18)
 1001468:	91000015 	stw	r4,0(r18)
 100146c:	d8c02015 	stw	r3,128(sp)
 1001470:	dc001f15 	stw	r16,124(sp)
 1001474:	008001c4 	movi	r2,7
 1001478:	14014216 	blt	r2,r16,1001984 <___vfprintf_internal_r+0x1538>
 100147c:	94800204 	addi	r18,r18,8
 1001480:	dac03a17 	ldw	r11,232(sp)
 1001484:	dd4022c4 	addi	r21,sp,139
 1001488:	84000044 	addi	r16,r16,1
 100148c:	1ac7883a 	add	r3,r3,r11
 1001490:	95400015 	stw	r21,0(r18)
 1001494:	92c00115 	stw	r11,4(r18)
 1001498:	d8c02015 	stw	r3,128(sp)
 100149c:	dc001f15 	stw	r16,124(sp)
 10014a0:	008001c4 	movi	r2,7
 10014a4:	14000e16 	blt	r2,r16,10014e0 <___vfprintf_internal_r+0x1094>
 10014a8:	92000204 	addi	r8,r18,8
 10014ac:	003dcd06 	br	1000be4 <___vfprintf_internal_r+0x798>
 10014b0:	01004074 	movhi	r4,257
 10014b4:	213b6084 	addi	r4,r4,-4734
 10014b8:	d9002c15 	stw	r4,176(sp)
 10014bc:	dac02c17 	ldw	r11,176(sp)
 10014c0:	1c07883a 	add	r3,r3,r16
 10014c4:	44000115 	stw	r16,4(r8)
 10014c8:	42c00015 	stw	r11,0(r8)
 10014cc:	10800044 	addi	r2,r2,1
 10014d0:	d8c02015 	stw	r3,128(sp)
 10014d4:	d8801f15 	stw	r2,124(sp)
 10014d8:	010001c4 	movi	r4,7
 10014dc:	20bdc00e 	bge	r4,r2,1000be0 <___vfprintf_internal_r+0x794>
 10014e0:	b009883a 	mov	r4,r22
 10014e4:	b80b883a 	mov	r5,r23
 10014e8:	d9801e04 	addi	r6,sp,120
 10014ec:	10077140 	call	1007714 <__sprint_r>
 10014f0:	103cca1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 10014f4:	d8c02017 	ldw	r3,128(sp)
 10014f8:	da000404 	addi	r8,sp,16
 10014fc:	003db906 	br	1000be4 <___vfprintf_internal_r+0x798>
 1001500:	b009883a 	mov	r4,r22
 1001504:	b80b883a 	mov	r5,r23
 1001508:	d9801e04 	addi	r6,sp,120
 100150c:	10077140 	call	1007714 <__sprint_r>
 1001510:	103def26 	beq	r2,zero,1000cd0 <___vfprintf_internal_r+0x884>
 1001514:	003cc106 	br	100081c <___vfprintf_internal_r+0x3d0>
 1001518:	10803fcc 	andi	r2,r2,255
 100151c:	1000651e 	bne	r2,zero,10016b4 <___vfprintf_internal_r+0x1268>
 1001520:	8880004c 	andi	r2,r17,1
 1001524:	10013226 	beq	r2,zero,10019f0 <___vfprintf_internal_r+0x15a4>
 1001528:	00800c04 	movi	r2,48
 100152c:	d8c01dc4 	addi	r3,sp,119
 1001530:	d8801dc5 	stb	r2,119(sp)
 1001534:	dc803c17 	ldw	r18,240(sp)
 1001538:	d8c03115 	stw	r3,196(sp)
 100153c:	003d1106 	br	1000984 <___vfprintf_internal_r+0x538>
 1001540:	b009883a 	mov	r4,r22
 1001544:	b80b883a 	mov	r5,r23
 1001548:	d9801e04 	addi	r6,sp,120
 100154c:	10077140 	call	1007714 <__sprint_r>
 1001550:	103cb21e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001554:	d8c02017 	ldw	r3,128(sp)
 1001558:	da000404 	addi	r8,sp,16
 100155c:	003d9406 	br	1000bb0 <___vfprintf_internal_r+0x764>
 1001560:	b009883a 	mov	r4,r22
 1001564:	b80b883a 	mov	r5,r23
 1001568:	d9801e04 	addi	r6,sp,120
 100156c:	10077140 	call	1007714 <__sprint_r>
 1001570:	103caa1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001574:	d8c02017 	ldw	r3,128(sp)
 1001578:	da000404 	addi	r8,sp,16
 100157c:	003d5206 	br	1000ac8 <___vfprintf_internal_r+0x67c>
 1001580:	b009883a 	mov	r4,r22
 1001584:	b80b883a 	mov	r5,r23
 1001588:	d9801e04 	addi	r6,sp,120
 100158c:	10077140 	call	1007714 <__sprint_r>
 1001590:	103ca21e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001594:	d8c02017 	ldw	r3,128(sp)
 1001598:	da000404 	addi	r8,sp,16
 100159c:	003d5806 	br	1000b00 <___vfprintf_internal_r+0x6b4>
 10015a0:	d9403b17 	ldw	r5,236(sp)
 10015a4:	d8c01e04 	addi	r3,sp,120
 10015a8:	988003cc 	andi	r2,r19,15
 10015ac:	e008973a 	slli	r4,fp,28
 10015b0:	2885883a 	add	r2,r5,r2
 10015b4:	9826d13a 	srli	r19,r19,4
 10015b8:	10800003 	ldbu	r2,0(r2)
 10015bc:	e038d13a 	srli	fp,fp,4
 10015c0:	18ffffc4 	addi	r3,r3,-1
 10015c4:	24e6b03a 	or	r19,r4,r19
 10015c8:	18800005 	stb	r2,0(r3)
 10015cc:	9f04b03a 	or	r2,r19,fp
 10015d0:	103ff51e 	bne	r2,zero,10015a8 <___vfprintf_internal_r+0x115c>
 10015d4:	db002817 	ldw	r12,160(sp)
 10015d8:	d8c03115 	stw	r3,196(sp)
 10015dc:	60e5c83a 	sub	r18,r12,r3
 10015e0:	003ce806 	br	1000984 <___vfprintf_internal_r+0x538>
 10015e4:	dc002617 	ldw	r16,152(sp)
 10015e8:	0401b10e 	bge	zero,r16,1001cb0 <___vfprintf_internal_r+0x1864>
 10015ec:	db003117 	ldw	r12,196(sp)
 10015f0:	dac03317 	ldw	r11,204(sp)
 10015f4:	62e1883a 	add	r16,r12,r11
 10015f8:	db003417 	ldw	r12,208(sp)
 10015fc:	5825883a 	mov	r18,r11
 1001600:	62c0010e 	bge	r12,r11,1001608 <___vfprintf_internal_r+0x11bc>
 1001604:	6025883a 	mov	r18,r12
 1001608:	04800b0e 	bge	zero,r18,1001638 <___vfprintf_internal_r+0x11ec>
 100160c:	d8801f17 	ldw	r2,124(sp)
 1001610:	dac03117 	ldw	r11,196(sp)
 1001614:	1c87883a 	add	r3,r3,r18
 1001618:	10800044 	addi	r2,r2,1
 100161c:	42c00015 	stw	r11,0(r8)
 1001620:	44800115 	stw	r18,4(r8)
 1001624:	d8c02015 	stw	r3,128(sp)
 1001628:	d8801f15 	stw	r2,124(sp)
 100162c:	010001c4 	movi	r4,7
 1001630:	20824f16 	blt	r4,r2,1001f70 <___vfprintf_internal_r+0x1b24>
 1001634:	42000204 	addi	r8,r8,8
 1001638:	90024b16 	blt	r18,zero,1001f68 <___vfprintf_internal_r+0x1b1c>
 100163c:	db003417 	ldw	r12,208(sp)
 1001640:	64a5c83a 	sub	r18,r12,r18
 1001644:	0480730e 	bge	zero,r18,1001814 <___vfprintf_internal_r+0x13c8>
 1001648:	05400404 	movi	r21,16
 100164c:	d8801f17 	ldw	r2,124(sp)
 1001650:	ac817d0e 	bge	r21,r18,1001c48 <___vfprintf_internal_r+0x17fc>
 1001654:	01404074 	movhi	r5,257
 1001658:	297b6084 	addi	r5,r5,-4734
 100165c:	d9402c15 	stw	r5,176(sp)
 1001660:	070001c4 	movi	fp,7
 1001664:	00000306 	br	1001674 <___vfprintf_internal_r+0x1228>
 1001668:	42000204 	addi	r8,r8,8
 100166c:	94bffc04 	addi	r18,r18,-16
 1001670:	ac81780e 	bge	r21,r18,1001c54 <___vfprintf_internal_r+0x1808>
 1001674:	18c00404 	addi	r3,r3,16
 1001678:	10800044 	addi	r2,r2,1
 100167c:	45000015 	stw	r20,0(r8)
 1001680:	45400115 	stw	r21,4(r8)
 1001684:	d8c02015 	stw	r3,128(sp)
 1001688:	d8801f15 	stw	r2,124(sp)
 100168c:	e0bff60e 	bge	fp,r2,1001668 <___vfprintf_internal_r+0x121c>
 1001690:	b009883a 	mov	r4,r22
 1001694:	b80b883a 	mov	r5,r23
 1001698:	d9801e04 	addi	r6,sp,120
 100169c:	10077140 	call	1007714 <__sprint_r>
 10016a0:	103c5e1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 10016a4:	d8c02017 	ldw	r3,128(sp)
 10016a8:	d8801f17 	ldw	r2,124(sp)
 10016ac:	da000404 	addi	r8,sp,16
 10016b0:	003fee06 	br	100166c <___vfprintf_internal_r+0x1220>
 10016b4:	dac01e04 	addi	r11,sp,120
 10016b8:	0025883a 	mov	r18,zero
 10016bc:	dac03115 	stw	r11,196(sp)
 10016c0:	003cb006 	br	1000984 <___vfprintf_internal_r+0x538>
 10016c4:	b009883a 	mov	r4,r22
 10016c8:	b80b883a 	mov	r5,r23
 10016cc:	d9801e04 	addi	r6,sp,120
 10016d0:	10077140 	call	1007714 <__sprint_r>
 10016d4:	103c511e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 10016d8:	d8c02017 	ldw	r3,128(sp)
 10016dc:	d8802787 	ldb	r2,158(sp)
 10016e0:	da000404 	addi	r8,sp,16
 10016e4:	003ceb06 	br	1000a94 <___vfprintf_internal_r+0x648>
 10016e8:	1cc00017 	ldw	r19,0(r3)
 10016ec:	dac02d17 	ldw	r11,180(sp)
 10016f0:	9839d7fa 	srai	fp,r19,31
 10016f4:	5ac00104 	addi	r11,r11,4
 10016f8:	dac02d15 	stw	r11,180(sp)
 10016fc:	e005883a 	mov	r2,fp
 1001700:	003c8106 	br	1000908 <___vfprintf_internal_r+0x4bc>
 1001704:	657fffc4 	addi	r21,r12,-1
 1001708:	057f5d0e 	bge	zero,r21,1001480 <___vfprintf_internal_r+0x1034>
 100170c:	07000404 	movi	fp,16
 1001710:	e540900e 	bge	fp,r21,1001954 <___vfprintf_internal_r+0x1508>
 1001714:	01004074 	movhi	r4,257
 1001718:	213b6084 	addi	r4,r4,-4734
 100171c:	d9002c15 	stw	r4,176(sp)
 1001720:	01c001c4 	movi	r7,7
 1001724:	00000306 	br	1001734 <___vfprintf_internal_r+0x12e8>
 1001728:	94800204 	addi	r18,r18,8
 100172c:	ad7ffc04 	addi	r21,r21,-16
 1001730:	e5408b0e 	bge	fp,r21,1001960 <___vfprintf_internal_r+0x1514>
 1001734:	18c00404 	addi	r3,r3,16
 1001738:	84000044 	addi	r16,r16,1
 100173c:	95000015 	stw	r20,0(r18)
 1001740:	97000115 	stw	fp,4(r18)
 1001744:	d8c02015 	stw	r3,128(sp)
 1001748:	dc001f15 	stw	r16,124(sp)
 100174c:	3c3ff60e 	bge	r7,r16,1001728 <___vfprintf_internal_r+0x12dc>
 1001750:	b009883a 	mov	r4,r22
 1001754:	b80b883a 	mov	r5,r23
 1001758:	d9801e04 	addi	r6,sp,120
 100175c:	d9c03d15 	stw	r7,244(sp)
 1001760:	10077140 	call	1007714 <__sprint_r>
 1001764:	d9c03d17 	ldw	r7,244(sp)
 1001768:	103c2c1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 100176c:	d8c02017 	ldw	r3,128(sp)
 1001770:	dc001f17 	ldw	r16,124(sp)
 1001774:	dc800404 	addi	r18,sp,16
 1001778:	003fec06 	br	100172c <___vfprintf_internal_r+0x12e0>
 100177c:	dac02d17 	ldw	r11,180(sp)
 1001780:	0039883a 	mov	fp,zero
 1001784:	0005883a 	mov	r2,zero
 1001788:	5cc00017 	ldw	r19,0(r11)
 100178c:	5ac00104 	addi	r11,r11,4
 1001790:	dac02d15 	stw	r11,180(sp)
 1001794:	9807883a 	mov	r3,r19
 1001798:	003d5b06 	br	1000d08 <___vfprintf_internal_r+0x8bc>
 100179c:	db002d17 	ldw	r12,180(sp)
 10017a0:	0039883a 	mov	fp,zero
 10017a4:	00800044 	movi	r2,1
 10017a8:	64c00017 	ldw	r19,0(r12)
 10017ac:	63000104 	addi	r12,r12,4
 10017b0:	db002d15 	stw	r12,180(sp)
 10017b4:	9807883a 	mov	r3,r19
 10017b8:	003d5306 	br	1000d08 <___vfprintf_internal_r+0x8bc>
 10017bc:	00800084 	movi	r2,2
 10017c0:	9f06b03a 	or	r3,r19,fp
 10017c4:	003d5006 	br	1000d08 <___vfprintf_internal_r+0x8bc>
 10017c8:	10803fcc 	andi	r2,r2,255
 10017cc:	1080201c 	xori	r2,r2,128
 10017d0:	10bfe004 	addi	r2,r2,-128
 10017d4:	01000c04 	movi	r4,48
 10017d8:	1101a526 	beq	r2,r4,1001e70 <___vfprintf_internal_r+0x1a24>
 10017dc:	dac03117 	ldw	r11,196(sp)
 10017e0:	db002817 	ldw	r12,160(sp)
 10017e4:	193fffc5 	stb	r4,-1(r3)
 10017e8:	5affffc4 	addi	r11,r11,-1
 10017ec:	dac03115 	stw	r11,196(sp)
 10017f0:	62e5c83a 	sub	r18,r12,r11
 10017f4:	003c6306 	br	1000984 <___vfprintf_internal_r+0x538>
 10017f8:	b009883a 	mov	r4,r22
 10017fc:	b80b883a 	mov	r5,r23
 1001800:	d9801e04 	addi	r6,sp,120
 1001804:	10077140 	call	1007714 <__sprint_r>
 1001808:	103c041e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 100180c:	d8c02017 	ldw	r3,128(sp)
 1001810:	da000404 	addi	r8,sp,16
 1001814:	db003117 	ldw	r12,196(sp)
 1001818:	dac03417 	ldw	r11,208(sp)
 100181c:	d8802617 	ldw	r2,152(sp)
 1001820:	62e5883a 	add	r18,r12,r11
 1001824:	db003317 	ldw	r12,204(sp)
 1001828:	13000216 	blt	r2,r12,1001834 <___vfprintf_internal_r+0x13e8>
 100182c:	8900004c 	andi	r4,r17,1
 1001830:	20000c26 	beq	r4,zero,1001864 <___vfprintf_internal_r+0x1418>
 1001834:	dac03817 	ldw	r11,224(sp)
 1001838:	d9001f17 	ldw	r4,124(sp)
 100183c:	db003517 	ldw	r12,212(sp)
 1001840:	1ac7883a 	add	r3,r3,r11
 1001844:	21000044 	addi	r4,r4,1
 1001848:	43000015 	stw	r12,0(r8)
 100184c:	42c00115 	stw	r11,4(r8)
 1001850:	d8c02015 	stw	r3,128(sp)
 1001854:	d9001f15 	stw	r4,124(sp)
 1001858:	014001c4 	movi	r5,7
 100185c:	2901cc16 	blt	r5,r4,1001f90 <___vfprintf_internal_r+0x1b44>
 1001860:	42000204 	addi	r8,r8,8
 1001864:	dac03317 	ldw	r11,204(sp)
 1001868:	8489c83a 	sub	r4,r16,r18
 100186c:	5885c83a 	sub	r2,r11,r2
 1001870:	1021883a 	mov	r16,r2
 1001874:	2080010e 	bge	r4,r2,100187c <___vfprintf_internal_r+0x1430>
 1001878:	2021883a 	mov	r16,r4
 100187c:	04000a0e 	bge	zero,r16,10018a8 <___vfprintf_internal_r+0x145c>
 1001880:	d9001f17 	ldw	r4,124(sp)
 1001884:	1c07883a 	add	r3,r3,r16
 1001888:	44800015 	stw	r18,0(r8)
 100188c:	21000044 	addi	r4,r4,1
 1001890:	44000115 	stw	r16,4(r8)
 1001894:	d8c02015 	stw	r3,128(sp)
 1001898:	d9001f15 	stw	r4,124(sp)
 100189c:	014001c4 	movi	r5,7
 10018a0:	2901e316 	blt	r5,r4,1002030 <___vfprintf_internal_r+0x1be4>
 10018a4:	42000204 	addi	r8,r8,8
 10018a8:	8001df16 	blt	r16,zero,1002028 <___vfprintf_internal_r+0x1bdc>
 10018ac:	1421c83a 	sub	r16,r2,r16
 10018b0:	043ccc0e 	bge	zero,r16,1000be4 <___vfprintf_internal_r+0x798>
 10018b4:	04800404 	movi	r18,16
 10018b8:	d8801f17 	ldw	r2,124(sp)
 10018bc:	943efc0e 	bge	r18,r16,10014b0 <___vfprintf_internal_r+0x1064>
 10018c0:	01404074 	movhi	r5,257
 10018c4:	297b6084 	addi	r5,r5,-4734
 10018c8:	d9402c15 	stw	r5,176(sp)
 10018cc:	054001c4 	movi	r21,7
 10018d0:	00000306 	br	10018e0 <___vfprintf_internal_r+0x1494>
 10018d4:	42000204 	addi	r8,r8,8
 10018d8:	843ffc04 	addi	r16,r16,-16
 10018dc:	943ef70e 	bge	r18,r16,10014bc <___vfprintf_internal_r+0x1070>
 10018e0:	18c00404 	addi	r3,r3,16
 10018e4:	10800044 	addi	r2,r2,1
 10018e8:	45000015 	stw	r20,0(r8)
 10018ec:	44800115 	stw	r18,4(r8)
 10018f0:	d8c02015 	stw	r3,128(sp)
 10018f4:	d8801f15 	stw	r2,124(sp)
 10018f8:	a8bff60e 	bge	r21,r2,10018d4 <___vfprintf_internal_r+0x1488>
 10018fc:	b009883a 	mov	r4,r22
 1001900:	b80b883a 	mov	r5,r23
 1001904:	d9801e04 	addi	r6,sp,120
 1001908:	10077140 	call	1007714 <__sprint_r>
 100190c:	103bc31e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001910:	d8c02017 	ldw	r3,128(sp)
 1001914:	d8801f17 	ldw	r2,124(sp)
 1001918:	da000404 	addi	r8,sp,16
 100191c:	003fee06 	br	10018d8 <___vfprintf_internal_r+0x148c>
 1001920:	8888703a 	and	r4,r17,r2
 1001924:	203eab1e 	bne	r4,zero,10013d4 <___vfprintf_internal_r+0xf88>
 1001928:	dc001f17 	ldw	r16,124(sp)
 100192c:	db003117 	ldw	r12,196(sp)
 1001930:	40800115 	stw	r2,4(r8)
 1001934:	84000044 	addi	r16,r16,1
 1001938:	43000015 	stw	r12,0(r8)
 100193c:	d8c02015 	stw	r3,128(sp)
 1001940:	dc001f15 	stw	r16,124(sp)
 1001944:	008001c4 	movi	r2,7
 1001948:	14000e16 	blt	r2,r16,1001984 <___vfprintf_internal_r+0x1538>
 100194c:	44800204 	addi	r18,r8,8
 1001950:	003ecb06 	br	1001480 <___vfprintf_internal_r+0x1034>
 1001954:	00804074 	movhi	r2,257
 1001958:	10bb6084 	addi	r2,r2,-4734
 100195c:	d8802c15 	stw	r2,176(sp)
 1001960:	dac02c17 	ldw	r11,176(sp)
 1001964:	1d47883a 	add	r3,r3,r21
 1001968:	84000044 	addi	r16,r16,1
 100196c:	92c00015 	stw	r11,0(r18)
 1001970:	95400115 	stw	r21,4(r18)
 1001974:	d8c02015 	stw	r3,128(sp)
 1001978:	dc001f15 	stw	r16,124(sp)
 100197c:	008001c4 	movi	r2,7
 1001980:	143ebe0e 	bge	r2,r16,100147c <___vfprintf_internal_r+0x1030>
 1001984:	b009883a 	mov	r4,r22
 1001988:	b80b883a 	mov	r5,r23
 100198c:	d9801e04 	addi	r6,sp,120
 1001990:	10077140 	call	1007714 <__sprint_r>
 1001994:	103ba11e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001998:	d8c02017 	ldw	r3,128(sp)
 100199c:	dc001f17 	ldw	r16,124(sp)
 10019a0:	dc800404 	addi	r18,sp,16
 10019a4:	003eb606 	br	1001480 <___vfprintf_internal_r+0x1034>
 10019a8:	b009883a 	mov	r4,r22
 10019ac:	b80b883a 	mov	r5,r23
 10019b0:	d9801e04 	addi	r6,sp,120
 10019b4:	10077140 	call	1007714 <__sprint_r>
 10019b8:	103b981e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 10019bc:	d8c02017 	ldw	r3,128(sp)
 10019c0:	dc001f17 	ldw	r16,124(sp)
 10019c4:	da000404 	addi	r8,sp,16
 10019c8:	003e8d06 	br	1001400 <___vfprintf_internal_r+0xfb4>
 10019cc:	b009883a 	mov	r4,r22
 10019d0:	b80b883a 	mov	r5,r23
 10019d4:	d9801e04 	addi	r6,sp,120
 10019d8:	10077140 	call	1007714 <__sprint_r>
 10019dc:	103b8f1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 10019e0:	d8c02017 	ldw	r3,128(sp)
 10019e4:	dc001f17 	ldw	r16,124(sp)
 10019e8:	dc800404 	addi	r18,sp,16
 10019ec:	003e8f06 	br	100142c <___vfprintf_internal_r+0xfe0>
 10019f0:	db001e04 	addi	r12,sp,120
 10019f4:	0025883a 	mov	r18,zero
 10019f8:	db003115 	stw	r12,196(sp)
 10019fc:	003be106 	br	1000984 <___vfprintf_internal_r+0x538>
 1001a00:	b009883a 	mov	r4,r22
 1001a04:	b80b883a 	mov	r5,r23
 1001a08:	d9801e04 	addi	r6,sp,120
 1001a0c:	10077140 	call	1007714 <__sprint_r>
 1001a10:	103b821e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001a14:	d8c02017 	ldw	r3,128(sp)
 1001a18:	da000404 	addi	r8,sp,16
 1001a1c:	003c3b06 	br	1000b0c <___vfprintf_internal_r+0x6c0>
 1001a20:	04e7c83a 	sub	r19,zero,r19
 1001a24:	9804c03a 	cmpne	r2,r19,zero
 1001a28:	0739c83a 	sub	fp,zero,fp
 1001a2c:	e0b9c83a 	sub	fp,fp,r2
 1001a30:	05400b44 	movi	r21,45
 1001a34:	dd402785 	stb	r21,158(sp)
 1001a38:	da403215 	stw	r9,200(sp)
 1001a3c:	00800044 	movi	r2,1
 1001a40:	9f06b03a 	or	r3,r19,fp
 1001a44:	003bb506 	br	100091c <___vfprintf_internal_r+0x4d0>
 1001a48:	da003f15 	stw	r8,252(sp)
 1001a4c:	da403e15 	stw	r9,248(sp)
 1001a50:	10073700 	call	1007370 <__fpclassifyd>
 1001a54:	da003f17 	ldw	r8,252(sp)
 1001a58:	da403e17 	ldw	r9,248(sp)
 1001a5c:	1000ce26 	beq	r2,zero,1001d98 <___vfprintf_internal_r+0x194c>
 1001a60:	057ff7c4 	movi	r21,-33
 1001a64:	00bfffc4 	movi	r2,-1
 1001a68:	856a703a 	and	r21,r16,r21
 1001a6c:	4881e826 	beq	r9,r2,1002210 <___vfprintf_internal_r+0x1dc4>
 1001a70:	008011c4 	movi	r2,71
 1001a74:	a881e326 	beq	r21,r2,1002204 <___vfprintf_internal_r+0x1db8>
 1001a78:	db003917 	ldw	r12,228(sp)
 1001a7c:	8ac04014 	ori	r11,r17,256
 1001a80:	dac02d15 	stw	r11,180(sp)
 1001a84:	6001ed16 	blt	r12,zero,100223c <___vfprintf_internal_r+0x1df0>
 1001a88:	dc803917 	ldw	r18,228(sp)
 1001a8c:	d8002b05 	stb	zero,172(sp)
 1001a90:	00801984 	movi	r2,102
 1001a94:	80811826 	beq	r16,r2,1001ef8 <___vfprintf_internal_r+0x1aac>
 1001a98:	00801184 	movi	r2,70
 1001a9c:	80811626 	beq	r16,r2,1001ef8 <___vfprintf_internal_r+0x1aac>
 1001aa0:	00801144 	movi	r2,69
 1001aa4:	a881e926 	beq	r21,r2,100224c <___vfprintf_internal_r+0x1e00>
 1001aa8:	4839883a 	mov	fp,r9
 1001aac:	d8802604 	addi	r2,sp,152
 1001ab0:	d8800115 	stw	r2,4(sp)
 1001ab4:	d9403717 	ldw	r5,220(sp)
 1001ab8:	d8802504 	addi	r2,sp,148
 1001abc:	d8800215 	stw	r2,8(sp)
 1001ac0:	d8802104 	addi	r2,sp,132
 1001ac4:	df000015 	stw	fp,0(sp)
 1001ac8:	d8800315 	stw	r2,12(sp)
 1001acc:	b009883a 	mov	r4,r22
 1001ad0:	900d883a 	mov	r6,r18
 1001ad4:	01c00084 	movi	r7,2
 1001ad8:	da003f15 	stw	r8,252(sp)
 1001adc:	da403e15 	stw	r9,248(sp)
 1001ae0:	10027d00 	call	10027d0 <_dtoa_r>
 1001ae4:	d8803115 	stw	r2,196(sp)
 1001ae8:	008019c4 	movi	r2,103
 1001aec:	da003f17 	ldw	r8,252(sp)
 1001af0:	da403e17 	ldw	r9,248(sp)
 1001af4:	80800226 	beq	r16,r2,1001b00 <___vfprintf_internal_r+0x16b4>
 1001af8:	008011c4 	movi	r2,71
 1001afc:	8081101e 	bne	r16,r2,1001f40 <___vfprintf_internal_r+0x1af4>
 1001b00:	8880004c 	andi	r2,r17,1
 1001b04:	1001dd26 	beq	r2,zero,100227c <___vfprintf_internal_r+0x1e30>
 1001b08:	db003117 	ldw	r12,196(sp)
 1001b0c:	6715883a 	add	r10,r12,fp
 1001b10:	d9003717 	ldw	r4,220(sp)
 1001b14:	900b883a 	mov	r5,r18
 1001b18:	000d883a 	mov	r6,zero
 1001b1c:	000f883a 	mov	r7,zero
 1001b20:	da003f15 	stw	r8,252(sp)
 1001b24:	da403e15 	stw	r9,248(sp)
 1001b28:	da803d15 	stw	r10,244(sp)
 1001b2c:	100b1b80 	call	100b1b8 <__eqdf2>
 1001b30:	da003f17 	ldw	r8,252(sp)
 1001b34:	da403e17 	ldw	r9,248(sp)
 1001b38:	da803d17 	ldw	r10,244(sp)
 1001b3c:	10016526 	beq	r2,zero,10020d4 <___vfprintf_internal_r+0x1c88>
 1001b40:	d8802117 	ldw	r2,132(sp)
 1001b44:	1280062e 	bgeu	r2,r10,1001b60 <___vfprintf_internal_r+0x1714>
 1001b48:	01000c04 	movi	r4,48
 1001b4c:	10c00044 	addi	r3,r2,1
 1001b50:	d8c02115 	stw	r3,132(sp)
 1001b54:	11000005 	stb	r4,0(r2)
 1001b58:	d8802117 	ldw	r2,132(sp)
 1001b5c:	12bffb36 	bltu	r2,r10,1001b4c <___vfprintf_internal_r+0x1700>
 1001b60:	db003117 	ldw	r12,196(sp)
 1001b64:	1305c83a 	sub	r2,r2,r12
 1001b68:	d8803315 	stw	r2,204(sp)
 1001b6c:	008011c4 	movi	r2,71
 1001b70:	a8814d26 	beq	r21,r2,10020a8 <___vfprintf_internal_r+0x1c5c>
 1001b74:	00801944 	movi	r2,101
 1001b78:	1402060e 	bge	r2,r16,1002394 <___vfprintf_internal_r+0x1f48>
 1001b7c:	00801984 	movi	r2,102
 1001b80:	8081b426 	beq	r16,r2,1002254 <___vfprintf_internal_r+0x1e08>
 1001b84:	db002617 	ldw	r12,152(sp)
 1001b88:	db003415 	stw	r12,208(sp)
 1001b8c:	db003417 	ldw	r12,208(sp)
 1001b90:	dac03317 	ldw	r11,204(sp)
 1001b94:	62c1a016 	blt	r12,r11,1002218 <___vfprintf_internal_r+0x1dcc>
 1001b98:	8c40004c 	andi	r17,r17,1
 1001b9c:	8801bf1e 	bne	r17,zero,100229c <___vfprintf_internal_r+0x1e50>
 1001ba0:	6005883a 	mov	r2,r12
 1001ba4:	6001b316 	blt	r12,zero,1002274 <___vfprintf_internal_r+0x1e28>
 1001ba8:	dc803417 	ldw	r18,208(sp)
 1001bac:	df002b07 	ldb	fp,172(sp)
 1001bb0:	e0012e1e 	bne	fp,zero,100206c <___vfprintf_internal_r+0x1c20>
 1001bb4:	dc402d17 	ldw	r17,180(sp)
 1001bb8:	dd402783 	ldbu	r21,158(sp)
 1001bbc:	d8802b15 	stw	r2,172(sp)
 1001bc0:	dcc02d15 	stw	r19,180(sp)
 1001bc4:	d8003215 	stw	zero,200(sp)
 1001bc8:	003b7306 	br	1000998 <___vfprintf_internal_r+0x54c>
 1001bcc:	00800084 	movi	r2,2
 1001bd0:	003c4d06 	br	1000d08 <___vfprintf_internal_r+0x8bc>
 1001bd4:	8880040c 	andi	r2,r17,16
 1001bd8:	1000091e 	bne	r2,zero,1001c00 <___vfprintf_internal_r+0x17b4>
 1001bdc:	8c40100c 	andi	r17,r17,64
 1001be0:	88000726 	beq	r17,zero,1001c00 <___vfprintf_internal_r+0x17b4>
 1001be4:	db002d17 	ldw	r12,180(sp)
 1001be8:	dac02f17 	ldw	r11,188(sp)
 1001bec:	60800017 	ldw	r2,0(r12)
 1001bf0:	63000104 	addi	r12,r12,4
 1001bf4:	db002d15 	stw	r12,180(sp)
 1001bf8:	12c0000d 	sth	r11,0(r2)
 1001bfc:	003a4e06 	br	1000538 <___vfprintf_internal_r+0xec>
 1001c00:	db002d17 	ldw	r12,180(sp)
 1001c04:	dac02f17 	ldw	r11,188(sp)
 1001c08:	60800017 	ldw	r2,0(r12)
 1001c0c:	63000104 	addi	r12,r12,4
 1001c10:	db002d15 	stw	r12,180(sp)
 1001c14:	12c00015 	stw	r11,0(r2)
 1001c18:	003a4706 	br	1000538 <___vfprintf_internal_r+0xec>
 1001c1c:	1c000007 	ldb	r16,0(r3)
 1001c20:	1805883a 	mov	r2,r3
 1001c24:	003a6e06 	br	10005e0 <___vfprintf_internal_r+0x194>
 1001c28:	88c0100c 	andi	r3,r17,64
 1001c2c:	18006b26 	beq	r3,zero,1001ddc <___vfprintf_internal_r+0x1990>
 1001c30:	dac02d17 	ldw	r11,180(sp)
 1001c34:	14c0000b 	ldhu	r19,0(r2)
 1001c38:	0039883a 	mov	fp,zero
 1001c3c:	5ac00104 	addi	r11,r11,4
 1001c40:	dac02d15 	stw	r11,180(sp)
 1001c44:	003cb206 	br	1000f10 <___vfprintf_internal_r+0xac4>
 1001c48:	01004074 	movhi	r4,257
 1001c4c:	213b6084 	addi	r4,r4,-4734
 1001c50:	d9002c15 	stw	r4,176(sp)
 1001c54:	dac02c17 	ldw	r11,176(sp)
 1001c58:	1c87883a 	add	r3,r3,r18
 1001c5c:	10800044 	addi	r2,r2,1
 1001c60:	42c00015 	stw	r11,0(r8)
 1001c64:	44800115 	stw	r18,4(r8)
 1001c68:	d8c02015 	stw	r3,128(sp)
 1001c6c:	d8801f15 	stw	r2,124(sp)
 1001c70:	010001c4 	movi	r4,7
 1001c74:	20bee016 	blt	r4,r2,10017f8 <___vfprintf_internal_r+0x13ac>
 1001c78:	42000204 	addi	r8,r8,8
 1001c7c:	003ee506 	br	1001814 <___vfprintf_internal_r+0x13c8>
 1001c80:	01004074 	movhi	r4,257
 1001c84:	213b6084 	addi	r4,r4,-4734
 1001c88:	d9002c15 	stw	r4,176(sp)
 1001c8c:	003bbe06 	br	1000b88 <___vfprintf_internal_r+0x73c>
 1001c90:	b009883a 	mov	r4,r22
 1001c94:	b80b883a 	mov	r5,r23
 1001c98:	d9801e04 	addi	r6,sp,120
 1001c9c:	10077140 	call	1007714 <__sprint_r>
 1001ca0:	103ade1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001ca4:	d8c02017 	ldw	r3,128(sp)
 1001ca8:	da000404 	addi	r8,sp,16
 1001cac:	003d6b06 	br	100125c <___vfprintf_internal_r+0xe10>
 1001cb0:	d8801f17 	ldw	r2,124(sp)
 1001cb4:	03004074 	movhi	r12,257
 1001cb8:	01000044 	movi	r4,1
 1001cbc:	18c00044 	addi	r3,r3,1
 1001cc0:	10800044 	addi	r2,r2,1
 1001cc4:	633b6004 	addi	r12,r12,-4736
 1001cc8:	41000115 	stw	r4,4(r8)
 1001ccc:	43000015 	stw	r12,0(r8)
 1001cd0:	d8c02015 	stw	r3,128(sp)
 1001cd4:	d8801f15 	stw	r2,124(sp)
 1001cd8:	010001c4 	movi	r4,7
 1001cdc:	20804916 	blt	r4,r2,1001e04 <___vfprintf_internal_r+0x19b8>
 1001ce0:	42000204 	addi	r8,r8,8
 1001ce4:	8000041e 	bne	r16,zero,1001cf8 <___vfprintf_internal_r+0x18ac>
 1001ce8:	dac03317 	ldw	r11,204(sp)
 1001cec:	5800021e 	bne	r11,zero,1001cf8 <___vfprintf_internal_r+0x18ac>
 1001cf0:	8880004c 	andi	r2,r17,1
 1001cf4:	103bbb26 	beq	r2,zero,1000be4 <___vfprintf_internal_r+0x798>
 1001cf8:	db003817 	ldw	r12,224(sp)
 1001cfc:	d8801f17 	ldw	r2,124(sp)
 1001d00:	dac03517 	ldw	r11,212(sp)
 1001d04:	1b07883a 	add	r3,r3,r12
 1001d08:	10800044 	addi	r2,r2,1
 1001d0c:	42c00015 	stw	r11,0(r8)
 1001d10:	43000115 	stw	r12,4(r8)
 1001d14:	d8c02015 	stw	r3,128(sp)
 1001d18:	d8801f15 	stw	r2,124(sp)
 1001d1c:	010001c4 	movi	r4,7
 1001d20:	20812e16 	blt	r4,r2,10021dc <___vfprintf_internal_r+0x1d90>
 1001d24:	42000204 	addi	r8,r8,8
 1001d28:	0421c83a 	sub	r16,zero,r16
 1001d2c:	04005c0e 	bge	zero,r16,1001ea0 <___vfprintf_internal_r+0x1a54>
 1001d30:	04800404 	movi	r18,16
 1001d34:	94009f0e 	bge	r18,r16,1001fb4 <___vfprintf_internal_r+0x1b68>
 1001d38:	01004074 	movhi	r4,257
 1001d3c:	213b6084 	addi	r4,r4,-4734
 1001d40:	d9002c15 	stw	r4,176(sp)
 1001d44:	054001c4 	movi	r21,7
 1001d48:	00000306 	br	1001d58 <___vfprintf_internal_r+0x190c>
 1001d4c:	42000204 	addi	r8,r8,8
 1001d50:	843ffc04 	addi	r16,r16,-16
 1001d54:	94009a0e 	bge	r18,r16,1001fc0 <___vfprintf_internal_r+0x1b74>
 1001d58:	18c00404 	addi	r3,r3,16
 1001d5c:	10800044 	addi	r2,r2,1
 1001d60:	45000015 	stw	r20,0(r8)
 1001d64:	44800115 	stw	r18,4(r8)
 1001d68:	d8c02015 	stw	r3,128(sp)
 1001d6c:	d8801f15 	stw	r2,124(sp)
 1001d70:	a8bff60e 	bge	r21,r2,1001d4c <___vfprintf_internal_r+0x1900>
 1001d74:	b009883a 	mov	r4,r22
 1001d78:	b80b883a 	mov	r5,r23
 1001d7c:	d9801e04 	addi	r6,sp,120
 1001d80:	10077140 	call	1007714 <__sprint_r>
 1001d84:	103aa51e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001d88:	d8c02017 	ldw	r3,128(sp)
 1001d8c:	d8801f17 	ldw	r2,124(sp)
 1001d90:	da000404 	addi	r8,sp,16
 1001d94:	003fee06 	br	1001d50 <___vfprintf_internal_r+0x1904>
 1001d98:	008011c4 	movi	r2,71
 1001d9c:	1400be16 	blt	r2,r16,1002098 <___vfprintf_internal_r+0x1c4c>
 1001da0:	03004074 	movhi	r12,257
 1001da4:	633b5204 	addi	r12,r12,-4792
 1001da8:	db003115 	stw	r12,196(sp)
 1001dac:	00c000c4 	movi	r3,3
 1001db0:	00bfdfc4 	movi	r2,-129
 1001db4:	d8c02b15 	stw	r3,172(sp)
 1001db8:	88a2703a 	and	r17,r17,r2
 1001dbc:	dd402783 	ldbu	r21,158(sp)
 1001dc0:	dcc02d15 	stw	r19,180(sp)
 1001dc4:	1825883a 	mov	r18,r3
 1001dc8:	d8003215 	stw	zero,200(sp)
 1001dcc:	d8003415 	stw	zero,208(sp)
 1001dd0:	003af106 	br	1000998 <___vfprintf_internal_r+0x54c>
 1001dd4:	4825883a 	mov	r18,r9
 1001dd8:	003c9306 	br	1001028 <___vfprintf_internal_r+0xbdc>
 1001ddc:	db002d17 	ldw	r12,180(sp)
 1001de0:	14c00017 	ldw	r19,0(r2)
 1001de4:	0039883a 	mov	fp,zero
 1001de8:	63000104 	addi	r12,r12,4
 1001dec:	db002d15 	stw	r12,180(sp)
 1001df0:	003c4706 	br	1000f10 <___vfprintf_internal_r+0xac4>
 1001df4:	00804074 	movhi	r2,257
 1001df8:	10bb5004 	addi	r2,r2,-4800
 1001dfc:	d8803115 	stw	r2,196(sp)
 1001e00:	003bf106 	br	1000dc8 <___vfprintf_internal_r+0x97c>
 1001e04:	b009883a 	mov	r4,r22
 1001e08:	b80b883a 	mov	r5,r23
 1001e0c:	d9801e04 	addi	r6,sp,120
 1001e10:	10077140 	call	1007714 <__sprint_r>
 1001e14:	103a811e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001e18:	dc002617 	ldw	r16,152(sp)
 1001e1c:	d8c02017 	ldw	r3,128(sp)
 1001e20:	da000404 	addi	r8,sp,16
 1001e24:	003faf06 	br	1001ce4 <___vfprintf_internal_r+0x1898>
 1001e28:	db002e17 	ldw	r12,184(sp)
 1001e2c:	1805883a 	mov	r2,r3
 1001e30:	dac02d15 	stw	r11,180(sp)
 1001e34:	0319c83a 	sub	r12,zero,r12
 1001e38:	db002e15 	stw	r12,184(sp)
 1001e3c:	003a8206 	br	1000848 <___vfprintf_internal_r+0x3fc>
 1001e40:	18800044 	addi	r2,r3,1
 1001e44:	8c400814 	ori	r17,r17,32
 1001e48:	1c000047 	ldb	r16,1(r3)
 1001e4c:	0039e406 	br	10005e0 <___vfprintf_internal_r+0x194>
 1001e50:	b009883a 	mov	r4,r22
 1001e54:	b80b883a 	mov	r5,r23
 1001e58:	d9801e04 	addi	r6,sp,120
 1001e5c:	10077140 	call	1007714 <__sprint_r>
 1001e60:	103a6e1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001e64:	d8c02017 	ldw	r3,128(sp)
 1001e68:	da000404 	addi	r8,sp,16
 1001e6c:	003d0c06 	br	10012a0 <___vfprintf_internal_r+0xe54>
 1001e70:	db002817 	ldw	r12,160(sp)
 1001e74:	d8c03117 	ldw	r3,196(sp)
 1001e78:	60e5c83a 	sub	r18,r12,r3
 1001e7c:	003ac106 	br	1000984 <___vfprintf_internal_r+0x538>
 1001e80:	b009883a 	mov	r4,r22
 1001e84:	b80b883a 	mov	r5,r23
 1001e88:	d9801e04 	addi	r6,sp,120
 1001e8c:	10077140 	call	1007714 <__sprint_r>
 1001e90:	103a621e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001e94:	d8c02017 	ldw	r3,128(sp)
 1001e98:	d8801f17 	ldw	r2,124(sp)
 1001e9c:	da000404 	addi	r8,sp,16
 1001ea0:	db003317 	ldw	r12,204(sp)
 1001ea4:	dac03117 	ldw	r11,196(sp)
 1001ea8:	10800044 	addi	r2,r2,1
 1001eac:	1b07883a 	add	r3,r3,r12
 1001eb0:	42c00015 	stw	r11,0(r8)
 1001eb4:	43000115 	stw	r12,4(r8)
 1001eb8:	d8c02015 	stw	r3,128(sp)
 1001ebc:	d8801f15 	stw	r2,124(sp)
 1001ec0:	010001c4 	movi	r4,7
 1001ec4:	20bb460e 	bge	r4,r2,1000be0 <___vfprintf_internal_r+0x794>
 1001ec8:	003d8506 	br	10014e0 <___vfprintf_internal_r+0x1094>
 1001ecc:	da003f15 	stw	r8,252(sp)
 1001ed0:	10003b40 	call	10003b4 <strlen>
 1001ed4:	1025883a 	mov	r18,r2
 1001ed8:	da003f17 	ldw	r8,252(sp)
 1001edc:	903c540e 	bge	r18,zero,1001030 <___vfprintf_internal_r+0xbe4>
 1001ee0:	0005883a 	mov	r2,zero
 1001ee4:	003c5206 	br	1001030 <___vfprintf_internal_r+0xbe4>
 1001ee8:	01004074 	movhi	r4,257
 1001eec:	213b6484 	addi	r4,r4,-4718
 1001ef0:	d9003615 	stw	r4,216(sp)
 1001ef4:	003adc06 	br	1000a68 <___vfprintf_internal_r+0x61c>
 1001ef8:	d8802604 	addi	r2,sp,152
 1001efc:	d8800115 	stw	r2,4(sp)
 1001f00:	d9403717 	ldw	r5,220(sp)
 1001f04:	d8802504 	addi	r2,sp,148
 1001f08:	d8800215 	stw	r2,8(sp)
 1001f0c:	d8802104 	addi	r2,sp,132
 1001f10:	da400015 	stw	r9,0(sp)
 1001f14:	d8800315 	stw	r2,12(sp)
 1001f18:	b009883a 	mov	r4,r22
 1001f1c:	900d883a 	mov	r6,r18
 1001f20:	01c000c4 	movi	r7,3
 1001f24:	da003f15 	stw	r8,252(sp)
 1001f28:	da403e15 	stw	r9,248(sp)
 1001f2c:	10027d00 	call	10027d0 <_dtoa_r>
 1001f30:	da403e17 	ldw	r9,248(sp)
 1001f34:	da003f17 	ldw	r8,252(sp)
 1001f38:	d8803115 	stw	r2,196(sp)
 1001f3c:	4839883a 	mov	fp,r9
 1001f40:	dac03117 	ldw	r11,196(sp)
 1001f44:	00801184 	movi	r2,70
 1001f48:	5f15883a 	add	r10,r11,fp
 1001f4c:	a8bef01e 	bne	r21,r2,1001b10 <___vfprintf_internal_r+0x16c4>
 1001f50:	59000007 	ldb	r4,0(r11)
 1001f54:	00800c04 	movi	r2,48
 1001f58:	2080d526 	beq	r4,r2,10022b0 <___vfprintf_internal_r+0x1e64>
 1001f5c:	d8c02617 	ldw	r3,152(sp)
 1001f60:	50d5883a 	add	r10,r10,r3
 1001f64:	003eea06 	br	1001b10 <___vfprintf_internal_r+0x16c4>
 1001f68:	0025883a 	mov	r18,zero
 1001f6c:	003db306 	br	100163c <___vfprintf_internal_r+0x11f0>
 1001f70:	b009883a 	mov	r4,r22
 1001f74:	b80b883a 	mov	r5,r23
 1001f78:	d9801e04 	addi	r6,sp,120
 1001f7c:	10077140 	call	1007714 <__sprint_r>
 1001f80:	103a261e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001f84:	d8c02017 	ldw	r3,128(sp)
 1001f88:	da000404 	addi	r8,sp,16
 1001f8c:	003daa06 	br	1001638 <___vfprintf_internal_r+0x11ec>
 1001f90:	b009883a 	mov	r4,r22
 1001f94:	b80b883a 	mov	r5,r23
 1001f98:	d9801e04 	addi	r6,sp,120
 1001f9c:	10077140 	call	1007714 <__sprint_r>
 1001fa0:	103a1e1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1001fa4:	d8802617 	ldw	r2,152(sp)
 1001fa8:	d8c02017 	ldw	r3,128(sp)
 1001fac:	da000404 	addi	r8,sp,16
 1001fb0:	003e2c06 	br	1001864 <___vfprintf_internal_r+0x1418>
 1001fb4:	03004074 	movhi	r12,257
 1001fb8:	633b6084 	addi	r12,r12,-4734
 1001fbc:	db002c15 	stw	r12,176(sp)
 1001fc0:	dac02c17 	ldw	r11,176(sp)
 1001fc4:	1c07883a 	add	r3,r3,r16
 1001fc8:	10800044 	addi	r2,r2,1
 1001fcc:	42c00015 	stw	r11,0(r8)
 1001fd0:	44000115 	stw	r16,4(r8)
 1001fd4:	d8c02015 	stw	r3,128(sp)
 1001fd8:	d8801f15 	stw	r2,124(sp)
 1001fdc:	010001c4 	movi	r4,7
 1001fe0:	20bfa716 	blt	r4,r2,1001e80 <___vfprintf_internal_r+0x1a34>
 1001fe4:	42000204 	addi	r8,r8,8
 1001fe8:	003fad06 	br	1001ea0 <___vfprintf_internal_r+0x1a54>
 1001fec:	00800184 	movi	r2,6
 1001ff0:	1240012e 	bgeu	r2,r9,1001ff8 <___vfprintf_internal_r+0x1bac>
 1001ff4:	1013883a 	mov	r9,r2
 1001ff8:	4825883a 	mov	r18,r9
 1001ffc:	4805883a 	mov	r2,r9
 1002000:	4800c216 	blt	r9,zero,100230c <___vfprintf_internal_r+0x1ec0>
 1002004:	d8802b15 	stw	r2,172(sp)
 1002008:	00804074 	movhi	r2,257
 100200c:	10bb5e04 	addi	r2,r2,-4744
 1002010:	d8803115 	stw	r2,196(sp)
 1002014:	dcc02d15 	stw	r19,180(sp)
 1002018:	d8003215 	stw	zero,200(sp)
 100201c:	d8003415 	stw	zero,208(sp)
 1002020:	0005883a 	mov	r2,zero
 1002024:	003a6306 	br	10009b4 <___vfprintf_internal_r+0x568>
 1002028:	0021883a 	mov	r16,zero
 100202c:	003e1f06 	br	10018ac <___vfprintf_internal_r+0x1460>
 1002030:	b009883a 	mov	r4,r22
 1002034:	b80b883a 	mov	r5,r23
 1002038:	d9801e04 	addi	r6,sp,120
 100203c:	10077140 	call	1007714 <__sprint_r>
 1002040:	1039f61e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 1002044:	d8802617 	ldw	r2,152(sp)
 1002048:	db003317 	ldw	r12,204(sp)
 100204c:	d8c02017 	ldw	r3,128(sp)
 1002050:	da000404 	addi	r8,sp,16
 1002054:	6085c83a 	sub	r2,r12,r2
 1002058:	003e1306 	br	10018a8 <___vfprintf_internal_r+0x145c>
 100205c:	03004074 	movhi	r12,257
 1002060:	633b6484 	addi	r12,r12,-4718
 1002064:	db003615 	stw	r12,216(sp)
 1002068:	003b0206 	br	1000c74 <___vfprintf_internal_r+0x828>
 100206c:	00c00b44 	movi	r3,45
 1002070:	d8802b15 	stw	r2,172(sp)
 1002074:	dc402d17 	ldw	r17,180(sp)
 1002078:	d8c02785 	stb	r3,158(sp)
 100207c:	dcc02d15 	stw	r19,180(sp)
 1002080:	d8003215 	stw	zero,200(sp)
 1002084:	00800b44 	movi	r2,45
 1002088:	003a4706 	br	10009a8 <___vfprintf_internal_r+0x55c>
 100208c:	05400b44 	movi	r21,45
 1002090:	dd402785 	stb	r21,158(sp)
 1002094:	003b4706 	br	1000db4 <___vfprintf_internal_r+0x968>
 1002098:	00804074 	movhi	r2,257
 100209c:	10bb5304 	addi	r2,r2,-4788
 10020a0:	d8803115 	stw	r2,196(sp)
 10020a4:	003f4106 	br	1001dac <___vfprintf_internal_r+0x1960>
 10020a8:	d8c02617 	ldw	r3,152(sp)
 10020ac:	00bfff44 	movi	r2,-3
 10020b0:	18801116 	blt	r3,r2,10020f8 <___vfprintf_internal_r+0x1cac>
 10020b4:	48c01016 	blt	r9,r3,10020f8 <___vfprintf_internal_r+0x1cac>
 10020b8:	d8c03415 	stw	r3,208(sp)
 10020bc:	040019c4 	movi	r16,103
 10020c0:	003eb206 	br	1001b8c <___vfprintf_internal_r+0x1740>
 10020c4:	01004074 	movhi	r4,257
 10020c8:	213b6084 	addi	r4,r4,-4734
 10020cc:	d9002c15 	stw	r4,176(sp)
 10020d0:	003cb106 	br	1001398 <___vfprintf_internal_r+0xf4c>
 10020d4:	5005883a 	mov	r2,r10
 10020d8:	003ea106 	br	1001b60 <___vfprintf_internal_r+0x1714>
 10020dc:	da402b15 	stw	r9,172(sp)
 10020e0:	dd402783 	ldbu	r21,158(sp)
 10020e4:	4825883a 	mov	r18,r9
 10020e8:	dcc02d15 	stw	r19,180(sp)
 10020ec:	d8003215 	stw	zero,200(sp)
 10020f0:	d8003415 	stw	zero,208(sp)
 10020f4:	003a2806 	br	1000998 <___vfprintf_internal_r+0x54c>
 10020f8:	843fff84 	addi	r16,r16,-2
 10020fc:	1f3fffc4 	addi	fp,r3,-1
 1002100:	df002615 	stw	fp,152(sp)
 1002104:	dc0022c5 	stb	r16,139(sp)
 1002108:	e0009816 	blt	fp,zero,100236c <___vfprintf_internal_r+0x1f20>
 100210c:	00800ac4 	movi	r2,43
 1002110:	d8802305 	stb	r2,140(sp)
 1002114:	00800244 	movi	r2,9
 1002118:	1700750e 	bge	r2,fp,10022f0 <___vfprintf_internal_r+0x1ea4>
 100211c:	dd4022c4 	addi	r21,sp,139
 1002120:	dc002c15 	stw	r16,176(sp)
 1002124:	4025883a 	mov	r18,r8
 1002128:	a821883a 	mov	r16,r21
 100212c:	e009883a 	mov	r4,fp
 1002130:	01400284 	movi	r5,10
 1002134:	1009fe40 	call	1009fe4 <__modsi3>
 1002138:	10800c04 	addi	r2,r2,48
 100213c:	843fffc4 	addi	r16,r16,-1
 1002140:	e009883a 	mov	r4,fp
 1002144:	01400284 	movi	r5,10
 1002148:	80800005 	stb	r2,0(r16)
 100214c:	1009f900 	call	1009f90 <__divsi3>
 1002150:	1039883a 	mov	fp,r2
 1002154:	00800244 	movi	r2,9
 1002158:	173ff416 	blt	r2,fp,100212c <___vfprintf_internal_r+0x1ce0>
 100215c:	9011883a 	mov	r8,r18
 1002160:	e0800c04 	addi	r2,fp,48
 1002164:	8025883a 	mov	r18,r16
 1002168:	913fffc4 	addi	r4,r18,-1
 100216c:	90bfffc5 	stb	r2,-1(r18)
 1002170:	dc002c17 	ldw	r16,176(sp)
 1002174:	2540852e 	bgeu	r4,r21,100238c <___vfprintf_internal_r+0x1f40>
 1002178:	d9402384 	addi	r5,sp,142
 100217c:	2c8bc83a 	sub	r5,r5,r18
 1002180:	d8c02344 	addi	r3,sp,141
 1002184:	a94b883a 	add	r5,r21,r5
 1002188:	00000106 	br	1002190 <___vfprintf_internal_r+0x1d44>
 100218c:	20800003 	ldbu	r2,0(r4)
 1002190:	18800005 	stb	r2,0(r3)
 1002194:	18c00044 	addi	r3,r3,1
 1002198:	21000044 	addi	r4,r4,1
 100219c:	197ffb1e 	bne	r3,r5,100218c <___vfprintf_internal_r+0x1d40>
 10021a0:	d8802304 	addi	r2,sp,140
 10021a4:	1485c83a 	sub	r2,r2,r18
 10021a8:	d8c02344 	addi	r3,sp,141
 10021ac:	1885883a 	add	r2,r3,r2
 10021b0:	dac03317 	ldw	r11,204(sp)
 10021b4:	156bc83a 	sub	r21,r2,r21
 10021b8:	dd403a15 	stw	r21,232(sp)
 10021bc:	00800044 	movi	r2,1
 10021c0:	5d65883a 	add	r18,r11,r21
 10021c4:	12c0660e 	bge	r2,r11,1002360 <___vfprintf_internal_r+0x1f14>
 10021c8:	94800044 	addi	r18,r18,1
 10021cc:	9005883a 	mov	r2,r18
 10021d0:	90006116 	blt	r18,zero,1002358 <___vfprintf_internal_r+0x1f0c>
 10021d4:	d8003415 	stw	zero,208(sp)
 10021d8:	003e7406 	br	1001bac <___vfprintf_internal_r+0x1760>
 10021dc:	b009883a 	mov	r4,r22
 10021e0:	b80b883a 	mov	r5,r23
 10021e4:	d9801e04 	addi	r6,sp,120
 10021e8:	10077140 	call	1007714 <__sprint_r>
 10021ec:	10398b1e 	bne	r2,zero,100081c <___vfprintf_internal_r+0x3d0>
 10021f0:	dc002617 	ldw	r16,152(sp)
 10021f4:	d8c02017 	ldw	r3,128(sp)
 10021f8:	d8801f17 	ldw	r2,124(sp)
 10021fc:	da000404 	addi	r8,sp,16
 1002200:	003ec906 	br	1001d28 <___vfprintf_internal_r+0x18dc>
 1002204:	483e1c1e 	bne	r9,zero,1001a78 <___vfprintf_internal_r+0x162c>
 1002208:	9013883a 	mov	r9,r18
 100220c:	003e1a06 	br	1001a78 <___vfprintf_internal_r+0x162c>
 1002210:	02400184 	movi	r9,6
 1002214:	003e1806 	br	1001a78 <___vfprintf_internal_r+0x162c>
 1002218:	d8c03417 	ldw	r3,208(sp)
 100221c:	00c04b0e 	bge	zero,r3,100234c <___vfprintf_internal_r+0x1f00>
 1002220:	04800044 	movi	r18,1
 1002224:	dac03317 	ldw	r11,204(sp)
 1002228:	92e5883a 	add	r18,r18,r11
 100222c:	9005883a 	mov	r2,r18
 1002230:	903e5e0e 	bge	r18,zero,1001bac <___vfprintf_internal_r+0x1760>
 1002234:	0005883a 	mov	r2,zero
 1002238:	003e5c06 	br	1001bac <___vfprintf_internal_r+0x1760>
 100223c:	00c00b44 	movi	r3,45
 1002240:	64a0003c 	xorhi	r18,r12,32768
 1002244:	d8c02b05 	stb	r3,172(sp)
 1002248:	003e1106 	br	1001a90 <___vfprintf_internal_r+0x1644>
 100224c:	4f000044 	addi	fp,r9,1
 1002250:	003e1606 	br	1001aac <___vfprintf_internal_r+0x1660>
 1002254:	d8c02617 	ldw	r3,152(sp)
 1002258:	d8c03415 	stw	r3,208(sp)
 100225c:	00c0350e 	bge	zero,r3,1002334 <___vfprintf_internal_r+0x1ee8>
 1002260:	4800081e 	bne	r9,zero,1002284 <___vfprintf_internal_r+0x1e38>
 1002264:	8c40004c 	andi	r17,r17,1
 1002268:	8800061e 	bne	r17,zero,1002284 <___vfprintf_internal_r+0x1e38>
 100226c:	1805883a 	mov	r2,r3
 1002270:	183e4d0e 	bge	r3,zero,1001ba8 <___vfprintf_internal_r+0x175c>
 1002274:	0005883a 	mov	r2,zero
 1002278:	003e4b06 	br	1001ba8 <___vfprintf_internal_r+0x175c>
 100227c:	d8802117 	ldw	r2,132(sp)
 1002280:	003e3706 	br	1001b60 <___vfprintf_internal_r+0x1714>
 1002284:	dac03417 	ldw	r11,208(sp)
 1002288:	4a400044 	addi	r9,r9,1
 100228c:	5a65883a 	add	r18,r11,r9
 1002290:	9005883a 	mov	r2,r18
 1002294:	903e450e 	bge	r18,zero,1001bac <___vfprintf_internal_r+0x1760>
 1002298:	003fe606 	br	1002234 <___vfprintf_internal_r+0x1de8>
 100229c:	db003417 	ldw	r12,208(sp)
 10022a0:	64800044 	addi	r18,r12,1
 10022a4:	9005883a 	mov	r2,r18
 10022a8:	903e400e 	bge	r18,zero,1001bac <___vfprintf_internal_r+0x1760>
 10022ac:	003fe106 	br	1002234 <___vfprintf_internal_r+0x1de8>
 10022b0:	d9003717 	ldw	r4,220(sp)
 10022b4:	900b883a 	mov	r5,r18
 10022b8:	000d883a 	mov	r6,zero
 10022bc:	000f883a 	mov	r7,zero
 10022c0:	da003f15 	stw	r8,252(sp)
 10022c4:	da403e15 	stw	r9,248(sp)
 10022c8:	da803d15 	stw	r10,244(sp)
 10022cc:	100b1b80 	call	100b1b8 <__eqdf2>
 10022d0:	da003f17 	ldw	r8,252(sp)
 10022d4:	da403e17 	ldw	r9,248(sp)
 10022d8:	da803d17 	ldw	r10,244(sp)
 10022dc:	103f1f26 	beq	r2,zero,1001f5c <___vfprintf_internal_r+0x1b10>
 10022e0:	00800044 	movi	r2,1
 10022e4:	1707c83a 	sub	r3,r2,fp
 10022e8:	d8c02615 	stw	r3,152(sp)
 10022ec:	003f1c06 	br	1001f60 <___vfprintf_internal_r+0x1b14>
 10022f0:	00800c04 	movi	r2,48
 10022f4:	e0c00c04 	addi	r3,fp,48
 10022f8:	d8802345 	stb	r2,141(sp)
 10022fc:	d8c02385 	stb	r3,142(sp)
 1002300:	d88023c4 	addi	r2,sp,143
 1002304:	dd4022c4 	addi	r21,sp,139
 1002308:	003fa906 	br	10021b0 <___vfprintf_internal_r+0x1d64>
 100230c:	0005883a 	mov	r2,zero
 1002310:	003f3c06 	br	1002004 <___vfprintf_internal_r+0x1bb8>
 1002314:	dac02d17 	ldw	r11,180(sp)
 1002318:	5a400017 	ldw	r9,0(r11)
 100231c:	5ac00104 	addi	r11,r11,4
 1002320:	dac02d15 	stw	r11,180(sp)
 1002324:	483ec80e 	bge	r9,zero,1001e48 <___vfprintf_internal_r+0x19fc>
 1002328:	027fffc4 	movi	r9,-1
 100232c:	1c000047 	ldb	r16,1(r3)
 1002330:	0038ab06 	br	10005e0 <___vfprintf_internal_r+0x194>
 1002334:	4800111e 	bne	r9,zero,100237c <___vfprintf_internal_r+0x1f30>
 1002338:	8c40004c 	andi	r17,r17,1
 100233c:	88000f1e 	bne	r17,zero,100237c <___vfprintf_internal_r+0x1f30>
 1002340:	00800044 	movi	r2,1
 1002344:	1025883a 	mov	r18,r2
 1002348:	003e1806 	br	1001bac <___vfprintf_internal_r+0x1760>
 100234c:	04800084 	movi	r18,2
 1002350:	90e5c83a 	sub	r18,r18,r3
 1002354:	003fb306 	br	1002224 <___vfprintf_internal_r+0x1dd8>
 1002358:	0005883a 	mov	r2,zero
 100235c:	003f9d06 	br	10021d4 <___vfprintf_internal_r+0x1d88>
 1002360:	88a2703a 	and	r17,r17,r2
 1002364:	883f9926 	beq	r17,zero,10021cc <___vfprintf_internal_r+0x1d80>
 1002368:	003f9706 	br	10021c8 <___vfprintf_internal_r+0x1d7c>
 100236c:	00800b44 	movi	r2,45
 1002370:	0739c83a 	sub	fp,zero,fp
 1002374:	d8802305 	stb	r2,140(sp)
 1002378:	003f6606 	br	1002114 <___vfprintf_internal_r+0x1cc8>
 100237c:	4c800084 	addi	r18,r9,2
 1002380:	9005883a 	mov	r2,r18
 1002384:	903e090e 	bge	r18,zero,1001bac <___vfprintf_internal_r+0x1760>
 1002388:	003faa06 	br	1002234 <___vfprintf_internal_r+0x1de8>
 100238c:	d8802344 	addi	r2,sp,141
 1002390:	003f8706 	br	10021b0 <___vfprintf_internal_r+0x1d64>
 1002394:	d8c02617 	ldw	r3,152(sp)
 1002398:	003f5806 	br	10020fc <___vfprintf_internal_r+0x1cb0>

0100239c <__vfprintf_internal>:
 100239c:	2007883a 	mov	r3,r4
 10023a0:	01004074 	movhi	r4,257
 10023a4:	2102b904 	addi	r4,r4,2788
 10023a8:	21000017 	ldw	r4,0(r4)
 10023ac:	2805883a 	mov	r2,r5
 10023b0:	300f883a 	mov	r7,r6
 10023b4:	180b883a 	mov	r5,r3
 10023b8:	100d883a 	mov	r6,r2
 10023bc:	100044c1 	jmpi	100044c <___vfprintf_internal_r>

010023c0 <__sbprintf>:
 10023c0:	2880030b 	ldhu	r2,12(r5)
 10023c4:	2ac01917 	ldw	r11,100(r5)
 10023c8:	2a80038b 	ldhu	r10,14(r5)
 10023cc:	2a400717 	ldw	r9,28(r5)
 10023d0:	2a000917 	ldw	r8,36(r5)
 10023d4:	defee204 	addi	sp,sp,-1144
 10023d8:	00c10004 	movi	r3,1024
 10023dc:	dc011a15 	stw	r16,1128(sp)
 10023e0:	10bfff4c 	andi	r2,r2,65533
 10023e4:	2821883a 	mov	r16,r5
 10023e8:	d8cb883a 	add	r5,sp,r3
 10023ec:	dc811c15 	stw	r18,1136(sp)
 10023f0:	dc411b15 	stw	r17,1132(sp)
 10023f4:	dfc11d15 	stw	ra,1140(sp)
 10023f8:	2025883a 	mov	r18,r4
 10023fc:	d881030d 	sth	r2,1036(sp)
 1002400:	dac11915 	stw	r11,1124(sp)
 1002404:	da81038d 	sth	r10,1038(sp)
 1002408:	da410715 	stw	r9,1052(sp)
 100240c:	da010915 	stw	r8,1060(sp)
 1002410:	dec10015 	stw	sp,1024(sp)
 1002414:	dec10415 	stw	sp,1040(sp)
 1002418:	d8c10215 	stw	r3,1032(sp)
 100241c:	d8c10515 	stw	r3,1044(sp)
 1002420:	d8010615 	stw	zero,1048(sp)
 1002424:	100044c0 	call	100044c <___vfprintf_internal_r>
 1002428:	1023883a 	mov	r17,r2
 100242c:	10000416 	blt	r2,zero,1002440 <__sbprintf+0x80>
 1002430:	9009883a 	mov	r4,r18
 1002434:	d9410004 	addi	r5,sp,1024
 1002438:	10041000 	call	1004100 <_fflush_r>
 100243c:	10000d1e 	bne	r2,zero,1002474 <__sbprintf+0xb4>
 1002440:	d8c1030b 	ldhu	r3,1036(sp)
 1002444:	18c0100c 	andi	r3,r3,64
 1002448:	18000326 	beq	r3,zero,1002458 <__sbprintf+0x98>
 100244c:	8080030b 	ldhu	r2,12(r16)
 1002450:	10801014 	ori	r2,r2,64
 1002454:	8080030d 	sth	r2,12(r16)
 1002458:	8805883a 	mov	r2,r17
 100245c:	dfc11d17 	ldw	ra,1140(sp)
 1002460:	dc811c17 	ldw	r18,1136(sp)
 1002464:	dc411b17 	ldw	r17,1132(sp)
 1002468:	dc011a17 	ldw	r16,1128(sp)
 100246c:	dec11e04 	addi	sp,sp,1144
 1002470:	f800283a 	ret
 1002474:	047fffc4 	movi	r17,-1
 1002478:	003ff106 	br	1002440 <__sbprintf+0x80>

0100247c <__swsetup_r>:
 100247c:	00804074 	movhi	r2,257
 1002480:	defffd04 	addi	sp,sp,-12
 1002484:	1082b904 	addi	r2,r2,2788
 1002488:	dc400115 	stw	r17,4(sp)
 100248c:	2023883a 	mov	r17,r4
 1002490:	11000017 	ldw	r4,0(r2)
 1002494:	dc000015 	stw	r16,0(sp)
 1002498:	dfc00215 	stw	ra,8(sp)
 100249c:	2821883a 	mov	r16,r5
 10024a0:	20000226 	beq	r4,zero,10024ac <__swsetup_r+0x30>
 10024a4:	20c00e17 	ldw	r3,56(r4)
 10024a8:	18003126 	beq	r3,zero,1002570 <__swsetup_r+0xf4>
 10024ac:	8080030b 	ldhu	r2,12(r16)
 10024b0:	10c0020c 	andi	r3,r2,8
 10024b4:	100d883a 	mov	r6,r2
 10024b8:	18000f26 	beq	r3,zero,10024f8 <__swsetup_r+0x7c>
 10024bc:	80c00417 	ldw	r3,16(r16)
 10024c0:	18001526 	beq	r3,zero,1002518 <__swsetup_r+0x9c>
 10024c4:	1100004c 	andi	r4,r2,1
 10024c8:	20001c1e 	bne	r4,zero,100253c <__swsetup_r+0xc0>
 10024cc:	1080008c 	andi	r2,r2,2
 10024d0:	1000291e 	bne	r2,zero,1002578 <__swsetup_r+0xfc>
 10024d4:	80800517 	ldw	r2,20(r16)
 10024d8:	80800215 	stw	r2,8(r16)
 10024dc:	18001c26 	beq	r3,zero,1002550 <__swsetup_r+0xd4>
 10024e0:	0005883a 	mov	r2,zero
 10024e4:	dfc00217 	ldw	ra,8(sp)
 10024e8:	dc400117 	ldw	r17,4(sp)
 10024ec:	dc000017 	ldw	r16,0(sp)
 10024f0:	dec00304 	addi	sp,sp,12
 10024f4:	f800283a 	ret
 10024f8:	3080040c 	andi	r2,r6,16
 10024fc:	10002e26 	beq	r2,zero,10025b8 <__swsetup_r+0x13c>
 1002500:	3080010c 	andi	r2,r6,4
 1002504:	10001e1e 	bne	r2,zero,1002580 <__swsetup_r+0x104>
 1002508:	80c00417 	ldw	r3,16(r16)
 100250c:	30800214 	ori	r2,r6,8
 1002510:	8080030d 	sth	r2,12(r16)
 1002514:	183feb1e 	bne	r3,zero,10024c4 <__swsetup_r+0x48>
 1002518:	1140a00c 	andi	r5,r2,640
 100251c:	01008004 	movi	r4,512
 1002520:	293fe826 	beq	r5,r4,10024c4 <__swsetup_r+0x48>
 1002524:	8809883a 	mov	r4,r17
 1002528:	800b883a 	mov	r5,r16
 100252c:	10050680 	call	1005068 <__smakebuf_r>
 1002530:	8080030b 	ldhu	r2,12(r16)
 1002534:	80c00417 	ldw	r3,16(r16)
 1002538:	003fe206 	br	10024c4 <__swsetup_r+0x48>
 100253c:	80800517 	ldw	r2,20(r16)
 1002540:	80000215 	stw	zero,8(r16)
 1002544:	0085c83a 	sub	r2,zero,r2
 1002548:	80800615 	stw	r2,24(r16)
 100254c:	183fe41e 	bne	r3,zero,10024e0 <__swsetup_r+0x64>
 1002550:	80c0030b 	ldhu	r3,12(r16)
 1002554:	0005883a 	mov	r2,zero
 1002558:	1900200c 	andi	r4,r3,128
 100255c:	203fe126 	beq	r4,zero,10024e4 <__swsetup_r+0x68>
 1002560:	18c01014 	ori	r3,r3,64
 1002564:	80c0030d 	sth	r3,12(r16)
 1002568:	00bfffc4 	movi	r2,-1
 100256c:	003fdd06 	br	10024e4 <__swsetup_r+0x68>
 1002570:	10044dc0 	call	10044dc <__sinit>
 1002574:	003fcd06 	br	10024ac <__swsetup_r+0x30>
 1002578:	0005883a 	mov	r2,zero
 100257c:	003fd606 	br	10024d8 <__swsetup_r+0x5c>
 1002580:	81400c17 	ldw	r5,48(r16)
 1002584:	28000626 	beq	r5,zero,10025a0 <__swsetup_r+0x124>
 1002588:	80801004 	addi	r2,r16,64
 100258c:	28800326 	beq	r5,r2,100259c <__swsetup_r+0x120>
 1002590:	8809883a 	mov	r4,r17
 1002594:	10046500 	call	1004650 <_free_r>
 1002598:	8180030b 	ldhu	r6,12(r16)
 100259c:	80000c15 	stw	zero,48(r16)
 10025a0:	80c00417 	ldw	r3,16(r16)
 10025a4:	00bff6c4 	movi	r2,-37
 10025a8:	118c703a 	and	r6,r2,r6
 10025ac:	80000115 	stw	zero,4(r16)
 10025b0:	80c00015 	stw	r3,0(r16)
 10025b4:	003fd506 	br	100250c <__swsetup_r+0x90>
 10025b8:	00800244 	movi	r2,9
 10025bc:	88800015 	stw	r2,0(r17)
 10025c0:	30801014 	ori	r2,r6,64
 10025c4:	8080030d 	sth	r2,12(r16)
 10025c8:	00bfffc4 	movi	r2,-1
 10025cc:	003fc506 	br	10024e4 <__swsetup_r+0x68>

010025d0 <quorem>:
 10025d0:	defff704 	addi	sp,sp,-36
 10025d4:	dc800215 	stw	r18,8(sp)
 10025d8:	20800417 	ldw	r2,16(r4)
 10025dc:	2c800417 	ldw	r18,16(r5)
 10025e0:	dfc00815 	stw	ra,32(sp)
 10025e4:	ddc00715 	stw	r23,28(sp)
 10025e8:	dd800615 	stw	r22,24(sp)
 10025ec:	dd400515 	stw	r21,20(sp)
 10025f0:	dd000415 	stw	r20,16(sp)
 10025f4:	dcc00315 	stw	r19,12(sp)
 10025f8:	dc400115 	stw	r17,4(sp)
 10025fc:	dc000015 	stw	r16,0(sp)
 1002600:	14807116 	blt	r2,r18,10027c8 <quorem+0x1f8>
 1002604:	94bfffc4 	addi	r18,r18,-1
 1002608:	94ad883a 	add	r22,r18,r18
 100260c:	b5ad883a 	add	r22,r22,r22
 1002610:	2c400504 	addi	r17,r5,20
 1002614:	8da9883a 	add	r20,r17,r22
 1002618:	25400504 	addi	r21,r4,20
 100261c:	282f883a 	mov	r23,r5
 1002620:	adad883a 	add	r22,r21,r22
 1002624:	a1400017 	ldw	r5,0(r20)
 1002628:	2021883a 	mov	r16,r4
 100262c:	b1000017 	ldw	r4,0(r22)
 1002630:	29400044 	addi	r5,r5,1
 1002634:	100a0400 	call	100a040 <__udivsi3>
 1002638:	1027883a 	mov	r19,r2
 100263c:	10002c26 	beq	r2,zero,10026f0 <quorem+0x120>
 1002640:	a813883a 	mov	r9,r21
 1002644:	8811883a 	mov	r8,r17
 1002648:	0009883a 	mov	r4,zero
 100264c:	000d883a 	mov	r6,zero
 1002650:	41c00017 	ldw	r7,0(r8)
 1002654:	49400017 	ldw	r5,0(r9)
 1002658:	42000104 	addi	r8,r8,4
 100265c:	38bfffcc 	andi	r2,r7,65535
 1002660:	14c5383a 	mul	r2,r2,r19
 1002664:	380ed43a 	srli	r7,r7,16
 1002668:	28ffffcc 	andi	r3,r5,65535
 100266c:	2085883a 	add	r2,r4,r2
 1002670:	1008d43a 	srli	r4,r2,16
 1002674:	3ccf383a 	mul	r7,r7,r19
 1002678:	198d883a 	add	r6,r3,r6
 100267c:	10ffffcc 	andi	r3,r2,65535
 1002680:	30c7c83a 	sub	r3,r6,r3
 1002684:	280ad43a 	srli	r5,r5,16
 1002688:	21c9883a 	add	r4,r4,r7
 100268c:	180dd43a 	srai	r6,r3,16
 1002690:	20bfffcc 	andi	r2,r4,65535
 1002694:	288bc83a 	sub	r5,r5,r2
 1002698:	298b883a 	add	r5,r5,r6
 100269c:	280e943a 	slli	r7,r5,16
 10026a0:	18ffffcc 	andi	r3,r3,65535
 10026a4:	2008d43a 	srli	r4,r4,16
 10026a8:	38ceb03a 	or	r7,r7,r3
 10026ac:	49c00015 	stw	r7,0(r9)
 10026b0:	280dd43a 	srai	r6,r5,16
 10026b4:	4a400104 	addi	r9,r9,4
 10026b8:	a23fe52e 	bgeu	r20,r8,1002650 <quorem+0x80>
 10026bc:	b0800017 	ldw	r2,0(r22)
 10026c0:	10000b1e 	bne	r2,zero,10026f0 <quorem+0x120>
 10026c4:	b0bfff04 	addi	r2,r22,-4
 10026c8:	a880082e 	bgeu	r21,r2,10026ec <quorem+0x11c>
 10026cc:	b0ffff17 	ldw	r3,-4(r22)
 10026d0:	18000326 	beq	r3,zero,10026e0 <quorem+0x110>
 10026d4:	00000506 	br	10026ec <quorem+0x11c>
 10026d8:	10c00017 	ldw	r3,0(r2)
 10026dc:	1800031e 	bne	r3,zero,10026ec <quorem+0x11c>
 10026e0:	10bfff04 	addi	r2,r2,-4
 10026e4:	94bfffc4 	addi	r18,r18,-1
 10026e8:	a8bffb36 	bltu	r21,r2,10026d8 <quorem+0x108>
 10026ec:	84800415 	stw	r18,16(r16)
 10026f0:	8009883a 	mov	r4,r16
 10026f4:	b80b883a 	mov	r5,r23
 10026f8:	100673c0 	call	100673c <__mcmp>
 10026fc:	10002616 	blt	r2,zero,1002798 <quorem+0x1c8>
 1002700:	9cc00044 	addi	r19,r19,1
 1002704:	a80d883a 	mov	r6,r21
 1002708:	000b883a 	mov	r5,zero
 100270c:	31000017 	ldw	r4,0(r6)
 1002710:	88800017 	ldw	r2,0(r17)
 1002714:	31800104 	addi	r6,r6,4
 1002718:	20ffffcc 	andi	r3,r4,65535
 100271c:	194b883a 	add	r5,r3,r5
 1002720:	10ffffcc 	andi	r3,r2,65535
 1002724:	28c7c83a 	sub	r3,r5,r3
 1002728:	1004d43a 	srli	r2,r2,16
 100272c:	2008d43a 	srli	r4,r4,16
 1002730:	180bd43a 	srai	r5,r3,16
 1002734:	18ffffcc 	andi	r3,r3,65535
 1002738:	2089c83a 	sub	r4,r4,r2
 100273c:	2149883a 	add	r4,r4,r5
 1002740:	2004943a 	slli	r2,r4,16
 1002744:	8c400104 	addi	r17,r17,4
 1002748:	200bd43a 	srai	r5,r4,16
 100274c:	10c6b03a 	or	r3,r2,r3
 1002750:	30ffff15 	stw	r3,-4(r6)
 1002754:	a47fed2e 	bgeu	r20,r17,100270c <quorem+0x13c>
 1002758:	9485883a 	add	r2,r18,r18
 100275c:	1085883a 	add	r2,r2,r2
 1002760:	a887883a 	add	r3,r21,r2
 1002764:	18800017 	ldw	r2,0(r3)
 1002768:	10000b1e 	bne	r2,zero,1002798 <quorem+0x1c8>
 100276c:	18bfff04 	addi	r2,r3,-4
 1002770:	a880082e 	bgeu	r21,r2,1002794 <quorem+0x1c4>
 1002774:	18ffff17 	ldw	r3,-4(r3)
 1002778:	18000326 	beq	r3,zero,1002788 <quorem+0x1b8>
 100277c:	00000506 	br	1002794 <quorem+0x1c4>
 1002780:	10c00017 	ldw	r3,0(r2)
 1002784:	1800031e 	bne	r3,zero,1002794 <quorem+0x1c4>
 1002788:	10bfff04 	addi	r2,r2,-4
 100278c:	94bfffc4 	addi	r18,r18,-1
 1002790:	a8bffb36 	bltu	r21,r2,1002780 <quorem+0x1b0>
 1002794:	84800415 	stw	r18,16(r16)
 1002798:	9805883a 	mov	r2,r19
 100279c:	dfc00817 	ldw	ra,32(sp)
 10027a0:	ddc00717 	ldw	r23,28(sp)
 10027a4:	dd800617 	ldw	r22,24(sp)
 10027a8:	dd400517 	ldw	r21,20(sp)
 10027ac:	dd000417 	ldw	r20,16(sp)
 10027b0:	dcc00317 	ldw	r19,12(sp)
 10027b4:	dc800217 	ldw	r18,8(sp)
 10027b8:	dc400117 	ldw	r17,4(sp)
 10027bc:	dc000017 	ldw	r16,0(sp)
 10027c0:	dec00904 	addi	sp,sp,36
 10027c4:	f800283a 	ret
 10027c8:	0005883a 	mov	r2,zero
 10027cc:	003ff306 	br	100279c <quorem+0x1cc>

010027d0 <_dtoa_r>:
 10027d0:	20801017 	ldw	r2,64(r4)
 10027d4:	deffde04 	addi	sp,sp,-136
 10027d8:	dd401d15 	stw	r21,116(sp)
 10027dc:	dcc01b15 	stw	r19,108(sp)
 10027e0:	dc801a15 	stw	r18,104(sp)
 10027e4:	dc401915 	stw	r17,100(sp)
 10027e8:	dc001815 	stw	r16,96(sp)
 10027ec:	dfc02115 	stw	ra,132(sp)
 10027f0:	df002015 	stw	fp,128(sp)
 10027f4:	ddc01f15 	stw	r23,124(sp)
 10027f8:	dd801e15 	stw	r22,120(sp)
 10027fc:	dd001c15 	stw	r20,112(sp)
 1002800:	d9c00315 	stw	r7,12(sp)
 1002804:	2021883a 	mov	r16,r4
 1002808:	302b883a 	mov	r21,r6
 100280c:	2825883a 	mov	r18,r5
 1002810:	dc402417 	ldw	r17,144(sp)
 1002814:	3027883a 	mov	r19,r6
 1002818:	10000826 	beq	r2,zero,100283c <_dtoa_r+0x6c>
 100281c:	21801117 	ldw	r6,68(r4)
 1002820:	00c00044 	movi	r3,1
 1002824:	100b883a 	mov	r5,r2
 1002828:	1986983a 	sll	r3,r3,r6
 100282c:	11800115 	stw	r6,4(r2)
 1002830:	10c00215 	stw	r3,8(r2)
 1002834:	1005f100 	call	1005f10 <_Bfree>
 1002838:	80001015 	stw	zero,64(r16)
 100283c:	a8002d16 	blt	r21,zero,10028f4 <_dtoa_r+0x124>
 1002840:	88000015 	stw	zero,0(r17)
 1002844:	a8dffc2c 	andhi	r3,r21,32752
 1002848:	009ffc34 	movhi	r2,32752
 100284c:	18801b26 	beq	r3,r2,10028bc <_dtoa_r+0xec>
 1002850:	9009883a 	mov	r4,r18
 1002854:	980b883a 	mov	r5,r19
 1002858:	000d883a 	mov	r6,zero
 100285c:	000f883a 	mov	r7,zero
 1002860:	100b1b80 	call	100b1b8 <__eqdf2>
 1002864:	10002a1e 	bne	r2,zero,1002910 <_dtoa_r+0x140>
 1002868:	d8c02317 	ldw	r3,140(sp)
 100286c:	d9002517 	ldw	r4,148(sp)
 1002870:	00800044 	movi	r2,1
 1002874:	18800015 	stw	r2,0(r3)
 1002878:	2001a226 	beq	r4,zero,1002f04 <_dtoa_r+0x734>
 100287c:	00804074 	movhi	r2,257
 1002880:	10bb6044 	addi	r2,r2,-4735
 1002884:	20800015 	stw	r2,0(r4)
 1002888:	10bfffc4 	addi	r2,r2,-1
 100288c:	dfc02117 	ldw	ra,132(sp)
 1002890:	df002017 	ldw	fp,128(sp)
 1002894:	ddc01f17 	ldw	r23,124(sp)
 1002898:	dd801e17 	ldw	r22,120(sp)
 100289c:	dd401d17 	ldw	r21,116(sp)
 10028a0:	dd001c17 	ldw	r20,112(sp)
 10028a4:	dcc01b17 	ldw	r19,108(sp)
 10028a8:	dc801a17 	ldw	r18,104(sp)
 10028ac:	dc401917 	ldw	r17,100(sp)
 10028b0:	dc001817 	ldw	r16,96(sp)
 10028b4:	dec02204 	addi	sp,sp,136
 10028b8:	f800283a 	ret
 10028bc:	d8c02317 	ldw	r3,140(sp)
 10028c0:	0089c3c4 	movi	r2,9999
 10028c4:	18800015 	stw	r2,0(r3)
 10028c8:	90017c26 	beq	r18,zero,1002ebc <_dtoa_r+0x6ec>
 10028cc:	00804074 	movhi	r2,257
 10028d0:	10bb6c04 	addi	r2,r2,-4688
 10028d4:	d9002517 	ldw	r4,148(sp)
 10028d8:	203fec26 	beq	r4,zero,100288c <_dtoa_r+0xbc>
 10028dc:	10c000c7 	ldb	r3,3(r2)
 10028e0:	18017d1e 	bne	r3,zero,1002ed8 <_dtoa_r+0x708>
 10028e4:	10c000c4 	addi	r3,r2,3
 10028e8:	d9802517 	ldw	r6,148(sp)
 10028ec:	30c00015 	stw	r3,0(r6)
 10028f0:	003fe606 	br	100288c <_dtoa_r+0xbc>
 10028f4:	04e00034 	movhi	r19,32768
 10028f8:	9cffffc4 	addi	r19,r19,-1
 10028fc:	00800044 	movi	r2,1
 1002900:	ace6703a 	and	r19,r21,r19
 1002904:	88800015 	stw	r2,0(r17)
 1002908:	982b883a 	mov	r21,r19
 100290c:	003fcd06 	br	1002844 <_dtoa_r+0x74>
 1002910:	d8800204 	addi	r2,sp,8
 1002914:	a822d53a 	srli	r17,r21,20
 1002918:	d8800015 	stw	r2,0(sp)
 100291c:	8009883a 	mov	r4,r16
 1002920:	900b883a 	mov	r5,r18
 1002924:	980d883a 	mov	r6,r19
 1002928:	d9c00104 	addi	r7,sp,4
 100292c:	1006ab00 	call	1006ab0 <__d2b>
 1002930:	1039883a 	mov	fp,r2
 1002934:	88016a1e 	bne	r17,zero,1002ee0 <_dtoa_r+0x710>
 1002938:	dd000217 	ldw	r20,8(sp)
 100293c:	dc400117 	ldw	r17,4(sp)
 1002940:	00befbc4 	movi	r2,-1041
 1002944:	a463883a 	add	r17,r20,r17
 1002948:	8882ea16 	blt	r17,r2,10034f4 <_dtoa_r+0xd24>
 100294c:	00bf0384 	movi	r2,-1010
 1002950:	1445c83a 	sub	r2,r2,r17
 1002954:	89010484 	addi	r4,r17,1042
 1002958:	a8aa983a 	sll	r21,r21,r2
 100295c:	9108d83a 	srl	r4,r18,r4
 1002960:	a908b03a 	or	r4,r21,r4
 1002964:	100c5480 	call	100c548 <__floatunsidf>
 1002968:	017f8434 	movhi	r5,65040
 100296c:	01800044 	movi	r6,1
 1002970:	1009883a 	mov	r4,r2
 1002974:	194b883a 	add	r5,r3,r5
 1002978:	8c7fffc4 	addi	r17,r17,-1
 100297c:	d9800f15 	stw	r6,60(sp)
 1002980:	000d883a 	mov	r6,zero
 1002984:	01cffe34 	movhi	r7,16376
 1002988:	100bb200 	call	100bb20 <__subdf3>
 100298c:	0198dbf4 	movhi	r6,25455
 1002990:	01cff4f4 	movhi	r7,16339
 1002994:	1009883a 	mov	r4,r2
 1002998:	180b883a 	mov	r5,r3
 100299c:	3190d844 	addi	r6,r6,17249
 10029a0:	39e1e9c4 	addi	r7,r7,-30809
 10029a4:	100b3fc0 	call	100b3fc <__muldf3>
 10029a8:	01a2d874 	movhi	r6,35681
 10029ac:	01cff1f4 	movhi	r7,16327
 10029b0:	180b883a 	mov	r5,r3
 10029b4:	31b22cc4 	addi	r6,r6,-14157
 10029b8:	39e28a04 	addi	r7,r7,-30168
 10029bc:	1009883a 	mov	r4,r2
 10029c0:	100a0500 	call	100a050 <__adddf3>
 10029c4:	8809883a 	mov	r4,r17
 10029c8:	102d883a 	mov	r22,r2
 10029cc:	182b883a 	mov	r21,r3
 10029d0:	100c4780 	call	100c478 <__floatsidf>
 10029d4:	019427f4 	movhi	r6,20639
 10029d8:	01cff4f4 	movhi	r7,16339
 10029dc:	1009883a 	mov	r4,r2
 10029e0:	180b883a 	mov	r5,r3
 10029e4:	319e7ec4 	addi	r6,r6,31227
 10029e8:	39d104c4 	addi	r7,r7,17427
 10029ec:	100b3fc0 	call	100b3fc <__muldf3>
 10029f0:	b009883a 	mov	r4,r22
 10029f4:	a80b883a 	mov	r5,r21
 10029f8:	100d883a 	mov	r6,r2
 10029fc:	180f883a 	mov	r7,r3
 1002a00:	100a0500 	call	100a050 <__adddf3>
 1002a04:	1009883a 	mov	r4,r2
 1002a08:	180b883a 	mov	r5,r3
 1002a0c:	102d883a 	mov	r22,r2
 1002a10:	182b883a 	mov	r21,r3
 1002a14:	100c3f00 	call	100c3f0 <__fixdfsi>
 1002a18:	b009883a 	mov	r4,r22
 1002a1c:	a80b883a 	mov	r5,r21
 1002a20:	000d883a 	mov	r6,zero
 1002a24:	000f883a 	mov	r7,zero
 1002a28:	d8800515 	stw	r2,20(sp)
 1002a2c:	100b31c0 	call	100b31c <__ledf2>
 1002a30:	10023116 	blt	r2,zero,10032f8 <_dtoa_r+0xb28>
 1002a34:	d8c00517 	ldw	r3,20(sp)
 1002a38:	00800584 	movi	r2,22
 1002a3c:	10c21f36 	bltu	r2,r3,10032bc <_dtoa_r+0xaec>
 1002a40:	180490fa 	slli	r2,r3,3
 1002a44:	00c04074 	movhi	r3,257
 1002a48:	18fb8804 	addi	r3,r3,-4576
 1002a4c:	1885883a 	add	r2,r3,r2
 1002a50:	11000017 	ldw	r4,0(r2)
 1002a54:	11400117 	ldw	r5,4(r2)
 1002a58:	900d883a 	mov	r6,r18
 1002a5c:	980f883a 	mov	r7,r19
 1002a60:	100b23c0 	call	100b23c <__gedf2>
 1002a64:	0082a70e 	bge	zero,r2,1003504 <_dtoa_r+0xd34>
 1002a68:	d9000517 	ldw	r4,20(sp)
 1002a6c:	d8000d15 	stw	zero,52(sp)
 1002a70:	213fffc4 	addi	r4,r4,-1
 1002a74:	d9000515 	stw	r4,20(sp)
 1002a78:	a463c83a 	sub	r17,r20,r17
 1002a7c:	8dbfffc4 	addi	r22,r17,-1
 1002a80:	b0021916 	blt	r22,zero,10032e8 <_dtoa_r+0xb18>
 1002a84:	d8000815 	stw	zero,32(sp)
 1002a88:	d8800517 	ldw	r2,20(sp)
 1002a8c:	10020e16 	blt	r2,zero,10032c8 <_dtoa_r+0xaf8>
 1002a90:	b0ad883a 	add	r22,r22,r2
 1002a94:	d8800a15 	stw	r2,40(sp)
 1002a98:	d8000915 	stw	zero,36(sp)
 1002a9c:	d8c00317 	ldw	r3,12(sp)
 1002aa0:	00800244 	movi	r2,9
 1002aa4:	10c11a36 	bltu	r2,r3,1002f10 <_dtoa_r+0x740>
 1002aa8:	00800144 	movi	r2,5
 1002aac:	10c4fc0e 	bge	r2,r3,1003ea0 <_dtoa_r+0x16d0>
 1002ab0:	18ffff04 	addi	r3,r3,-4
 1002ab4:	d8c00315 	stw	r3,12(sp)
 1002ab8:	0029883a 	mov	r20,zero
 1002abc:	d9800317 	ldw	r6,12(sp)
 1002ac0:	008000c4 	movi	r2,3
 1002ac4:	3083bd26 	beq	r6,r2,10039bc <_dtoa_r+0x11ec>
 1002ac8:	1183670e 	bge	r2,r6,1003868 <_dtoa_r+0x1098>
 1002acc:	d8c00317 	ldw	r3,12(sp)
 1002ad0:	00800104 	movi	r2,4
 1002ad4:	1882e726 	beq	r3,r2,1003674 <_dtoa_r+0xea4>
 1002ad8:	00800144 	movi	r2,5
 1002adc:	1884f21e 	bne	r3,r2,1003ea8 <_dtoa_r+0x16d8>
 1002ae0:	00800044 	movi	r2,1
 1002ae4:	d8800b15 	stw	r2,44(sp)
 1002ae8:	d8c02217 	ldw	r3,136(sp)
 1002aec:	d9000517 	ldw	r4,20(sp)
 1002af0:	1907883a 	add	r3,r3,r4
 1002af4:	19800044 	addi	r6,r3,1
 1002af8:	d8c00c15 	stw	r3,48(sp)
 1002afc:	d9800615 	stw	r6,24(sp)
 1002b00:	0183c30e 	bge	zero,r6,1003a10 <_dtoa_r+0x1240>
 1002b04:	d9800617 	ldw	r6,24(sp)
 1002b08:	3023883a 	mov	r17,r6
 1002b0c:	80001115 	stw	zero,68(r16)
 1002b10:	008005c4 	movi	r2,23
 1002b14:	1184f62e 	bgeu	r2,r6,1003ef0 <_dtoa_r+0x1720>
 1002b18:	00c00044 	movi	r3,1
 1002b1c:	00800104 	movi	r2,4
 1002b20:	1085883a 	add	r2,r2,r2
 1002b24:	11000504 	addi	r4,r2,20
 1002b28:	180b883a 	mov	r5,r3
 1002b2c:	18c00044 	addi	r3,r3,1
 1002b30:	313ffb2e 	bgeu	r6,r4,1002b20 <_dtoa_r+0x350>
 1002b34:	81401115 	stw	r5,68(r16)
 1002b38:	8009883a 	mov	r4,r16
 1002b3c:	1005e680 	call	1005e68 <_Balloc>
 1002b40:	d8800715 	stw	r2,28(sp)
 1002b44:	80801015 	stw	r2,64(r16)
 1002b48:	00800384 	movi	r2,14
 1002b4c:	1440fd36 	bltu	r2,r17,1002f44 <_dtoa_r+0x774>
 1002b50:	a000fc26 	beq	r20,zero,1002f44 <_dtoa_r+0x774>
 1002b54:	d8800517 	ldw	r2,20(sp)
 1002b58:	0083b90e 	bge	zero,r2,1003a40 <_dtoa_r+0x1270>
 1002b5c:	d8c00517 	ldw	r3,20(sp)
 1002b60:	108003cc 	andi	r2,r2,15
 1002b64:	100490fa 	slli	r2,r2,3
 1002b68:	182fd13a 	srai	r23,r3,4
 1002b6c:	00c04074 	movhi	r3,257
 1002b70:	18fb8804 	addi	r3,r3,-4576
 1002b74:	1885883a 	add	r2,r3,r2
 1002b78:	b8c0040c 	andi	r3,r23,16
 1002b7c:	12c00017 	ldw	r11,0(r2)
 1002b80:	12800117 	ldw	r10,4(r2)
 1002b84:	18039726 	beq	r3,zero,10039e4 <_dtoa_r+0x1214>
 1002b88:	00804074 	movhi	r2,257
 1002b8c:	10bb7e04 	addi	r2,r2,-4616
 1002b90:	11800817 	ldw	r6,32(r2)
 1002b94:	11c00917 	ldw	r7,36(r2)
 1002b98:	9009883a 	mov	r4,r18
 1002b9c:	980b883a 	mov	r5,r19
 1002ba0:	da801615 	stw	r10,88(sp)
 1002ba4:	dac01515 	stw	r11,84(sp)
 1002ba8:	100a8ec0 	call	100a8ec <__divdf3>
 1002bac:	da801617 	ldw	r10,88(sp)
 1002bb0:	dac01517 	ldw	r11,84(sp)
 1002bb4:	bdc003cc 	andi	r23,r23,15
 1002bb8:	044000c4 	movi	r17,3
 1002bbc:	d8800e15 	stw	r2,56(sp)
 1002bc0:	182b883a 	mov	r21,r3
 1002bc4:	b8001126 	beq	r23,zero,1002c0c <_dtoa_r+0x43c>
 1002bc8:	05004074 	movhi	r20,257
 1002bcc:	a53b7e04 	addi	r20,r20,-4616
 1002bd0:	5805883a 	mov	r2,r11
 1002bd4:	5007883a 	mov	r3,r10
 1002bd8:	b980004c 	andi	r6,r23,1
 1002bdc:	1009883a 	mov	r4,r2
 1002be0:	b82fd07a 	srai	r23,r23,1
 1002be4:	180b883a 	mov	r5,r3
 1002be8:	30000426 	beq	r6,zero,1002bfc <_dtoa_r+0x42c>
 1002bec:	a1800017 	ldw	r6,0(r20)
 1002bf0:	a1c00117 	ldw	r7,4(r20)
 1002bf4:	8c400044 	addi	r17,r17,1
 1002bf8:	100b3fc0 	call	100b3fc <__muldf3>
 1002bfc:	a5000204 	addi	r20,r20,8
 1002c00:	b83ff51e 	bne	r23,zero,1002bd8 <_dtoa_r+0x408>
 1002c04:	1017883a 	mov	r11,r2
 1002c08:	1815883a 	mov	r10,r3
 1002c0c:	d9000e17 	ldw	r4,56(sp)
 1002c10:	a80b883a 	mov	r5,r21
 1002c14:	580d883a 	mov	r6,r11
 1002c18:	500f883a 	mov	r7,r10
 1002c1c:	100a8ec0 	call	100a8ec <__divdf3>
 1002c20:	1029883a 	mov	r20,r2
 1002c24:	182b883a 	mov	r21,r3
 1002c28:	d9800d17 	ldw	r6,52(sp)
 1002c2c:	30000626 	beq	r6,zero,1002c48 <_dtoa_r+0x478>
 1002c30:	a009883a 	mov	r4,r20
 1002c34:	a80b883a 	mov	r5,r21
 1002c38:	000d883a 	mov	r6,zero
 1002c3c:	01cffc34 	movhi	r7,16368
 1002c40:	100b31c0 	call	100b31c <__ledf2>
 1002c44:	10043216 	blt	r2,zero,1003d10 <_dtoa_r+0x1540>
 1002c48:	8809883a 	mov	r4,r17
 1002c4c:	100c4780 	call	100c478 <__floatsidf>
 1002c50:	1009883a 	mov	r4,r2
 1002c54:	180b883a 	mov	r5,r3
 1002c58:	a00d883a 	mov	r6,r20
 1002c5c:	a80f883a 	mov	r7,r21
 1002c60:	100b3fc0 	call	100b3fc <__muldf3>
 1002c64:	000d883a 	mov	r6,zero
 1002c68:	1009883a 	mov	r4,r2
 1002c6c:	180b883a 	mov	r5,r3
 1002c70:	01d00734 	movhi	r7,16412
 1002c74:	100a0500 	call	100a050 <__adddf3>
 1002c78:	1023883a 	mov	r17,r2
 1002c7c:	d9800617 	ldw	r6,24(sp)
 1002c80:	00bf3034 	movhi	r2,64704
 1002c84:	1885883a 	add	r2,r3,r2
 1002c88:	d8800e15 	stw	r2,56(sp)
 1002c8c:	30032e26 	beq	r6,zero,1003948 <_dtoa_r+0x1178>
 1002c90:	d8c00517 	ldw	r3,20(sp)
 1002c94:	da800617 	ldw	r10,24(sp)
 1002c98:	d8c01215 	stw	r3,72(sp)
 1002c9c:	d9000b17 	ldw	r4,44(sp)
 1002ca0:	2003b026 	beq	r4,zero,1003b64 <_dtoa_r+0x1394>
 1002ca4:	50bfffc4 	addi	r2,r10,-1
 1002ca8:	100490fa 	slli	r2,r2,3
 1002cac:	00c04074 	movhi	r3,257
 1002cb0:	18fb8804 	addi	r3,r3,-4576
 1002cb4:	1885883a 	add	r2,r3,r2
 1002cb8:	11800017 	ldw	r6,0(r2)
 1002cbc:	11c00117 	ldw	r7,4(r2)
 1002cc0:	d8800717 	ldw	r2,28(sp)
 1002cc4:	0009883a 	mov	r4,zero
 1002cc8:	014ff834 	movhi	r5,16352
 1002ccc:	da801615 	stw	r10,88(sp)
 1002cd0:	15c00044 	addi	r23,r2,1
 1002cd4:	100a8ec0 	call	100a8ec <__divdf3>
 1002cd8:	d9c00e17 	ldw	r7,56(sp)
 1002cdc:	880d883a 	mov	r6,r17
 1002ce0:	1009883a 	mov	r4,r2
 1002ce4:	180b883a 	mov	r5,r3
 1002ce8:	100bb200 	call	100bb20 <__subdf3>
 1002cec:	a80b883a 	mov	r5,r21
 1002cf0:	a009883a 	mov	r4,r20
 1002cf4:	d8c01015 	stw	r3,64(sp)
 1002cf8:	d8800e15 	stw	r2,56(sp)
 1002cfc:	100c3f00 	call	100c3f0 <__fixdfsi>
 1002d00:	1009883a 	mov	r4,r2
 1002d04:	d8801715 	stw	r2,92(sp)
 1002d08:	100c4780 	call	100c478 <__floatsidf>
 1002d0c:	a009883a 	mov	r4,r20
 1002d10:	a80b883a 	mov	r5,r21
 1002d14:	100d883a 	mov	r6,r2
 1002d18:	180f883a 	mov	r7,r3
 1002d1c:	100bb200 	call	100bb20 <__subdf3>
 1002d20:	da001717 	ldw	r8,92(sp)
 1002d24:	1829883a 	mov	r20,r3
 1002d28:	d8c00717 	ldw	r3,28(sp)
 1002d2c:	d9000e17 	ldw	r4,56(sp)
 1002d30:	d9401017 	ldw	r5,64(sp)
 1002d34:	42000c04 	addi	r8,r8,48
 1002d38:	1023883a 	mov	r17,r2
 1002d3c:	1a000005 	stb	r8,0(r3)
 1002d40:	880d883a 	mov	r6,r17
 1002d44:	a00f883a 	mov	r7,r20
 1002d48:	402b883a 	mov	r21,r8
 1002d4c:	100b23c0 	call	100b23c <__gedf2>
 1002d50:	00844516 	blt	zero,r2,1003e68 <_dtoa_r+0x1698>
 1002d54:	0009883a 	mov	r4,zero
 1002d58:	014ffc34 	movhi	r5,16368
 1002d5c:	880d883a 	mov	r6,r17
 1002d60:	a00f883a 	mov	r7,r20
 1002d64:	100bb200 	call	100bb20 <__subdf3>
 1002d68:	d9000e17 	ldw	r4,56(sp)
 1002d6c:	d9401017 	ldw	r5,64(sp)
 1002d70:	100d883a 	mov	r6,r2
 1002d74:	180f883a 	mov	r7,r3
 1002d78:	100b23c0 	call	100b23c <__gedf2>
 1002d7c:	da801617 	ldw	r10,88(sp)
 1002d80:	00843616 	blt	zero,r2,1003e5c <_dtoa_r+0x168c>
 1002d84:	00800044 	movi	r2,1
 1002d88:	12806e0e 	bge	r2,r10,1002f44 <_dtoa_r+0x774>
 1002d8c:	d9000717 	ldw	r4,28(sp)
 1002d90:	dd801315 	stw	r22,76(sp)
 1002d94:	dc001115 	stw	r16,68(sp)
 1002d98:	2295883a 	add	r10,r4,r10
 1002d9c:	dcc01415 	stw	r19,80(sp)
 1002da0:	502d883a 	mov	r22,r10
 1002da4:	dcc01017 	ldw	r19,64(sp)
 1002da8:	b821883a 	mov	r16,r23
 1002dac:	dc801015 	stw	r18,64(sp)
 1002db0:	dc800e17 	ldw	r18,56(sp)
 1002db4:	00000906 	br	1002ddc <_dtoa_r+0x60c>
 1002db8:	100bb200 	call	100bb20 <__subdf3>
 1002dbc:	1009883a 	mov	r4,r2
 1002dc0:	180b883a 	mov	r5,r3
 1002dc4:	900d883a 	mov	r6,r18
 1002dc8:	980f883a 	mov	r7,r19
 1002dcc:	100b31c0 	call	100b31c <__ledf2>
 1002dd0:	10040e16 	blt	r2,zero,1003e0c <_dtoa_r+0x163c>
 1002dd4:	b821883a 	mov	r16,r23
 1002dd8:	bd841026 	beq	r23,r22,1003e1c <_dtoa_r+0x164c>
 1002ddc:	9009883a 	mov	r4,r18
 1002de0:	980b883a 	mov	r5,r19
 1002de4:	000d883a 	mov	r6,zero
 1002de8:	01d00934 	movhi	r7,16420
 1002dec:	100b3fc0 	call	100b3fc <__muldf3>
 1002df0:	000d883a 	mov	r6,zero
 1002df4:	01d00934 	movhi	r7,16420
 1002df8:	8809883a 	mov	r4,r17
 1002dfc:	a00b883a 	mov	r5,r20
 1002e00:	1025883a 	mov	r18,r2
 1002e04:	1827883a 	mov	r19,r3
 1002e08:	100b3fc0 	call	100b3fc <__muldf3>
 1002e0c:	180b883a 	mov	r5,r3
 1002e10:	1009883a 	mov	r4,r2
 1002e14:	1823883a 	mov	r17,r3
 1002e18:	1029883a 	mov	r20,r2
 1002e1c:	100c3f00 	call	100c3f0 <__fixdfsi>
 1002e20:	1009883a 	mov	r4,r2
 1002e24:	102b883a 	mov	r21,r2
 1002e28:	100c4780 	call	100c478 <__floatsidf>
 1002e2c:	a009883a 	mov	r4,r20
 1002e30:	880b883a 	mov	r5,r17
 1002e34:	100d883a 	mov	r6,r2
 1002e38:	180f883a 	mov	r7,r3
 1002e3c:	100bb200 	call	100bb20 <__subdf3>
 1002e40:	ad400c04 	addi	r21,r21,48
 1002e44:	1009883a 	mov	r4,r2
 1002e48:	180b883a 	mov	r5,r3
 1002e4c:	900d883a 	mov	r6,r18
 1002e50:	980f883a 	mov	r7,r19
 1002e54:	85400005 	stb	r21,0(r16)
 1002e58:	1023883a 	mov	r17,r2
 1002e5c:	1829883a 	mov	r20,r3
 1002e60:	100b31c0 	call	100b31c <__ledf2>
 1002e64:	bdc00044 	addi	r23,r23,1
 1002e68:	0009883a 	mov	r4,zero
 1002e6c:	014ffc34 	movhi	r5,16368
 1002e70:	880d883a 	mov	r6,r17
 1002e74:	a00f883a 	mov	r7,r20
 1002e78:	103fcf0e 	bge	r2,zero,1002db8 <_dtoa_r+0x5e8>
 1002e7c:	d9801217 	ldw	r6,72(sp)
 1002e80:	dc001117 	ldw	r16,68(sp)
 1002e84:	d9800515 	stw	r6,20(sp)
 1002e88:	8009883a 	mov	r4,r16
 1002e8c:	e00b883a 	mov	r5,fp
 1002e90:	1005f100 	call	1005f10 <_Bfree>
 1002e94:	d8c00517 	ldw	r3,20(sp)
 1002e98:	d9002317 	ldw	r4,140(sp)
 1002e9c:	d9802517 	ldw	r6,148(sp)
 1002ea0:	b8000005 	stb	zero,0(r23)
 1002ea4:	18800044 	addi	r2,r3,1
 1002ea8:	20800015 	stw	r2,0(r4)
 1002eac:	30027226 	beq	r6,zero,1003878 <_dtoa_r+0x10a8>
 1002eb0:	35c00015 	stw	r23,0(r6)
 1002eb4:	d8800717 	ldw	r2,28(sp)
 1002eb8:	003e7406 	br	100288c <_dtoa_r+0xbc>
 1002ebc:	00800434 	movhi	r2,16
 1002ec0:	10bfffc4 	addi	r2,r2,-1
 1002ec4:	a8aa703a 	and	r21,r21,r2
 1002ec8:	a83e801e 	bne	r21,zero,10028cc <_dtoa_r+0xfc>
 1002ecc:	00804074 	movhi	r2,257
 1002ed0:	10bb6904 	addi	r2,r2,-4700
 1002ed4:	003e7f06 	br	10028d4 <_dtoa_r+0x104>
 1002ed8:	10c00204 	addi	r3,r2,8
 1002edc:	003e8206 	br	10028e8 <_dtoa_r+0x118>
 1002ee0:	01400434 	movhi	r5,16
 1002ee4:	297fffc4 	addi	r5,r5,-1
 1002ee8:	994a703a 	and	r5,r19,r5
 1002eec:	9009883a 	mov	r4,r18
 1002ef0:	8c7f0044 	addi	r17,r17,-1023
 1002ef4:	294ffc34 	orhi	r5,r5,16368
 1002ef8:	dd000217 	ldw	r20,8(sp)
 1002efc:	d8000f15 	stw	zero,60(sp)
 1002f00:	003e9f06 	br	1002980 <_dtoa_r+0x1b0>
 1002f04:	00804074 	movhi	r2,257
 1002f08:	10bb6004 	addi	r2,r2,-4736
 1002f0c:	003e5f06 	br	100288c <_dtoa_r+0xbc>
 1002f10:	80001115 	stw	zero,68(r16)
 1002f14:	8009883a 	mov	r4,r16
 1002f18:	000b883a 	mov	r5,zero
 1002f1c:	1005e680 	call	1005e68 <_Balloc>
 1002f20:	01bfffc4 	movi	r6,-1
 1002f24:	d8800715 	stw	r2,28(sp)
 1002f28:	80801015 	stw	r2,64(r16)
 1002f2c:	00800044 	movi	r2,1
 1002f30:	d9800c15 	stw	r6,48(sp)
 1002f34:	d8800b15 	stw	r2,44(sp)
 1002f38:	d9800615 	stw	r6,24(sp)
 1002f3c:	d8002215 	stw	zero,136(sp)
 1002f40:	d8000315 	stw	zero,12(sp)
 1002f44:	d8800117 	ldw	r2,4(sp)
 1002f48:	10008e16 	blt	r2,zero,1003184 <_dtoa_r+0x9b4>
 1002f4c:	d9000517 	ldw	r4,20(sp)
 1002f50:	00c00384 	movi	r3,14
 1002f54:	19008b16 	blt	r3,r4,1003184 <_dtoa_r+0x9b4>
 1002f58:	200490fa 	slli	r2,r4,3
 1002f5c:	00c04074 	movhi	r3,257
 1002f60:	d9802217 	ldw	r6,136(sp)
 1002f64:	18fb8804 	addi	r3,r3,-4576
 1002f68:	1885883a 	add	r2,r3,r2
 1002f6c:	14400017 	ldw	r17,0(r2)
 1002f70:	15000117 	ldw	r20,4(r2)
 1002f74:	3001c716 	blt	r6,zero,1003694 <_dtoa_r+0xec4>
 1002f78:	880d883a 	mov	r6,r17
 1002f7c:	a00f883a 	mov	r7,r20
 1002f80:	9009883a 	mov	r4,r18
 1002f84:	980b883a 	mov	r5,r19
 1002f88:	100a8ec0 	call	100a8ec <__divdf3>
 1002f8c:	180b883a 	mov	r5,r3
 1002f90:	1009883a 	mov	r4,r2
 1002f94:	100c3f00 	call	100c3f0 <__fixdfsi>
 1002f98:	1009883a 	mov	r4,r2
 1002f9c:	102d883a 	mov	r22,r2
 1002fa0:	100c4780 	call	100c478 <__floatsidf>
 1002fa4:	1009883a 	mov	r4,r2
 1002fa8:	180b883a 	mov	r5,r3
 1002fac:	880d883a 	mov	r6,r17
 1002fb0:	a00f883a 	mov	r7,r20
 1002fb4:	100b3fc0 	call	100b3fc <__muldf3>
 1002fb8:	9009883a 	mov	r4,r18
 1002fbc:	980b883a 	mov	r5,r19
 1002fc0:	100d883a 	mov	r6,r2
 1002fc4:	180f883a 	mov	r7,r3
 1002fc8:	100bb200 	call	100bb20 <__subdf3>
 1002fcc:	d9000717 	ldw	r4,28(sp)
 1002fd0:	d9800617 	ldw	r6,24(sp)
 1002fd4:	180b883a 	mov	r5,r3
 1002fd8:	b0c00c04 	addi	r3,r22,48
 1002fdc:	20c00005 	stb	r3,0(r4)
 1002fe0:	25c00044 	addi	r23,r4,1
 1002fe4:	01000044 	movi	r4,1
 1002fe8:	1011883a 	mov	r8,r2
 1002fec:	2807883a 	mov	r3,r5
 1002ff0:	31003d26 	beq	r6,r4,10030e8 <_dtoa_r+0x918>
 1002ff4:	000d883a 	mov	r6,zero
 1002ff8:	01d00934 	movhi	r7,16420
 1002ffc:	1009883a 	mov	r4,r2
 1003000:	100b3fc0 	call	100b3fc <__muldf3>
 1003004:	1009883a 	mov	r4,r2
 1003008:	180b883a 	mov	r5,r3
 100300c:	000d883a 	mov	r6,zero
 1003010:	000f883a 	mov	r7,zero
 1003014:	1027883a 	mov	r19,r2
 1003018:	182b883a 	mov	r21,r3
 100301c:	100b1b80 	call	100b1b8 <__eqdf2>
 1003020:	103f9926 	beq	r2,zero,1002e88 <_dtoa_r+0x6b8>
 1003024:	d8c00617 	ldw	r3,24(sp)
 1003028:	d9000717 	ldw	r4,28(sp)
 100302c:	b825883a 	mov	r18,r23
 1003030:	18bfffc4 	addi	r2,r3,-1
 1003034:	20ad883a 	add	r22,r4,r2
 1003038:	dc000315 	stw	r16,12(sp)
 100303c:	00000a06 	br	1003068 <_dtoa_r+0x898>
 1003040:	100b3fc0 	call	100b3fc <__muldf3>
 1003044:	1009883a 	mov	r4,r2
 1003048:	180b883a 	mov	r5,r3
 100304c:	000d883a 	mov	r6,zero
 1003050:	000f883a 	mov	r7,zero
 1003054:	1027883a 	mov	r19,r2
 1003058:	182b883a 	mov	r21,r3
 100305c:	b825883a 	mov	r18,r23
 1003060:	100b1b80 	call	100b1b8 <__eqdf2>
 1003064:	10022626 	beq	r2,zero,1003900 <_dtoa_r+0x1130>
 1003068:	880d883a 	mov	r6,r17
 100306c:	a00f883a 	mov	r7,r20
 1003070:	9809883a 	mov	r4,r19
 1003074:	a80b883a 	mov	r5,r21
 1003078:	100a8ec0 	call	100a8ec <__divdf3>
 100307c:	180b883a 	mov	r5,r3
 1003080:	1009883a 	mov	r4,r2
 1003084:	100c3f00 	call	100c3f0 <__fixdfsi>
 1003088:	1009883a 	mov	r4,r2
 100308c:	1021883a 	mov	r16,r2
 1003090:	100c4780 	call	100c478 <__floatsidf>
 1003094:	1009883a 	mov	r4,r2
 1003098:	180b883a 	mov	r5,r3
 100309c:	880d883a 	mov	r6,r17
 10030a0:	a00f883a 	mov	r7,r20
 10030a4:	100b3fc0 	call	100b3fc <__muldf3>
 10030a8:	9809883a 	mov	r4,r19
 10030ac:	a80b883a 	mov	r5,r21
 10030b0:	100d883a 	mov	r6,r2
 10030b4:	180f883a 	mov	r7,r3
 10030b8:	100bb200 	call	100bb20 <__subdf3>
 10030bc:	82000c04 	addi	r8,r16,48
 10030c0:	92000005 	stb	r8,0(r18)
 10030c4:	1009883a 	mov	r4,r2
 10030c8:	180b883a 	mov	r5,r3
 10030cc:	000d883a 	mov	r6,zero
 10030d0:	01d00934 	movhi	r7,16420
 10030d4:	1011883a 	mov	r8,r2
 10030d8:	bdc00044 	addi	r23,r23,1
 10030dc:	95bfd81e 	bne	r18,r22,1003040 <_dtoa_r+0x870>
 10030e0:	802d883a 	mov	r22,r16
 10030e4:	dc000317 	ldw	r16,12(sp)
 10030e8:	4009883a 	mov	r4,r8
 10030ec:	180b883a 	mov	r5,r3
 10030f0:	400d883a 	mov	r6,r8
 10030f4:	180f883a 	mov	r7,r3
 10030f8:	100a0500 	call	100a050 <__adddf3>
 10030fc:	8809883a 	mov	r4,r17
 1003100:	a00b883a 	mov	r5,r20
 1003104:	100d883a 	mov	r6,r2
 1003108:	180f883a 	mov	r7,r3
 100310c:	1027883a 	mov	r19,r2
 1003110:	1825883a 	mov	r18,r3
 1003114:	100b31c0 	call	100b31c <__ledf2>
 1003118:	10000816 	blt	r2,zero,100313c <_dtoa_r+0x96c>
 100311c:	8809883a 	mov	r4,r17
 1003120:	a00b883a 	mov	r5,r20
 1003124:	980d883a 	mov	r6,r19
 1003128:	900f883a 	mov	r7,r18
 100312c:	100b1b80 	call	100b1b8 <__eqdf2>
 1003130:	103f551e 	bne	r2,zero,1002e88 <_dtoa_r+0x6b8>
 1003134:	b580004c 	andi	r22,r22,1
 1003138:	b03f5326 	beq	r22,zero,1002e88 <_dtoa_r+0x6b8>
 100313c:	bd7fffc3 	ldbu	r21,-1(r23)
 1003140:	b8bfffc4 	addi	r2,r23,-1
 1003144:	1007883a 	mov	r3,r2
 1003148:	01400e44 	movi	r5,57
 100314c:	d9800717 	ldw	r6,28(sp)
 1003150:	00000506 	br	1003168 <_dtoa_r+0x998>
 1003154:	18ffffc4 	addi	r3,r3,-1
 1003158:	30825e26 	beq	r6,r2,1003ad4 <_dtoa_r+0x1304>
 100315c:	1d400003 	ldbu	r21,0(r3)
 1003160:	102f883a 	mov	r23,r2
 1003164:	10bfffc4 	addi	r2,r2,-1
 1003168:	a9003fcc 	andi	r4,r21,255
 100316c:	2100201c 	xori	r4,r4,128
 1003170:	213fe004 	addi	r4,r4,-128
 1003174:	217ff726 	beq	r4,r5,1003154 <_dtoa_r+0x984>
 1003178:	aa000044 	addi	r8,r21,1
 100317c:	12000005 	stb	r8,0(r2)
 1003180:	003f4106 	br	1002e88 <_dtoa_r+0x6b8>
 1003184:	d8c00b17 	ldw	r3,44(sp)
 1003188:	18006726 	beq	r3,zero,1003328 <_dtoa_r+0xb58>
 100318c:	d9000317 	ldw	r4,12(sp)
 1003190:	00c00044 	movi	r3,1
 1003194:	19016a0e 	bge	r3,r4,1003740 <_dtoa_r+0xf70>
 1003198:	d8800617 	ldw	r2,24(sp)
 100319c:	d8c00917 	ldw	r3,36(sp)
 10031a0:	157fffc4 	addi	r21,r2,-1
 10031a4:	1d420716 	blt	r3,r21,10039c4 <_dtoa_r+0x11f4>
 10031a8:	1d6bc83a 	sub	r21,r3,r21
 10031ac:	d8800617 	ldw	r2,24(sp)
 10031b0:	1002c716 	blt	r2,zero,1003cd0 <_dtoa_r+0x1500>
 10031b4:	dd000817 	ldw	r20,32(sp)
 10031b8:	d8800617 	ldw	r2,24(sp)
 10031bc:	d9800817 	ldw	r6,32(sp)
 10031c0:	8009883a 	mov	r4,r16
 10031c4:	01400044 	movi	r5,1
 10031c8:	308d883a 	add	r6,r6,r2
 10031cc:	d9800815 	stw	r6,32(sp)
 10031d0:	b0ad883a 	add	r22,r22,r2
 10031d4:	10062740 	call	1006274 <__i2b>
 10031d8:	1023883a 	mov	r17,r2
 10031dc:	a0000826 	beq	r20,zero,1003200 <_dtoa_r+0xa30>
 10031e0:	0580070e 	bge	zero,r22,1003200 <_dtoa_r+0xa30>
 10031e4:	b005883a 	mov	r2,r22
 10031e8:	a5812016 	blt	r20,r22,100366c <_dtoa_r+0xe9c>
 10031ec:	d8c00817 	ldw	r3,32(sp)
 10031f0:	a0a9c83a 	sub	r20,r20,r2
 10031f4:	b0adc83a 	sub	r22,r22,r2
 10031f8:	1887c83a 	sub	r3,r3,r2
 10031fc:	d8c00815 	stw	r3,32(sp)
 1003200:	d9000917 	ldw	r4,36(sp)
 1003204:	0100140e 	bge	zero,r4,1003258 <_dtoa_r+0xa88>
 1003208:	d9800b17 	ldw	r6,44(sp)
 100320c:	3001e526 	beq	r6,zero,10039a4 <_dtoa_r+0x11d4>
 1003210:	05400e0e 	bge	zero,r21,100324c <_dtoa_r+0xa7c>
 1003214:	880b883a 	mov	r5,r17
 1003218:	8009883a 	mov	r4,r16
 100321c:	a80d883a 	mov	r6,r21
 1003220:	10064ac0 	call	10064ac <__pow5mult>
 1003224:	e00d883a 	mov	r6,fp
 1003228:	8009883a 	mov	r4,r16
 100322c:	100b883a 	mov	r5,r2
 1003230:	1023883a 	mov	r17,r2
 1003234:	10062b00 	call	10062b0 <__multiply>
 1003238:	102f883a 	mov	r23,r2
 100323c:	e00b883a 	mov	r5,fp
 1003240:	8009883a 	mov	r4,r16
 1003244:	1005f100 	call	1005f10 <_Bfree>
 1003248:	b839883a 	mov	fp,r23
 100324c:	d8800917 	ldw	r2,36(sp)
 1003250:	154dc83a 	sub	r6,r2,r21
 1003254:	3001281e 	bne	r6,zero,10036f8 <_dtoa_r+0xf28>
 1003258:	05c00044 	movi	r23,1
 100325c:	8009883a 	mov	r4,r16
 1003260:	b80b883a 	mov	r5,r23
 1003264:	10062740 	call	1006274 <__i2b>
 1003268:	d8c00a17 	ldw	r3,40(sp)
 100326c:	102b883a 	mov	r21,r2
 1003270:	00c0310e 	bge	zero,r3,1003338 <_dtoa_r+0xb68>
 1003274:	8009883a 	mov	r4,r16
 1003278:	100b883a 	mov	r5,r2
 100327c:	180d883a 	mov	r6,r3
 1003280:	10064ac0 	call	10064ac <__pow5mult>
 1003284:	d9000317 	ldw	r4,12(sp)
 1003288:	102b883a 	mov	r21,r2
 100328c:	b9011f0e 	bge	r23,r4,100370c <_dtoa_r+0xf3c>
 1003290:	0027883a 	mov	r19,zero
 1003294:	a8800417 	ldw	r2,16(r21)
 1003298:	10800104 	addi	r2,r2,4
 100329c:	1085883a 	add	r2,r2,r2
 10032a0:	1085883a 	add	r2,r2,r2
 10032a4:	a885883a 	add	r2,r21,r2
 10032a8:	11000017 	ldw	r4,0(r2)
 10032ac:	100615c0 	call	100615c <__hi0bits>
 10032b0:	00c00804 	movi	r3,32
 10032b4:	1885c83a 	sub	r2,r3,r2
 10032b8:	00002506 	br	1003350 <_dtoa_r+0xb80>
 10032bc:	01800044 	movi	r6,1
 10032c0:	d9800d15 	stw	r6,52(sp)
 10032c4:	003dec06 	br	1002a78 <_dtoa_r+0x2a8>
 10032c8:	d8c00817 	ldw	r3,32(sp)
 10032cc:	d9000517 	ldw	r4,20(sp)
 10032d0:	d8000a15 	stw	zero,40(sp)
 10032d4:	1907c83a 	sub	r3,r3,r4
 10032d8:	010dc83a 	sub	r6,zero,r4
 10032dc:	d8c00815 	stw	r3,32(sp)
 10032e0:	d9800915 	stw	r6,36(sp)
 10032e4:	003ded06 	br	1002a9c <_dtoa_r+0x2cc>
 10032e8:	05adc83a 	sub	r22,zero,r22
 10032ec:	dd800815 	stw	r22,32(sp)
 10032f0:	002d883a 	mov	r22,zero
 10032f4:	003de406 	br	1002a88 <_dtoa_r+0x2b8>
 10032f8:	d9000517 	ldw	r4,20(sp)
 10032fc:	100c4780 	call	100c478 <__floatsidf>
 1003300:	1009883a 	mov	r4,r2
 1003304:	180b883a 	mov	r5,r3
 1003308:	b00d883a 	mov	r6,r22
 100330c:	a80f883a 	mov	r7,r21
 1003310:	100b1b80 	call	100b1b8 <__eqdf2>
 1003314:	103dc726 	beq	r2,zero,1002a34 <_dtoa_r+0x264>
 1003318:	d8800517 	ldw	r2,20(sp)
 100331c:	10bfffc4 	addi	r2,r2,-1
 1003320:	d8800515 	stw	r2,20(sp)
 1003324:	003dc306 	br	1002a34 <_dtoa_r+0x264>
 1003328:	dd400917 	ldw	r21,36(sp)
 100332c:	dd000817 	ldw	r20,32(sp)
 1003330:	0023883a 	mov	r17,zero
 1003334:	003fa906 	br	10031dc <_dtoa_r+0xa0c>
 1003338:	d9800317 	ldw	r6,12(sp)
 100333c:	b981670e 	bge	r23,r6,10038dc <_dtoa_r+0x110c>
 1003340:	0027883a 	mov	r19,zero
 1003344:	d8c00a17 	ldw	r3,40(sp)
 1003348:	183fd21e 	bne	r3,zero,1003294 <_dtoa_r+0xac4>
 100334c:	00800044 	movi	r2,1
 1003350:	1585883a 	add	r2,r2,r22
 1003354:	108007cc 	andi	r2,r2,31
 1003358:	10005f26 	beq	r2,zero,10034d8 <_dtoa_r+0xd08>
 100335c:	00c00804 	movi	r3,32
 1003360:	1887c83a 	sub	r3,r3,r2
 1003364:	01000104 	movi	r4,4
 1003368:	20c2dd0e 	bge	r4,r3,1003ee0 <_dtoa_r+0x1710>
 100336c:	d9000817 	ldw	r4,32(sp)
 1003370:	00c00704 	movi	r3,28
 1003374:	1885c83a 	sub	r2,r3,r2
 1003378:	2089883a 	add	r4,r4,r2
 100337c:	d9000815 	stw	r4,32(sp)
 1003380:	a0a9883a 	add	r20,r20,r2
 1003384:	b0ad883a 	add	r22,r22,r2
 1003388:	d8800817 	ldw	r2,32(sp)
 100338c:	0080050e 	bge	zero,r2,10033a4 <_dtoa_r+0xbd4>
 1003390:	e00b883a 	mov	r5,fp
 1003394:	8009883a 	mov	r4,r16
 1003398:	100d883a 	mov	r6,r2
 100339c:	10065ec0 	call	10065ec <__lshift>
 10033a0:	1039883a 	mov	fp,r2
 10033a4:	0580050e 	bge	zero,r22,10033bc <_dtoa_r+0xbec>
 10033a8:	a80b883a 	mov	r5,r21
 10033ac:	8009883a 	mov	r4,r16
 10033b0:	b00d883a 	mov	r6,r22
 10033b4:	10065ec0 	call	10065ec <__lshift>
 10033b8:	102b883a 	mov	r21,r2
 10033bc:	d8c00d17 	ldw	r3,52(sp)
 10033c0:	1801161e 	bne	r3,zero,100381c <_dtoa_r+0x104c>
 10033c4:	d8c00617 	ldw	r3,24(sp)
 10033c8:	00c12d0e 	bge	zero,r3,1003880 <_dtoa_r+0x10b0>
 10033cc:	d8c00b17 	ldw	r3,44(sp)
 10033d0:	1800571e 	bne	r3,zero,1003530 <_dtoa_r+0xd60>
 10033d4:	dc800717 	ldw	r18,28(sp)
 10033d8:	dcc00617 	ldw	r19,24(sp)
 10033dc:	9029883a 	mov	r20,r18
 10033e0:	00000206 	br	10033ec <_dtoa_r+0xc1c>
 10033e4:	1005f380 	call	1005f38 <__multadd>
 10033e8:	1039883a 	mov	fp,r2
 10033ec:	e009883a 	mov	r4,fp
 10033f0:	a80b883a 	mov	r5,r21
 10033f4:	10025d00 	call	10025d0 <quorem>
 10033f8:	10800c04 	addi	r2,r2,48
 10033fc:	90800005 	stb	r2,0(r18)
 1003400:	94800044 	addi	r18,r18,1
 1003404:	9507c83a 	sub	r3,r18,r20
 1003408:	8009883a 	mov	r4,r16
 100340c:	e00b883a 	mov	r5,fp
 1003410:	01800284 	movi	r6,10
 1003414:	000f883a 	mov	r7,zero
 1003418:	1cfff216 	blt	r3,r19,10033e4 <_dtoa_r+0xc14>
 100341c:	1011883a 	mov	r8,r2
 1003420:	d8800617 	ldw	r2,24(sp)
 1003424:	00822e0e 	bge	zero,r2,1003ce0 <_dtoa_r+0x1510>
 1003428:	d9000717 	ldw	r4,28(sp)
 100342c:	0025883a 	mov	r18,zero
 1003430:	20af883a 	add	r23,r4,r2
 1003434:	e00b883a 	mov	r5,fp
 1003438:	01800044 	movi	r6,1
 100343c:	8009883a 	mov	r4,r16
 1003440:	da001715 	stw	r8,92(sp)
 1003444:	10065ec0 	call	10065ec <__lshift>
 1003448:	1009883a 	mov	r4,r2
 100344c:	a80b883a 	mov	r5,r21
 1003450:	1039883a 	mov	fp,r2
 1003454:	100673c0 	call	100673c <__mcmp>
 1003458:	da001717 	ldw	r8,92(sp)
 100345c:	00816e0e 	bge	zero,r2,1003a18 <_dtoa_r+0x1248>
 1003460:	b93fffc3 	ldbu	r4,-1(r23)
 1003464:	b8bfffc4 	addi	r2,r23,-1
 1003468:	1007883a 	mov	r3,r2
 100346c:	01800e44 	movi	r6,57
 1003470:	d9c00717 	ldw	r7,28(sp)
 1003474:	00000506 	br	100348c <_dtoa_r+0xcbc>
 1003478:	18ffffc4 	addi	r3,r3,-1
 100347c:	38811926 	beq	r7,r2,10038e4 <_dtoa_r+0x1114>
 1003480:	19000003 	ldbu	r4,0(r3)
 1003484:	102f883a 	mov	r23,r2
 1003488:	10bfffc4 	addi	r2,r2,-1
 100348c:	21403fcc 	andi	r5,r4,255
 1003490:	2940201c 	xori	r5,r5,128
 1003494:	297fe004 	addi	r5,r5,-128
 1003498:	29bff726 	beq	r5,r6,1003478 <_dtoa_r+0xca8>
 100349c:	21000044 	addi	r4,r4,1
 10034a0:	11000005 	stb	r4,0(r2)
 10034a4:	8009883a 	mov	r4,r16
 10034a8:	a80b883a 	mov	r5,r21
 10034ac:	1005f100 	call	1005f10 <_Bfree>
 10034b0:	883e7526 	beq	r17,zero,1002e88 <_dtoa_r+0x6b8>
 10034b4:	90000426 	beq	r18,zero,10034c8 <_dtoa_r+0xcf8>
 10034b8:	94400326 	beq	r18,r17,10034c8 <_dtoa_r+0xcf8>
 10034bc:	8009883a 	mov	r4,r16
 10034c0:	900b883a 	mov	r5,r18
 10034c4:	1005f100 	call	1005f10 <_Bfree>
 10034c8:	8009883a 	mov	r4,r16
 10034cc:	880b883a 	mov	r5,r17
 10034d0:	1005f100 	call	1005f10 <_Bfree>
 10034d4:	003e6c06 	br	1002e88 <_dtoa_r+0x6b8>
 10034d8:	00800704 	movi	r2,28
 10034dc:	d9800817 	ldw	r6,32(sp)
 10034e0:	a0a9883a 	add	r20,r20,r2
 10034e4:	b0ad883a 	add	r22,r22,r2
 10034e8:	308d883a 	add	r6,r6,r2
 10034ec:	d9800815 	stw	r6,32(sp)
 10034f0:	003fa506 	br	1003388 <_dtoa_r+0xbb8>
 10034f4:	013efb84 	movi	r4,-1042
 10034f8:	246bc83a 	sub	r21,r4,r17
 10034fc:	9548983a 	sll	r4,r18,r21
 1003500:	003d1806 	br	1002964 <_dtoa_r+0x194>
 1003504:	d8000d15 	stw	zero,52(sp)
 1003508:	003d5b06 	br	1002a78 <_dtoa_r+0x2a8>
 100350c:	880b883a 	mov	r5,r17
 1003510:	8009883a 	mov	r4,r16
 1003514:	01800284 	movi	r6,10
 1003518:	000f883a 	mov	r7,zero
 100351c:	1005f380 	call	1005f38 <__multadd>
 1003520:	1023883a 	mov	r17,r2
 1003524:	d8800c17 	ldw	r2,48(sp)
 1003528:	0082550e 	bge	zero,r2,1003e80 <_dtoa_r+0x16b0>
 100352c:	d8800615 	stw	r2,24(sp)
 1003530:	0500050e 	bge	zero,r20,1003548 <_dtoa_r+0xd78>
 1003534:	880b883a 	mov	r5,r17
 1003538:	8009883a 	mov	r4,r16
 100353c:	a00d883a 	mov	r6,r20
 1003540:	10065ec0 	call	10065ec <__lshift>
 1003544:	1023883a 	mov	r17,r2
 1003548:	98016a1e 	bne	r19,zero,1003af4 <_dtoa_r+0x1324>
 100354c:	8829883a 	mov	r20,r17
 1003550:	d9000617 	ldw	r4,24(sp)
 1003554:	dcc00717 	ldw	r19,28(sp)
 1003558:	9480004c 	andi	r18,r18,1
 100355c:	20bfffc4 	addi	r2,r4,-1
 1003560:	9885883a 	add	r2,r19,r2
 1003564:	d8800415 	stw	r2,16(sp)
 1003568:	dc800615 	stw	r18,24(sp)
 100356c:	e009883a 	mov	r4,fp
 1003570:	a80b883a 	mov	r5,r21
 1003574:	10025d00 	call	10025d0 <quorem>
 1003578:	e009883a 	mov	r4,fp
 100357c:	880b883a 	mov	r5,r17
 1003580:	102f883a 	mov	r23,r2
 1003584:	100673c0 	call	100673c <__mcmp>
 1003588:	8009883a 	mov	r4,r16
 100358c:	a80b883a 	mov	r5,r21
 1003590:	a00d883a 	mov	r6,r20
 1003594:	102d883a 	mov	r22,r2
 1003598:	100679c0 	call	100679c <__mdiff>
 100359c:	1007883a 	mov	r3,r2
 10035a0:	10800317 	ldw	r2,12(r2)
 10035a4:	bc800c04 	addi	r18,r23,48
 10035a8:	1000971e 	bne	r2,zero,1003808 <_dtoa_r+0x1038>
 10035ac:	180b883a 	mov	r5,r3
 10035b0:	e009883a 	mov	r4,fp
 10035b4:	d8c01515 	stw	r3,84(sp)
 10035b8:	100673c0 	call	100673c <__mcmp>
 10035bc:	d8c01517 	ldw	r3,84(sp)
 10035c0:	8009883a 	mov	r4,r16
 10035c4:	d8801515 	stw	r2,84(sp)
 10035c8:	180b883a 	mov	r5,r3
 10035cc:	1005f100 	call	1005f10 <_Bfree>
 10035d0:	d8801517 	ldw	r2,84(sp)
 10035d4:	1000041e 	bne	r2,zero,10035e8 <_dtoa_r+0xe18>
 10035d8:	d9800317 	ldw	r6,12(sp)
 10035dc:	3000021e 	bne	r6,zero,10035e8 <_dtoa_r+0xe18>
 10035e0:	d8c00617 	ldw	r3,24(sp)
 10035e4:	18007626 	beq	r3,zero,10037c0 <_dtoa_r+0xff0>
 10035e8:	b0005b16 	blt	r22,zero,1003758 <_dtoa_r+0xf88>
 10035ec:	b000041e 	bne	r22,zero,1003600 <_dtoa_r+0xe30>
 10035f0:	d9000317 	ldw	r4,12(sp)
 10035f4:	2000021e 	bne	r4,zero,1003600 <_dtoa_r+0xe30>
 10035f8:	d8c00617 	ldw	r3,24(sp)
 10035fc:	18005626 	beq	r3,zero,1003758 <_dtoa_r+0xf88>
 1003600:	00814d16 	blt	zero,r2,1003b38 <_dtoa_r+0x1368>
 1003604:	d8c00417 	ldw	r3,16(sp)
 1003608:	9d800044 	addi	r22,r19,1
 100360c:	9c800005 	stb	r18,0(r19)
 1003610:	b02f883a 	mov	r23,r22
 1003614:	98c14c26 	beq	r19,r3,1003b48 <_dtoa_r+0x1378>
 1003618:	e00b883a 	mov	r5,fp
 100361c:	8009883a 	mov	r4,r16
 1003620:	01800284 	movi	r6,10
 1003624:	000f883a 	mov	r7,zero
 1003628:	1005f380 	call	1005f38 <__multadd>
 100362c:	1039883a 	mov	fp,r2
 1003630:	8d006d26 	beq	r17,r20,10037e8 <_dtoa_r+0x1018>
 1003634:	880b883a 	mov	r5,r17
 1003638:	01800284 	movi	r6,10
 100363c:	000f883a 	mov	r7,zero
 1003640:	8009883a 	mov	r4,r16
 1003644:	1005f380 	call	1005f38 <__multadd>
 1003648:	a00b883a 	mov	r5,r20
 100364c:	8009883a 	mov	r4,r16
 1003650:	01800284 	movi	r6,10
 1003654:	000f883a 	mov	r7,zero
 1003658:	1023883a 	mov	r17,r2
 100365c:	1005f380 	call	1005f38 <__multadd>
 1003660:	1029883a 	mov	r20,r2
 1003664:	b027883a 	mov	r19,r22
 1003668:	003fc006 	br	100356c <_dtoa_r+0xd9c>
 100366c:	a005883a 	mov	r2,r20
 1003670:	003ede06 	br	10031ec <_dtoa_r+0xa1c>
 1003674:	01000044 	movi	r4,1
 1003678:	d9000b15 	stw	r4,44(sp)
 100367c:	d9802217 	ldw	r6,136(sp)
 1003680:	0180dc0e 	bge	zero,r6,10039f4 <_dtoa_r+0x1224>
 1003684:	3023883a 	mov	r17,r6
 1003688:	d9800c15 	stw	r6,48(sp)
 100368c:	d9800615 	stw	r6,24(sp)
 1003690:	003d1e06 	br	1002b0c <_dtoa_r+0x33c>
 1003694:	d8800617 	ldw	r2,24(sp)
 1003698:	00be3716 	blt	zero,r2,1002f78 <_dtoa_r+0x7a8>
 100369c:	1000be1e 	bne	r2,zero,1003998 <_dtoa_r+0x11c8>
 10036a0:	8809883a 	mov	r4,r17
 10036a4:	a00b883a 	mov	r5,r20
 10036a8:	000d883a 	mov	r6,zero
 10036ac:	01d00534 	movhi	r7,16404
 10036b0:	100b3fc0 	call	100b3fc <__muldf3>
 10036b4:	1009883a 	mov	r4,r2
 10036b8:	180b883a 	mov	r5,r3
 10036bc:	900d883a 	mov	r6,r18
 10036c0:	980f883a 	mov	r7,r19
 10036c4:	100b23c0 	call	100b23c <__gedf2>
 10036c8:	002b883a 	mov	r21,zero
 10036cc:	0023883a 	mov	r17,zero
 10036d0:	10007a16 	blt	r2,zero,10038bc <_dtoa_r+0x10ec>
 10036d4:	d9002217 	ldw	r4,136(sp)
 10036d8:	ddc00717 	ldw	r23,28(sp)
 10036dc:	0108303a 	nor	r4,zero,r4
 10036e0:	d9000515 	stw	r4,20(sp)
 10036e4:	8009883a 	mov	r4,r16
 10036e8:	a80b883a 	mov	r5,r21
 10036ec:	1005f100 	call	1005f10 <_Bfree>
 10036f0:	883f751e 	bne	r17,zero,10034c8 <_dtoa_r+0xcf8>
 10036f4:	003de406 	br	1002e88 <_dtoa_r+0x6b8>
 10036f8:	e00b883a 	mov	r5,fp
 10036fc:	8009883a 	mov	r4,r16
 1003700:	10064ac0 	call	10064ac <__pow5mult>
 1003704:	1039883a 	mov	fp,r2
 1003708:	003ed306 	br	1003258 <_dtoa_r+0xa88>
 100370c:	903ee01e 	bne	r18,zero,1003290 <_dtoa_r+0xac0>
 1003710:	00800434 	movhi	r2,16
 1003714:	10bfffc4 	addi	r2,r2,-1
 1003718:	9884703a 	and	r2,r19,r2
 100371c:	103f081e 	bne	r2,zero,1003340 <_dtoa_r+0xb70>
 1003720:	9cdffc2c 	andhi	r19,r19,32752
 1003724:	983f0626 	beq	r19,zero,1003340 <_dtoa_r+0xb70>
 1003728:	d8800817 	ldw	r2,32(sp)
 100372c:	b5800044 	addi	r22,r22,1
 1003730:	04c00044 	movi	r19,1
 1003734:	10800044 	addi	r2,r2,1
 1003738:	d8800815 	stw	r2,32(sp)
 100373c:	003f0106 	br	1003344 <_dtoa_r+0xb74>
 1003740:	d9800f17 	ldw	r6,60(sp)
 1003744:	30016826 	beq	r6,zero,1003ce8 <_dtoa_r+0x1518>
 1003748:	10810cc4 	addi	r2,r2,1075
 100374c:	dd400917 	ldw	r21,36(sp)
 1003750:	dd000817 	ldw	r20,32(sp)
 1003754:	003e9906 	br	10031bc <_dtoa_r+0x9ec>
 1003758:	9011883a 	mov	r8,r18
 100375c:	4007883a 	mov	r3,r8
 1003760:	e02d883a 	mov	r22,fp
 1003764:	0080100e 	bge	zero,r2,10037a8 <_dtoa_r+0xfd8>
 1003768:	01800044 	movi	r6,1
 100376c:	8009883a 	mov	r4,r16
 1003770:	e00b883a 	mov	r5,fp
 1003774:	da001515 	stw	r8,84(sp)
 1003778:	da001715 	stw	r8,92(sp)
 100377c:	10065ec0 	call	10065ec <__lshift>
 1003780:	1009883a 	mov	r4,r2
 1003784:	a80b883a 	mov	r5,r21
 1003788:	102d883a 	mov	r22,r2
 100378c:	100673c0 	call	100673c <__mcmp>
 1003790:	d8c01517 	ldw	r3,84(sp)
 1003794:	da001717 	ldw	r8,92(sp)
 1003798:	0081a50e 	bge	zero,r2,1003e30 <_dtoa_r+0x1660>
 100379c:	00800e44 	movi	r2,57
 10037a0:	40817b26 	beq	r8,r2,1003d90 <_dtoa_r+0x15c0>
 10037a4:	40c00044 	addi	r3,r8,1
 10037a8:	8825883a 	mov	r18,r17
 10037ac:	9dc00044 	addi	r23,r19,1
 10037b0:	98c00005 	stb	r3,0(r19)
 10037b4:	a023883a 	mov	r17,r20
 10037b8:	b039883a 	mov	fp,r22
 10037bc:	003f3906 	br	10034a4 <_dtoa_r+0xcd4>
 10037c0:	00800e44 	movi	r2,57
 10037c4:	9011883a 	mov	r8,r18
 10037c8:	90817226 	beq	r18,r2,1003d94 <_dtoa_r+0x15c4>
 10037cc:	0580010e 	bge	zero,r22,10037d4 <_dtoa_r+0x1004>
 10037d0:	ba000c44 	addi	r8,r23,49
 10037d4:	8825883a 	mov	r18,r17
 10037d8:	9dc00044 	addi	r23,r19,1
 10037dc:	9a000005 	stb	r8,0(r19)
 10037e0:	a023883a 	mov	r17,r20
 10037e4:	003f2f06 	br	10034a4 <_dtoa_r+0xcd4>
 10037e8:	880b883a 	mov	r5,r17
 10037ec:	8009883a 	mov	r4,r16
 10037f0:	01800284 	movi	r6,10
 10037f4:	000f883a 	mov	r7,zero
 10037f8:	1005f380 	call	1005f38 <__multadd>
 10037fc:	1023883a 	mov	r17,r2
 1003800:	1029883a 	mov	r20,r2
 1003804:	003f9706 	br	1003664 <_dtoa_r+0xe94>
 1003808:	8009883a 	mov	r4,r16
 100380c:	180b883a 	mov	r5,r3
 1003810:	1005f100 	call	1005f10 <_Bfree>
 1003814:	00800044 	movi	r2,1
 1003818:	003f7306 	br	10035e8 <_dtoa_r+0xe18>
 100381c:	e009883a 	mov	r4,fp
 1003820:	a80b883a 	mov	r5,r21
 1003824:	100673c0 	call	100673c <__mcmp>
 1003828:	103ee60e 	bge	r2,zero,10033c4 <_dtoa_r+0xbf4>
 100382c:	8009883a 	mov	r4,r16
 1003830:	e00b883a 	mov	r5,fp
 1003834:	01800284 	movi	r6,10
 1003838:	000f883a 	mov	r7,zero
 100383c:	1005f380 	call	1005f38 <__multadd>
 1003840:	d9000517 	ldw	r4,20(sp)
 1003844:	d9800b17 	ldw	r6,44(sp)
 1003848:	1039883a 	mov	fp,r2
 100384c:	213fffc4 	addi	r4,r4,-1
 1003850:	d9000515 	stw	r4,20(sp)
 1003854:	303f2d1e 	bne	r6,zero,100350c <_dtoa_r+0xd3c>
 1003858:	d9000c17 	ldw	r4,48(sp)
 100385c:	0101780e 	bge	zero,r4,1003e40 <_dtoa_r+0x1670>
 1003860:	d9000615 	stw	r4,24(sp)
 1003864:	003edb06 	br	10033d4 <_dtoa_r+0xc04>
 1003868:	00800084 	movi	r2,2
 100386c:	30818e1e 	bne	r6,r2,1003ea8 <_dtoa_r+0x16d8>
 1003870:	d8000b15 	stw	zero,44(sp)
 1003874:	003f8106 	br	100367c <_dtoa_r+0xeac>
 1003878:	d8800717 	ldw	r2,28(sp)
 100387c:	003c0306 	br	100288c <_dtoa_r+0xbc>
 1003880:	d9000317 	ldw	r4,12(sp)
 1003884:	00800084 	movi	r2,2
 1003888:	113ed00e 	bge	r2,r4,10033cc <_dtoa_r+0xbfc>
 100388c:	d8c00617 	ldw	r3,24(sp)
 1003890:	183f901e 	bne	r3,zero,10036d4 <_dtoa_r+0xf04>
 1003894:	a80b883a 	mov	r5,r21
 1003898:	8009883a 	mov	r4,r16
 100389c:	01800144 	movi	r6,5
 10038a0:	000f883a 	mov	r7,zero
 10038a4:	1005f380 	call	1005f38 <__multadd>
 10038a8:	e009883a 	mov	r4,fp
 10038ac:	100b883a 	mov	r5,r2
 10038b0:	102b883a 	mov	r21,r2
 10038b4:	100673c0 	call	100673c <__mcmp>
 10038b8:	00bf860e 	bge	zero,r2,10036d4 <_dtoa_r+0xf04>
 10038bc:	d9800717 	ldw	r6,28(sp)
 10038c0:	00800c44 	movi	r2,49
 10038c4:	30800005 	stb	r2,0(r6)
 10038c8:	d8800517 	ldw	r2,20(sp)
 10038cc:	35c00044 	addi	r23,r6,1
 10038d0:	10800044 	addi	r2,r2,1
 10038d4:	d8800515 	stw	r2,20(sp)
 10038d8:	003f8206 	br	10036e4 <_dtoa_r+0xf14>
 10038dc:	903e981e 	bne	r18,zero,1003340 <_dtoa_r+0xb70>
 10038e0:	003f8b06 	br	1003710 <_dtoa_r+0xf40>
 10038e4:	d9800517 	ldw	r6,20(sp)
 10038e8:	d8c00717 	ldw	r3,28(sp)
 10038ec:	00800c44 	movi	r2,49
 10038f0:	31800044 	addi	r6,r6,1
 10038f4:	d9800515 	stw	r6,20(sp)
 10038f8:	18800005 	stb	r2,0(r3)
 10038fc:	003ee906 	br	10034a4 <_dtoa_r+0xcd4>
 1003900:	dc000317 	ldw	r16,12(sp)
 1003904:	003d6006 	br	1002e88 <_dtoa_r+0x6b8>
 1003908:	8809883a 	mov	r4,r17
 100390c:	100c4780 	call	100c478 <__floatsidf>
 1003910:	a009883a 	mov	r4,r20
 1003914:	a80b883a 	mov	r5,r21
 1003918:	100d883a 	mov	r6,r2
 100391c:	180f883a 	mov	r7,r3
 1003920:	100b3fc0 	call	100b3fc <__muldf3>
 1003924:	1009883a 	mov	r4,r2
 1003928:	180b883a 	mov	r5,r3
 100392c:	000d883a 	mov	r6,zero
 1003930:	01d00734 	movhi	r7,16412
 1003934:	100a0500 	call	100a050 <__adddf3>
 1003938:	1023883a 	mov	r17,r2
 100393c:	00bf3034 	movhi	r2,64704
 1003940:	1885883a 	add	r2,r3,r2
 1003944:	d8800e15 	stw	r2,56(sp)
 1003948:	a009883a 	mov	r4,r20
 100394c:	a80b883a 	mov	r5,r21
 1003950:	000d883a 	mov	r6,zero
 1003954:	01d00534 	movhi	r7,16404
 1003958:	100bb200 	call	100bb20 <__subdf3>
 100395c:	d9c00e17 	ldw	r7,56(sp)
 1003960:	1009883a 	mov	r4,r2
 1003964:	180b883a 	mov	r5,r3
 1003968:	880d883a 	mov	r6,r17
 100396c:	102b883a 	mov	r21,r2
 1003970:	1829883a 	mov	r20,r3
 1003974:	100b23c0 	call	100b23c <__gedf2>
 1003978:	00807716 	blt	zero,r2,1003b58 <_dtoa_r+0x1388>
 100397c:	d8800e17 	ldw	r2,56(sp)
 1003980:	a809883a 	mov	r4,r21
 1003984:	a00b883a 	mov	r5,r20
 1003988:	11e0003c 	xorhi	r7,r2,32768
 100398c:	880d883a 	mov	r6,r17
 1003990:	100b31c0 	call	100b31c <__ledf2>
 1003994:	103d6b0e 	bge	r2,zero,1002f44 <_dtoa_r+0x774>
 1003998:	002b883a 	mov	r21,zero
 100399c:	0023883a 	mov	r17,zero
 10039a0:	003f4c06 	br	10036d4 <_dtoa_r+0xf04>
 10039a4:	d9800917 	ldw	r6,36(sp)
 10039a8:	e00b883a 	mov	r5,fp
 10039ac:	8009883a 	mov	r4,r16
 10039b0:	10064ac0 	call	10064ac <__pow5mult>
 10039b4:	1039883a 	mov	fp,r2
 10039b8:	003e2706 	br	1003258 <_dtoa_r+0xa88>
 10039bc:	d8000b15 	stw	zero,44(sp)
 10039c0:	003c4906 	br	1002ae8 <_dtoa_r+0x318>
 10039c4:	d9000917 	ldw	r4,36(sp)
 10039c8:	d9800a17 	ldw	r6,40(sp)
 10039cc:	dd400915 	stw	r21,36(sp)
 10039d0:	a905c83a 	sub	r2,r21,r4
 10039d4:	308d883a 	add	r6,r6,r2
 10039d8:	d9800a15 	stw	r6,40(sp)
 10039dc:	002b883a 	mov	r21,zero
 10039e0:	003df206 	br	10031ac <_dtoa_r+0x9dc>
 10039e4:	dc800e15 	stw	r18,56(sp)
 10039e8:	982b883a 	mov	r21,r19
 10039ec:	04400084 	movi	r17,2
 10039f0:	003c7406 	br	1002bc4 <_dtoa_r+0x3f4>
 10039f4:	04400044 	movi	r17,1
 10039f8:	dc400c15 	stw	r17,48(sp)
 10039fc:	dc400615 	stw	r17,24(sp)
 1003a00:	dc402215 	stw	r17,136(sp)
 1003a04:	80001115 	stw	zero,68(r16)
 1003a08:	000b883a 	mov	r5,zero
 1003a0c:	003c4a06 	br	1002b38 <_dtoa_r+0x368>
 1003a10:	3023883a 	mov	r17,r6
 1003a14:	003ffb06 	br	1003a04 <_dtoa_r+0x1234>
 1003a18:	1000021e 	bne	r2,zero,1003a24 <_dtoa_r+0x1254>
 1003a1c:	4200004c 	andi	r8,r8,1
 1003a20:	403e8f1e 	bne	r8,zero,1003460 <_dtoa_r+0xc90>
 1003a24:	01000c04 	movi	r4,48
 1003a28:	00000106 	br	1003a30 <_dtoa_r+0x1260>
 1003a2c:	102f883a 	mov	r23,r2
 1003a30:	b8bfffc4 	addi	r2,r23,-1
 1003a34:	10c00007 	ldb	r3,0(r2)
 1003a38:	193ffc26 	beq	r3,r4,1003a2c <_dtoa_r+0x125c>
 1003a3c:	003e9906 	br	10034a4 <_dtoa_r+0xcd4>
 1003a40:	d9000517 	ldw	r4,20(sp)
 1003a44:	012fc83a 	sub	r23,zero,r4
 1003a48:	b800ad26 	beq	r23,zero,1003d00 <_dtoa_r+0x1530>
 1003a4c:	b88003cc 	andi	r2,r23,15
 1003a50:	100490fa 	slli	r2,r2,3
 1003a54:	00c04074 	movhi	r3,257
 1003a58:	18fb8804 	addi	r3,r3,-4576
 1003a5c:	1885883a 	add	r2,r3,r2
 1003a60:	11800017 	ldw	r6,0(r2)
 1003a64:	11c00117 	ldw	r7,4(r2)
 1003a68:	b82fd13a 	srai	r23,r23,4
 1003a6c:	9009883a 	mov	r4,r18
 1003a70:	980b883a 	mov	r5,r19
 1003a74:	100b3fc0 	call	100b3fc <__muldf3>
 1003a78:	1029883a 	mov	r20,r2
 1003a7c:	182b883a 	mov	r21,r3
 1003a80:	b800f426 	beq	r23,zero,1003e54 <_dtoa_r+0x1684>
 1003a84:	02004074 	movhi	r8,257
 1003a88:	423b7e04 	addi	r8,r8,-4616
 1003a8c:	8029883a 	mov	r20,r16
 1003a90:	04400084 	movi	r17,2
 1003a94:	4021883a 	mov	r16,r8
 1003a98:	b980004c 	andi	r6,r23,1
 1003a9c:	1009883a 	mov	r4,r2
 1003aa0:	b82fd07a 	srai	r23,r23,1
 1003aa4:	180b883a 	mov	r5,r3
 1003aa8:	30000426 	beq	r6,zero,1003abc <_dtoa_r+0x12ec>
 1003aac:	81800017 	ldw	r6,0(r16)
 1003ab0:	81c00117 	ldw	r7,4(r16)
 1003ab4:	8c400044 	addi	r17,r17,1
 1003ab8:	100b3fc0 	call	100b3fc <__muldf3>
 1003abc:	84000204 	addi	r16,r16,8
 1003ac0:	b83ff51e 	bne	r23,zero,1003a98 <_dtoa_r+0x12c8>
 1003ac4:	a021883a 	mov	r16,r20
 1003ac8:	182b883a 	mov	r21,r3
 1003acc:	1029883a 	mov	r20,r2
 1003ad0:	003c5506 	br	1002c28 <_dtoa_r+0x458>
 1003ad4:	d9800517 	ldw	r6,20(sp)
 1003ad8:	d9000717 	ldw	r4,28(sp)
 1003adc:	00c00c04 	movi	r3,48
 1003ae0:	31800044 	addi	r6,r6,1
 1003ae4:	d9800515 	stw	r6,20(sp)
 1003ae8:	20c00005 	stb	r3,0(r4)
 1003aec:	02000c44 	movi	r8,49
 1003af0:	003da206 	br	100317c <_dtoa_r+0x9ac>
 1003af4:	89400117 	ldw	r5,4(r17)
 1003af8:	8009883a 	mov	r4,r16
 1003afc:	1005e680 	call	1005e68 <_Balloc>
 1003b00:	89800417 	ldw	r6,16(r17)
 1003b04:	11000304 	addi	r4,r2,12
 1003b08:	89400304 	addi	r5,r17,12
 1003b0c:	31800084 	addi	r6,r6,2
 1003b10:	318d883a 	add	r6,r6,r6
 1003b14:	318d883a 	add	r6,r6,r6
 1003b18:	1027883a 	mov	r19,r2
 1003b1c:	1005ab00 	call	1005ab0 <memcpy>
 1003b20:	8009883a 	mov	r4,r16
 1003b24:	980b883a 	mov	r5,r19
 1003b28:	01800044 	movi	r6,1
 1003b2c:	10065ec0 	call	10065ec <__lshift>
 1003b30:	1029883a 	mov	r20,r2
 1003b34:	003e8606 	br	1003550 <_dtoa_r+0xd80>
 1003b38:	00800e44 	movi	r2,57
 1003b3c:	90809526 	beq	r18,r2,1003d94 <_dtoa_r+0x15c4>
 1003b40:	92000044 	addi	r8,r18,1
 1003b44:	003f2306 	br	10037d4 <_dtoa_r+0x1004>
 1003b48:	9011883a 	mov	r8,r18
 1003b4c:	8825883a 	mov	r18,r17
 1003b50:	a023883a 	mov	r17,r20
 1003b54:	003e3706 	br	1003434 <_dtoa_r+0xc64>
 1003b58:	002b883a 	mov	r21,zero
 1003b5c:	0023883a 	mov	r17,zero
 1003b60:	003f5606 	br	10038bc <_dtoa_r+0x10ec>
 1003b64:	51bfffc4 	addi	r6,r10,-1
 1003b68:	300490fa 	slli	r2,r6,3
 1003b6c:	00c04074 	movhi	r3,257
 1003b70:	18fb8804 	addi	r3,r3,-4576
 1003b74:	1885883a 	add	r2,r3,r2
 1003b78:	d9c00e17 	ldw	r7,56(sp)
 1003b7c:	11000017 	ldw	r4,0(r2)
 1003b80:	11400117 	ldw	r5,4(r2)
 1003b84:	d8800717 	ldw	r2,28(sp)
 1003b88:	d9801015 	stw	r6,64(sp)
 1003b8c:	880d883a 	mov	r6,r17
 1003b90:	da801615 	stw	r10,88(sp)
 1003b94:	15c00044 	addi	r23,r2,1
 1003b98:	100b3fc0 	call	100b3fc <__muldf3>
 1003b9c:	a80b883a 	mov	r5,r21
 1003ba0:	a009883a 	mov	r4,r20
 1003ba4:	d8c01115 	stw	r3,68(sp)
 1003ba8:	d8800e15 	stw	r2,56(sp)
 1003bac:	100c3f00 	call	100c3f0 <__fixdfsi>
 1003bb0:	1009883a 	mov	r4,r2
 1003bb4:	1023883a 	mov	r17,r2
 1003bb8:	100c4780 	call	100c478 <__floatsidf>
 1003bbc:	a009883a 	mov	r4,r20
 1003bc0:	a80b883a 	mov	r5,r21
 1003bc4:	100d883a 	mov	r6,r2
 1003bc8:	180f883a 	mov	r7,r3
 1003bcc:	100bb200 	call	100bb20 <__subdf3>
 1003bd0:	1813883a 	mov	r9,r3
 1003bd4:	d8c00717 	ldw	r3,28(sp)
 1003bd8:	8c400c04 	addi	r17,r17,48
 1003bdc:	1011883a 	mov	r8,r2
 1003be0:	1c400005 	stb	r17,0(r3)
 1003be4:	da801617 	ldw	r10,88(sp)
 1003be8:	00800044 	movi	r2,1
 1003bec:	50802326 	beq	r10,r2,1003c7c <_dtoa_r+0x14ac>
 1003bf0:	d8800717 	ldw	r2,28(sp)
 1003bf4:	b82b883a 	mov	r21,r23
 1003bf8:	dc001315 	stw	r16,76(sp)
 1003bfc:	12a9883a 	add	r20,r2,r10
 1003c00:	4807883a 	mov	r3,r9
 1003c04:	4005883a 	mov	r2,r8
 1003c08:	dc801415 	stw	r18,80(sp)
 1003c0c:	000d883a 	mov	r6,zero
 1003c10:	01d00934 	movhi	r7,16420
 1003c14:	1009883a 	mov	r4,r2
 1003c18:	180b883a 	mov	r5,r3
 1003c1c:	100b3fc0 	call	100b3fc <__muldf3>
 1003c20:	180b883a 	mov	r5,r3
 1003c24:	1009883a 	mov	r4,r2
 1003c28:	1821883a 	mov	r16,r3
 1003c2c:	1025883a 	mov	r18,r2
 1003c30:	100c3f00 	call	100c3f0 <__fixdfsi>
 1003c34:	1009883a 	mov	r4,r2
 1003c38:	1023883a 	mov	r17,r2
 1003c3c:	100c4780 	call	100c478 <__floatsidf>
 1003c40:	9009883a 	mov	r4,r18
 1003c44:	800b883a 	mov	r5,r16
 1003c48:	100d883a 	mov	r6,r2
 1003c4c:	180f883a 	mov	r7,r3
 1003c50:	8c400c04 	addi	r17,r17,48
 1003c54:	100bb200 	call	100bb20 <__subdf3>
 1003c58:	ad400044 	addi	r21,r21,1
 1003c5c:	ac7fffc5 	stb	r17,-1(r21)
 1003c60:	ad3fea1e 	bne	r21,r20,1003c0c <_dtoa_r+0x143c>
 1003c64:	1813883a 	mov	r9,r3
 1003c68:	d8c01017 	ldw	r3,64(sp)
 1003c6c:	dc001317 	ldw	r16,76(sp)
 1003c70:	dc801417 	ldw	r18,80(sp)
 1003c74:	1011883a 	mov	r8,r2
 1003c78:	b8ef883a 	add	r23,r23,r3
 1003c7c:	d9000e17 	ldw	r4,56(sp)
 1003c80:	d9401117 	ldw	r5,68(sp)
 1003c84:	000d883a 	mov	r6,zero
 1003c88:	01cff834 	movhi	r7,16352
 1003c8c:	da001715 	stw	r8,92(sp)
 1003c90:	da401515 	stw	r9,84(sp)
 1003c94:	100a0500 	call	100a050 <__adddf3>
 1003c98:	da001717 	ldw	r8,92(sp)
 1003c9c:	da401517 	ldw	r9,84(sp)
 1003ca0:	1009883a 	mov	r4,r2
 1003ca4:	400d883a 	mov	r6,r8
 1003ca8:	480f883a 	mov	r7,r9
 1003cac:	180b883a 	mov	r5,r3
 1003cb0:	100b31c0 	call	100b31c <__ledf2>
 1003cb4:	da001717 	ldw	r8,92(sp)
 1003cb8:	da401517 	ldw	r9,84(sp)
 1003cbc:	10003b0e 	bge	r2,zero,1003dac <_dtoa_r+0x15dc>
 1003cc0:	d9001217 	ldw	r4,72(sp)
 1003cc4:	bd7fffc3 	ldbu	r21,-1(r23)
 1003cc8:	d9000515 	stw	r4,20(sp)
 1003ccc:	003d1c06 	br	1003140 <_dtoa_r+0x970>
 1003cd0:	d8c00817 	ldw	r3,32(sp)
 1003cd4:	18a9c83a 	sub	r20,r3,r2
 1003cd8:	0005883a 	mov	r2,zero
 1003cdc:	003d3706 	br	10031bc <_dtoa_r+0x9ec>
 1003ce0:	00800044 	movi	r2,1
 1003ce4:	003dd006 	br	1003428 <_dtoa_r+0xc58>
 1003ce8:	d8c00217 	ldw	r3,8(sp)
 1003cec:	00800d84 	movi	r2,54
 1003cf0:	dd400917 	ldw	r21,36(sp)
 1003cf4:	10c5c83a 	sub	r2,r2,r3
 1003cf8:	dd000817 	ldw	r20,32(sp)
 1003cfc:	003d2f06 	br	10031bc <_dtoa_r+0x9ec>
 1003d00:	9029883a 	mov	r20,r18
 1003d04:	982b883a 	mov	r21,r19
 1003d08:	04400084 	movi	r17,2
 1003d0c:	003bc606 	br	1002c28 <_dtoa_r+0x458>
 1003d10:	d8800617 	ldw	r2,24(sp)
 1003d14:	103efc26 	beq	r2,zero,1003908 <_dtoa_r+0x1138>
 1003d18:	d8c00c17 	ldw	r3,48(sp)
 1003d1c:	00fc890e 	bge	zero,r3,1002f44 <_dtoa_r+0x774>
 1003d20:	a80b883a 	mov	r5,r21
 1003d24:	a009883a 	mov	r4,r20
 1003d28:	000d883a 	mov	r6,zero
 1003d2c:	01d00934 	movhi	r7,16420
 1003d30:	100b3fc0 	call	100b3fc <__muldf3>
 1003d34:	89000044 	addi	r4,r17,1
 1003d38:	1029883a 	mov	r20,r2
 1003d3c:	182b883a 	mov	r21,r3
 1003d40:	100c4780 	call	100c478 <__floatsidf>
 1003d44:	a009883a 	mov	r4,r20
 1003d48:	a80b883a 	mov	r5,r21
 1003d4c:	100d883a 	mov	r6,r2
 1003d50:	180f883a 	mov	r7,r3
 1003d54:	100b3fc0 	call	100b3fc <__muldf3>
 1003d58:	1009883a 	mov	r4,r2
 1003d5c:	180b883a 	mov	r5,r3
 1003d60:	000d883a 	mov	r6,zero
 1003d64:	01d00734 	movhi	r7,16412
 1003d68:	100a0500 	call	100a050 <__adddf3>
 1003d6c:	d9000517 	ldw	r4,20(sp)
 1003d70:	1023883a 	mov	r17,r2
 1003d74:	00bf3034 	movhi	r2,64704
 1003d78:	213fffc4 	addi	r4,r4,-1
 1003d7c:	1885883a 	add	r2,r3,r2
 1003d80:	d9001215 	stw	r4,72(sp)
 1003d84:	d8800e15 	stw	r2,56(sp)
 1003d88:	da800c17 	ldw	r10,48(sp)
 1003d8c:	003bc306 	br	1002c9c <_dtoa_r+0x4cc>
 1003d90:	b039883a 	mov	fp,r22
 1003d94:	01000e44 	movi	r4,57
 1003d98:	8825883a 	mov	r18,r17
 1003d9c:	9dc00044 	addi	r23,r19,1
 1003da0:	99000005 	stb	r4,0(r19)
 1003da4:	a023883a 	mov	r17,r20
 1003da8:	003dae06 	br	1003464 <_dtoa_r+0xc94>
 1003dac:	d9800e17 	ldw	r6,56(sp)
 1003db0:	d9c01117 	ldw	r7,68(sp)
 1003db4:	0009883a 	mov	r4,zero
 1003db8:	014ff834 	movhi	r5,16352
 1003dbc:	da001715 	stw	r8,92(sp)
 1003dc0:	da401515 	stw	r9,84(sp)
 1003dc4:	100bb200 	call	100bb20 <__subdf3>
 1003dc8:	da001717 	ldw	r8,92(sp)
 1003dcc:	da401517 	ldw	r9,84(sp)
 1003dd0:	1009883a 	mov	r4,r2
 1003dd4:	180b883a 	mov	r5,r3
 1003dd8:	400d883a 	mov	r6,r8
 1003ddc:	480f883a 	mov	r7,r9
 1003de0:	100b23c0 	call	100b23c <__gedf2>
 1003de4:	00bc570e 	bge	zero,r2,1002f44 <_dtoa_r+0x774>
 1003de8:	01000c04 	movi	r4,48
 1003dec:	00000106 	br	1003df4 <_dtoa_r+0x1624>
 1003df0:	102f883a 	mov	r23,r2
 1003df4:	b8bfffc4 	addi	r2,r23,-1
 1003df8:	10c00007 	ldb	r3,0(r2)
 1003dfc:	193ffc26 	beq	r3,r4,1003df0 <_dtoa_r+0x1620>
 1003e00:	d9801217 	ldw	r6,72(sp)
 1003e04:	d9800515 	stw	r6,20(sp)
 1003e08:	003c1f06 	br	1002e88 <_dtoa_r+0x6b8>
 1003e0c:	d8801217 	ldw	r2,72(sp)
 1003e10:	dc001117 	ldw	r16,68(sp)
 1003e14:	d8800515 	stw	r2,20(sp)
 1003e18:	003cc906 	br	1003140 <_dtoa_r+0x970>
 1003e1c:	dd801317 	ldw	r22,76(sp)
 1003e20:	dc001117 	ldw	r16,68(sp)
 1003e24:	dcc01417 	ldw	r19,80(sp)
 1003e28:	dc801017 	ldw	r18,64(sp)
 1003e2c:	003c4506 	br	1002f44 <_dtoa_r+0x774>
 1003e30:	103e5d1e 	bne	r2,zero,10037a8 <_dtoa_r+0xfd8>
 1003e34:	4080004c 	andi	r2,r8,1
 1003e38:	103e5b26 	beq	r2,zero,10037a8 <_dtoa_r+0xfd8>
 1003e3c:	003e5706 	br	100379c <_dtoa_r+0xfcc>
 1003e40:	d8c00317 	ldw	r3,12(sp)
 1003e44:	00800084 	movi	r2,2
 1003e48:	10c00a16 	blt	r2,r3,1003e74 <_dtoa_r+0x16a4>
 1003e4c:	d9000c17 	ldw	r4,48(sp)
 1003e50:	003e8306 	br	1003860 <_dtoa_r+0x1090>
 1003e54:	04400084 	movi	r17,2
 1003e58:	003b7306 	br	1002c28 <_dtoa_r+0x458>
 1003e5c:	d9801217 	ldw	r6,72(sp)
 1003e60:	d9800515 	stw	r6,20(sp)
 1003e64:	003cb606 	br	1003140 <_dtoa_r+0x970>
 1003e68:	d9001217 	ldw	r4,72(sp)
 1003e6c:	d9000515 	stw	r4,20(sp)
 1003e70:	003c0506 	br	1002e88 <_dtoa_r+0x6b8>
 1003e74:	d9800c17 	ldw	r6,48(sp)
 1003e78:	d9800615 	stw	r6,24(sp)
 1003e7c:	003e8306 	br	100388c <_dtoa_r+0x10bc>
 1003e80:	d9800317 	ldw	r6,12(sp)
 1003e84:	00800084 	movi	r2,2
 1003e88:	11800216 	blt	r2,r6,1003e94 <_dtoa_r+0x16c4>
 1003e8c:	d8800c17 	ldw	r2,48(sp)
 1003e90:	003da606 	br	100352c <_dtoa_r+0xd5c>
 1003e94:	d8800c17 	ldw	r2,48(sp)
 1003e98:	d8800615 	stw	r2,24(sp)
 1003e9c:	003e7b06 	br	100388c <_dtoa_r+0x10bc>
 1003ea0:	05000044 	movi	r20,1
 1003ea4:	003b0506 	br	1002abc <_dtoa_r+0x2ec>
 1003ea8:	8009883a 	mov	r4,r16
 1003eac:	80001115 	stw	zero,68(r16)
 1003eb0:	000b883a 	mov	r5,zero
 1003eb4:	1005e680 	call	1005e68 <_Balloc>
 1003eb8:	d8800715 	stw	r2,28(sp)
 1003ebc:	d8c00717 	ldw	r3,28(sp)
 1003ec0:	00bfffc4 	movi	r2,-1
 1003ec4:	01000044 	movi	r4,1
 1003ec8:	d8800c15 	stw	r2,48(sp)
 1003ecc:	80c01015 	stw	r3,64(r16)
 1003ed0:	d9000b15 	stw	r4,44(sp)
 1003ed4:	d8800615 	stw	r2,24(sp)
 1003ed8:	d8002215 	stw	zero,136(sp)
 1003edc:	003c1906 	br	1002f44 <_dtoa_r+0x774>
 1003ee0:	193d2926 	beq	r3,r4,1003388 <_dtoa_r+0xbb8>
 1003ee4:	00c00f04 	movi	r3,60
 1003ee8:	1885c83a 	sub	r2,r3,r2
 1003eec:	003d7b06 	br	10034dc <_dtoa_r+0xd0c>
 1003ef0:	000b883a 	mov	r5,zero
 1003ef4:	003b1006 	br	1002b38 <_dtoa_r+0x368>

01003ef8 <__sflush_r>:
 1003ef8:	2880030b 	ldhu	r2,12(r5)
 1003efc:	defffb04 	addi	sp,sp,-20
 1003f00:	dcc00315 	stw	r19,12(sp)
 1003f04:	dc400115 	stw	r17,4(sp)
 1003f08:	dfc00415 	stw	ra,16(sp)
 1003f0c:	dc800215 	stw	r18,8(sp)
 1003f10:	dc000015 	stw	r16,0(sp)
 1003f14:	10c0020c 	andi	r3,r2,8
 1003f18:	2823883a 	mov	r17,r5
 1003f1c:	2027883a 	mov	r19,r4
 1003f20:	1800311e 	bne	r3,zero,1003fe8 <__sflush_r+0xf0>
 1003f24:	28c00117 	ldw	r3,4(r5)
 1003f28:	10820014 	ori	r2,r2,2048
 1003f2c:	2880030d 	sth	r2,12(r5)
 1003f30:	00c04b0e 	bge	zero,r3,1004060 <__sflush_r+0x168>
 1003f34:	8a000a17 	ldw	r8,40(r17)
 1003f38:	40002326 	beq	r8,zero,1003fc8 <__sflush_r+0xd0>
 1003f3c:	9c000017 	ldw	r16,0(r19)
 1003f40:	10c4000c 	andi	r3,r2,4096
 1003f44:	98000015 	stw	zero,0(r19)
 1003f48:	18004826 	beq	r3,zero,100406c <__sflush_r+0x174>
 1003f4c:	89801417 	ldw	r6,80(r17)
 1003f50:	10c0010c 	andi	r3,r2,4
 1003f54:	18000626 	beq	r3,zero,1003f70 <__sflush_r+0x78>
 1003f58:	88c00117 	ldw	r3,4(r17)
 1003f5c:	88800c17 	ldw	r2,48(r17)
 1003f60:	30cdc83a 	sub	r6,r6,r3
 1003f64:	10000226 	beq	r2,zero,1003f70 <__sflush_r+0x78>
 1003f68:	88800f17 	ldw	r2,60(r17)
 1003f6c:	308dc83a 	sub	r6,r6,r2
 1003f70:	89400717 	ldw	r5,28(r17)
 1003f74:	9809883a 	mov	r4,r19
 1003f78:	000f883a 	mov	r7,zero
 1003f7c:	403ee83a 	callr	r8
 1003f80:	00ffffc4 	movi	r3,-1
 1003f84:	10c04426 	beq	r2,r3,1004098 <__sflush_r+0x1a0>
 1003f88:	88c0030b 	ldhu	r3,12(r17)
 1003f8c:	89000417 	ldw	r4,16(r17)
 1003f90:	88000115 	stw	zero,4(r17)
 1003f94:	197dffcc 	andi	r5,r3,63487
 1003f98:	8940030d 	sth	r5,12(r17)
 1003f9c:	89000015 	stw	r4,0(r17)
 1003fa0:	18c4000c 	andi	r3,r3,4096
 1003fa4:	18002c1e 	bne	r3,zero,1004058 <__sflush_r+0x160>
 1003fa8:	89400c17 	ldw	r5,48(r17)
 1003fac:	9c000015 	stw	r16,0(r19)
 1003fb0:	28000526 	beq	r5,zero,1003fc8 <__sflush_r+0xd0>
 1003fb4:	88801004 	addi	r2,r17,64
 1003fb8:	28800226 	beq	r5,r2,1003fc4 <__sflush_r+0xcc>
 1003fbc:	9809883a 	mov	r4,r19
 1003fc0:	10046500 	call	1004650 <_free_r>
 1003fc4:	88000c15 	stw	zero,48(r17)
 1003fc8:	0005883a 	mov	r2,zero
 1003fcc:	dfc00417 	ldw	ra,16(sp)
 1003fd0:	dcc00317 	ldw	r19,12(sp)
 1003fd4:	dc800217 	ldw	r18,8(sp)
 1003fd8:	dc400117 	ldw	r17,4(sp)
 1003fdc:	dc000017 	ldw	r16,0(sp)
 1003fe0:	dec00504 	addi	sp,sp,20
 1003fe4:	f800283a 	ret
 1003fe8:	2c800417 	ldw	r18,16(r5)
 1003fec:	903ff626 	beq	r18,zero,1003fc8 <__sflush_r+0xd0>
 1003ff0:	2c000017 	ldw	r16,0(r5)
 1003ff4:	108000cc 	andi	r2,r2,3
 1003ff8:	2c800015 	stw	r18,0(r5)
 1003ffc:	84a1c83a 	sub	r16,r16,r18
 1004000:	1000131e 	bne	r2,zero,1004050 <__sflush_r+0x158>
 1004004:	28800517 	ldw	r2,20(r5)
 1004008:	88800215 	stw	r2,8(r17)
 100400c:	04000316 	blt	zero,r16,100401c <__sflush_r+0x124>
 1004010:	003fed06 	br	1003fc8 <__sflush_r+0xd0>
 1004014:	90a5883a 	add	r18,r18,r2
 1004018:	043feb0e 	bge	zero,r16,1003fc8 <__sflush_r+0xd0>
 100401c:	88800917 	ldw	r2,36(r17)
 1004020:	89400717 	ldw	r5,28(r17)
 1004024:	800f883a 	mov	r7,r16
 1004028:	900d883a 	mov	r6,r18
 100402c:	9809883a 	mov	r4,r19
 1004030:	103ee83a 	callr	r2
 1004034:	80a1c83a 	sub	r16,r16,r2
 1004038:	00bff616 	blt	zero,r2,1004014 <__sflush_r+0x11c>
 100403c:	88c0030b 	ldhu	r3,12(r17)
 1004040:	00bfffc4 	movi	r2,-1
 1004044:	18c01014 	ori	r3,r3,64
 1004048:	88c0030d 	sth	r3,12(r17)
 100404c:	003fdf06 	br	1003fcc <__sflush_r+0xd4>
 1004050:	0005883a 	mov	r2,zero
 1004054:	003fec06 	br	1004008 <__sflush_r+0x110>
 1004058:	88801415 	stw	r2,80(r17)
 100405c:	003fd206 	br	1003fa8 <__sflush_r+0xb0>
 1004060:	28c00f17 	ldw	r3,60(r5)
 1004064:	00ffb316 	blt	zero,r3,1003f34 <__sflush_r+0x3c>
 1004068:	003fd706 	br	1003fc8 <__sflush_r+0xd0>
 100406c:	89400717 	ldw	r5,28(r17)
 1004070:	000d883a 	mov	r6,zero
 1004074:	9809883a 	mov	r4,r19
 1004078:	01c00044 	movi	r7,1
 100407c:	403ee83a 	callr	r8
 1004080:	100d883a 	mov	r6,r2
 1004084:	00bfffc4 	movi	r2,-1
 1004088:	30801426 	beq	r6,r2,10040dc <__sflush_r+0x1e4>
 100408c:	8880030b 	ldhu	r2,12(r17)
 1004090:	8a000a17 	ldw	r8,40(r17)
 1004094:	003fae06 	br	1003f50 <__sflush_r+0x58>
 1004098:	98c00017 	ldw	r3,0(r19)
 100409c:	183fba26 	beq	r3,zero,1003f88 <__sflush_r+0x90>
 10040a0:	01000744 	movi	r4,29
 10040a4:	19000626 	beq	r3,r4,10040c0 <__sflush_r+0x1c8>
 10040a8:	01000584 	movi	r4,22
 10040ac:	19000426 	beq	r3,r4,10040c0 <__sflush_r+0x1c8>
 10040b0:	88c0030b 	ldhu	r3,12(r17)
 10040b4:	18c01014 	ori	r3,r3,64
 10040b8:	88c0030d 	sth	r3,12(r17)
 10040bc:	003fc306 	br	1003fcc <__sflush_r+0xd4>
 10040c0:	8880030b 	ldhu	r2,12(r17)
 10040c4:	88c00417 	ldw	r3,16(r17)
 10040c8:	88000115 	stw	zero,4(r17)
 10040cc:	10bdffcc 	andi	r2,r2,63487
 10040d0:	8880030d 	sth	r2,12(r17)
 10040d4:	88c00015 	stw	r3,0(r17)
 10040d8:	003fb306 	br	1003fa8 <__sflush_r+0xb0>
 10040dc:	98800017 	ldw	r2,0(r19)
 10040e0:	103fea26 	beq	r2,zero,100408c <__sflush_r+0x194>
 10040e4:	00c00744 	movi	r3,29
 10040e8:	10c00226 	beq	r2,r3,10040f4 <__sflush_r+0x1fc>
 10040ec:	00c00584 	movi	r3,22
 10040f0:	10ffd21e 	bne	r2,r3,100403c <__sflush_r+0x144>
 10040f4:	9c000015 	stw	r16,0(r19)
 10040f8:	0005883a 	mov	r2,zero
 10040fc:	003fb306 	br	1003fcc <__sflush_r+0xd4>

01004100 <_fflush_r>:
 1004100:	defffd04 	addi	sp,sp,-12
 1004104:	dc000115 	stw	r16,4(sp)
 1004108:	dfc00215 	stw	ra,8(sp)
 100410c:	2021883a 	mov	r16,r4
 1004110:	20000226 	beq	r4,zero,100411c <_fflush_r+0x1c>
 1004114:	20800e17 	ldw	r2,56(r4)
 1004118:	10000c26 	beq	r2,zero,100414c <_fflush_r+0x4c>
 100411c:	2880030f 	ldh	r2,12(r5)
 1004120:	1000051e 	bne	r2,zero,1004138 <_fflush_r+0x38>
 1004124:	0005883a 	mov	r2,zero
 1004128:	dfc00217 	ldw	ra,8(sp)
 100412c:	dc000117 	ldw	r16,4(sp)
 1004130:	dec00304 	addi	sp,sp,12
 1004134:	f800283a 	ret
 1004138:	8009883a 	mov	r4,r16
 100413c:	dfc00217 	ldw	ra,8(sp)
 1004140:	dc000117 	ldw	r16,4(sp)
 1004144:	dec00304 	addi	sp,sp,12
 1004148:	1003ef81 	jmpi	1003ef8 <__sflush_r>
 100414c:	d9400015 	stw	r5,0(sp)
 1004150:	10044dc0 	call	10044dc <__sinit>
 1004154:	d9400017 	ldw	r5,0(sp)
 1004158:	003ff006 	br	100411c <_fflush_r+0x1c>

0100415c <fflush>:
 100415c:	20000526 	beq	r4,zero,1004174 <fflush+0x18>
 1004160:	00804074 	movhi	r2,257
 1004164:	1082b904 	addi	r2,r2,2788
 1004168:	200b883a 	mov	r5,r4
 100416c:	11000017 	ldw	r4,0(r2)
 1004170:	10041001 	jmpi	1004100 <_fflush_r>
 1004174:	00804074 	movhi	r2,257
 1004178:	1082b804 	addi	r2,r2,2784
 100417c:	11000017 	ldw	r4,0(r2)
 1004180:	01404034 	movhi	r5,256
 1004184:	29504004 	addi	r5,r5,16640
 1004188:	1004ec41 	jmpi	1004ec4 <_fwalk_reent>

0100418c <__fp_lock>:
 100418c:	0005883a 	mov	r2,zero
 1004190:	f800283a 	ret

01004194 <__fp_unlock>:
 1004194:	0005883a 	mov	r2,zero
 1004198:	f800283a 	ret

0100419c <_cleanup_r>:
 100419c:	01404074 	movhi	r5,257
 10041a0:	29631404 	addi	r5,r5,-29616
 10041a4:	1004ec41 	jmpi	1004ec4 <_fwalk_reent>

010041a8 <__sinit.part.1>:
 10041a8:	defff704 	addi	sp,sp,-36
 10041ac:	00c04034 	movhi	r3,256
 10041b0:	dfc00815 	stw	ra,32(sp)
 10041b4:	ddc00715 	stw	r23,28(sp)
 10041b8:	dd800615 	stw	r22,24(sp)
 10041bc:	dd400515 	stw	r21,20(sp)
 10041c0:	dd000415 	stw	r20,16(sp)
 10041c4:	dcc00315 	stw	r19,12(sp)
 10041c8:	dc800215 	stw	r18,8(sp)
 10041cc:	dc400115 	stw	r17,4(sp)
 10041d0:	dc000015 	stw	r16,0(sp)
 10041d4:	18d06704 	addi	r3,r3,16796
 10041d8:	24000117 	ldw	r16,4(r4)
 10041dc:	20c00f15 	stw	r3,60(r4)
 10041e0:	2080bb04 	addi	r2,r4,748
 10041e4:	00c000c4 	movi	r3,3
 10041e8:	20c0b915 	stw	r3,740(r4)
 10041ec:	2080ba15 	stw	r2,744(r4)
 10041f0:	2000b815 	stw	zero,736(r4)
 10041f4:	05c00204 	movi	r23,8
 10041f8:	00800104 	movi	r2,4
 10041fc:	2025883a 	mov	r18,r4
 1004200:	b80d883a 	mov	r6,r23
 1004204:	81001704 	addi	r4,r16,92
 1004208:	000b883a 	mov	r5,zero
 100420c:	80000015 	stw	zero,0(r16)
 1004210:	80000115 	stw	zero,4(r16)
 1004214:	80000215 	stw	zero,8(r16)
 1004218:	8080030d 	sth	r2,12(r16)
 100421c:	80001915 	stw	zero,100(r16)
 1004220:	8000038d 	sth	zero,14(r16)
 1004224:	80000415 	stw	zero,16(r16)
 1004228:	80000515 	stw	zero,20(r16)
 100422c:	80000615 	stw	zero,24(r16)
 1004230:	1005d440 	call	1005d44 <memset>
 1004234:	05804034 	movhi	r22,256
 1004238:	94400217 	ldw	r17,8(r18)
 100423c:	05404034 	movhi	r21,256
 1004240:	05004034 	movhi	r20,256
 1004244:	04c04034 	movhi	r19,256
 1004248:	b59d0e04 	addi	r22,r22,29752
 100424c:	ad5d2504 	addi	r21,r21,29844
 1004250:	a51d4404 	addi	r20,r20,29968
 1004254:	9cdd5b04 	addi	r19,r19,30060
 1004258:	85800815 	stw	r22,32(r16)
 100425c:	85400915 	stw	r21,36(r16)
 1004260:	85000a15 	stw	r20,40(r16)
 1004264:	84c00b15 	stw	r19,44(r16)
 1004268:	84000715 	stw	r16,28(r16)
 100426c:	00800284 	movi	r2,10
 1004270:	8880030d 	sth	r2,12(r17)
 1004274:	00800044 	movi	r2,1
 1004278:	89001704 	addi	r4,r17,92
 100427c:	b80d883a 	mov	r6,r23
 1004280:	000b883a 	mov	r5,zero
 1004284:	88000015 	stw	zero,0(r17)
 1004288:	88000115 	stw	zero,4(r17)
 100428c:	88000215 	stw	zero,8(r17)
 1004290:	88001915 	stw	zero,100(r17)
 1004294:	8880038d 	sth	r2,14(r17)
 1004298:	88000415 	stw	zero,16(r17)
 100429c:	88000515 	stw	zero,20(r17)
 10042a0:	88000615 	stw	zero,24(r17)
 10042a4:	1005d440 	call	1005d44 <memset>
 10042a8:	94000317 	ldw	r16,12(r18)
 10042ac:	00800484 	movi	r2,18
 10042b0:	8c400715 	stw	r17,28(r17)
 10042b4:	8d800815 	stw	r22,32(r17)
 10042b8:	8d400915 	stw	r21,36(r17)
 10042bc:	8d000a15 	stw	r20,40(r17)
 10042c0:	8cc00b15 	stw	r19,44(r17)
 10042c4:	8080030d 	sth	r2,12(r16)
 10042c8:	00800084 	movi	r2,2
 10042cc:	80000015 	stw	zero,0(r16)
 10042d0:	80000115 	stw	zero,4(r16)
 10042d4:	80000215 	stw	zero,8(r16)
 10042d8:	80001915 	stw	zero,100(r16)
 10042dc:	8080038d 	sth	r2,14(r16)
 10042e0:	80000415 	stw	zero,16(r16)
 10042e4:	80000515 	stw	zero,20(r16)
 10042e8:	80000615 	stw	zero,24(r16)
 10042ec:	81001704 	addi	r4,r16,92
 10042f0:	000b883a 	mov	r5,zero
 10042f4:	b80d883a 	mov	r6,r23
 10042f8:	1005d440 	call	1005d44 <memset>
 10042fc:	00800044 	movi	r2,1
 1004300:	84000715 	stw	r16,28(r16)
 1004304:	85800815 	stw	r22,32(r16)
 1004308:	85400915 	stw	r21,36(r16)
 100430c:	85000a15 	stw	r20,40(r16)
 1004310:	84c00b15 	stw	r19,44(r16)
 1004314:	90800e15 	stw	r2,56(r18)
 1004318:	dfc00817 	ldw	ra,32(sp)
 100431c:	ddc00717 	ldw	r23,28(sp)
 1004320:	dd800617 	ldw	r22,24(sp)
 1004324:	dd400517 	ldw	r21,20(sp)
 1004328:	dd000417 	ldw	r20,16(sp)
 100432c:	dcc00317 	ldw	r19,12(sp)
 1004330:	dc800217 	ldw	r18,8(sp)
 1004334:	dc400117 	ldw	r17,4(sp)
 1004338:	dc000017 	ldw	r16,0(sp)
 100433c:	dec00904 	addi	sp,sp,36
 1004340:	f800283a 	ret

01004344 <__sfmoreglue>:
 1004344:	defffc04 	addi	sp,sp,-16
 1004348:	dc400115 	stw	r17,4(sp)
 100434c:	2c7fffc4 	addi	r17,r5,-1
 1004350:	8c401a24 	muli	r17,r17,104
 1004354:	dc800215 	stw	r18,8(sp)
 1004358:	2825883a 	mov	r18,r5
 100435c:	89401d04 	addi	r5,r17,116
 1004360:	dc000015 	stw	r16,0(sp)
 1004364:	dfc00315 	stw	ra,12(sp)
 1004368:	10052200 	call	1005220 <_malloc_r>
 100436c:	1021883a 	mov	r16,r2
 1004370:	10000726 	beq	r2,zero,1004390 <__sfmoreglue+0x4c>
 1004374:	11000304 	addi	r4,r2,12
 1004378:	10000015 	stw	zero,0(r2)
 100437c:	14800115 	stw	r18,4(r2)
 1004380:	11000215 	stw	r4,8(r2)
 1004384:	000b883a 	mov	r5,zero
 1004388:	89801a04 	addi	r6,r17,104
 100438c:	1005d440 	call	1005d44 <memset>
 1004390:	8005883a 	mov	r2,r16
 1004394:	dfc00317 	ldw	ra,12(sp)
 1004398:	dc800217 	ldw	r18,8(sp)
 100439c:	dc400117 	ldw	r17,4(sp)
 10043a0:	dc000017 	ldw	r16,0(sp)
 10043a4:	dec00404 	addi	sp,sp,16
 10043a8:	f800283a 	ret

010043ac <__sfp>:
 10043ac:	00804074 	movhi	r2,257
 10043b0:	defffb04 	addi	sp,sp,-20
 10043b4:	1082b804 	addi	r2,r2,2784
 10043b8:	dc800215 	stw	r18,8(sp)
 10043bc:	14800017 	ldw	r18,0(r2)
 10043c0:	dcc00315 	stw	r19,12(sp)
 10043c4:	dfc00415 	stw	ra,16(sp)
 10043c8:	90800e17 	ldw	r2,56(r18)
 10043cc:	dc400115 	stw	r17,4(sp)
 10043d0:	dc000015 	stw	r16,0(sp)
 10043d4:	2027883a 	mov	r19,r4
 10043d8:	1000021e 	bne	r2,zero,10043e4 <__sfp+0x38>
 10043dc:	9009883a 	mov	r4,r18
 10043e0:	10041a80 	call	10041a8 <__sinit.part.1>
 10043e4:	9480b804 	addi	r18,r18,736
 10043e8:	047fffc4 	movi	r17,-1
 10043ec:	91400117 	ldw	r5,4(r18)
 10043f0:	94000217 	ldw	r16,8(r18)
 10043f4:	297fffc4 	addi	r5,r5,-1
 10043f8:	28000a16 	blt	r5,zero,1004424 <__sfp+0x78>
 10043fc:	8080030f 	ldh	r2,12(r16)
 1004400:	10000c26 	beq	r2,zero,1004434 <__sfp+0x88>
 1004404:	80c01d04 	addi	r3,r16,116
 1004408:	00000206 	br	1004414 <__sfp+0x68>
 100440c:	18bfe60f 	ldh	r2,-104(r3)
 1004410:	10000826 	beq	r2,zero,1004434 <__sfp+0x88>
 1004414:	297fffc4 	addi	r5,r5,-1
 1004418:	1c3ffd04 	addi	r16,r3,-12
 100441c:	18c01a04 	addi	r3,r3,104
 1004420:	2c7ffa1e 	bne	r5,r17,100440c <__sfp+0x60>
 1004424:	90800017 	ldw	r2,0(r18)
 1004428:	10001d26 	beq	r2,zero,10044a0 <__sfp+0xf4>
 100442c:	1025883a 	mov	r18,r2
 1004430:	003fee06 	br	10043ec <__sfp+0x40>
 1004434:	00bfffc4 	movi	r2,-1
 1004438:	8080038d 	sth	r2,14(r16)
 100443c:	00800044 	movi	r2,1
 1004440:	8080030d 	sth	r2,12(r16)
 1004444:	80001915 	stw	zero,100(r16)
 1004448:	80000015 	stw	zero,0(r16)
 100444c:	80000215 	stw	zero,8(r16)
 1004450:	80000115 	stw	zero,4(r16)
 1004454:	80000415 	stw	zero,16(r16)
 1004458:	80000515 	stw	zero,20(r16)
 100445c:	80000615 	stw	zero,24(r16)
 1004460:	81001704 	addi	r4,r16,92
 1004464:	000b883a 	mov	r5,zero
 1004468:	01800204 	movi	r6,8
 100446c:	1005d440 	call	1005d44 <memset>
 1004470:	8005883a 	mov	r2,r16
 1004474:	80000c15 	stw	zero,48(r16)
 1004478:	80000d15 	stw	zero,52(r16)
 100447c:	80001115 	stw	zero,68(r16)
 1004480:	80001215 	stw	zero,72(r16)
 1004484:	dfc00417 	ldw	ra,16(sp)
 1004488:	dcc00317 	ldw	r19,12(sp)
 100448c:	dc800217 	ldw	r18,8(sp)
 1004490:	dc400117 	ldw	r17,4(sp)
 1004494:	dc000017 	ldw	r16,0(sp)
 1004498:	dec00504 	addi	sp,sp,20
 100449c:	f800283a 	ret
 10044a0:	9809883a 	mov	r4,r19
 10044a4:	01400104 	movi	r5,4
 10044a8:	10043440 	call	1004344 <__sfmoreglue>
 10044ac:	90800015 	stw	r2,0(r18)
 10044b0:	103fde1e 	bne	r2,zero,100442c <__sfp+0x80>
 10044b4:	00800304 	movi	r2,12
 10044b8:	98800015 	stw	r2,0(r19)
 10044bc:	0005883a 	mov	r2,zero
 10044c0:	003ff006 	br	1004484 <__sfp+0xd8>

010044c4 <_cleanup>:
 10044c4:	00804074 	movhi	r2,257
 10044c8:	1082b804 	addi	r2,r2,2784
 10044cc:	11000017 	ldw	r4,0(r2)
 10044d0:	01404074 	movhi	r5,257
 10044d4:	29631404 	addi	r5,r5,-29616
 10044d8:	1004ec41 	jmpi	1004ec4 <_fwalk_reent>

010044dc <__sinit>:
 10044dc:	20800e17 	ldw	r2,56(r4)
 10044e0:	10000126 	beq	r2,zero,10044e8 <__sinit+0xc>
 10044e4:	f800283a 	ret
 10044e8:	10041a81 	jmpi	10041a8 <__sinit.part.1>

010044ec <__sfp_lock_acquire>:
 10044ec:	f800283a 	ret

010044f0 <__sfp_lock_release>:
 10044f0:	f800283a 	ret

010044f4 <__sinit_lock_acquire>:
 10044f4:	f800283a 	ret

010044f8 <__sinit_lock_release>:
 10044f8:	f800283a 	ret

010044fc <__fp_lock_all>:
 10044fc:	00804074 	movhi	r2,257
 1004500:	1082b904 	addi	r2,r2,2788
 1004504:	11000017 	ldw	r4,0(r2)
 1004508:	01404034 	movhi	r5,256
 100450c:	29506304 	addi	r5,r5,16780
 1004510:	1004e001 	jmpi	1004e00 <_fwalk>

01004514 <__fp_unlock_all>:
 1004514:	00804074 	movhi	r2,257
 1004518:	1082b904 	addi	r2,r2,2788
 100451c:	11000017 	ldw	r4,0(r2)
 1004520:	01404034 	movhi	r5,256
 1004524:	29506504 	addi	r5,r5,16788
 1004528:	1004e001 	jmpi	1004e00 <_fwalk>

0100452c <_malloc_trim_r>:
 100452c:	defffb04 	addi	sp,sp,-20
 1004530:	dcc00315 	stw	r19,12(sp)
 1004534:	04c04074 	movhi	r19,257
 1004538:	dc800215 	stw	r18,8(sp)
 100453c:	dc400115 	stw	r17,4(sp)
 1004540:	dc000015 	stw	r16,0(sp)
 1004544:	dfc00415 	stw	ra,16(sp)
 1004548:	2821883a 	mov	r16,r5
 100454c:	9cfd3404 	addi	r19,r19,-2864
 1004550:	2025883a 	mov	r18,r4
 1004554:	100cc100 	call	100cc10 <__malloc_lock>
 1004558:	98800217 	ldw	r2,8(r19)
 100455c:	14400117 	ldw	r17,4(r2)
 1004560:	00bfff04 	movi	r2,-4
 1004564:	88a2703a 	and	r17,r17,r2
 1004568:	8c21c83a 	sub	r16,r17,r16
 100456c:	8403fbc4 	addi	r16,r16,4079
 1004570:	8020d33a 	srli	r16,r16,12
 1004574:	0083ffc4 	movi	r2,4095
 1004578:	843fffc4 	addi	r16,r16,-1
 100457c:	8020933a 	slli	r16,r16,12
 1004580:	1400060e 	bge	r2,r16,100459c <_malloc_trim_r+0x70>
 1004584:	9009883a 	mov	r4,r18
 1004588:	000b883a 	mov	r5,zero
 100458c:	10073e40 	call	10073e4 <_sbrk_r>
 1004590:	98c00217 	ldw	r3,8(r19)
 1004594:	1c47883a 	add	r3,r3,r17
 1004598:	10c00a26 	beq	r2,r3,10045c4 <_malloc_trim_r+0x98>
 100459c:	9009883a 	mov	r4,r18
 10045a0:	100cc300 	call	100cc30 <__malloc_unlock>
 10045a4:	0005883a 	mov	r2,zero
 10045a8:	dfc00417 	ldw	ra,16(sp)
 10045ac:	dcc00317 	ldw	r19,12(sp)
 10045b0:	dc800217 	ldw	r18,8(sp)
 10045b4:	dc400117 	ldw	r17,4(sp)
 10045b8:	dc000017 	ldw	r16,0(sp)
 10045bc:	dec00504 	addi	sp,sp,20
 10045c0:	f800283a 	ret
 10045c4:	9009883a 	mov	r4,r18
 10045c8:	040bc83a 	sub	r5,zero,r16
 10045cc:	10073e40 	call	10073e4 <_sbrk_r>
 10045d0:	00ffffc4 	movi	r3,-1
 10045d4:	10c00d26 	beq	r2,r3,100460c <_malloc_trim_r+0xe0>
 10045d8:	00c04074 	movhi	r3,257
 10045dc:	18c99004 	addi	r3,r3,9792
 10045e0:	18800017 	ldw	r2,0(r3)
 10045e4:	99000217 	ldw	r4,8(r19)
 10045e8:	8c23c83a 	sub	r17,r17,r16
 10045ec:	8c400054 	ori	r17,r17,1
 10045f0:	1421c83a 	sub	r16,r2,r16
 10045f4:	24400115 	stw	r17,4(r4)
 10045f8:	9009883a 	mov	r4,r18
 10045fc:	1c000015 	stw	r16,0(r3)
 1004600:	100cc300 	call	100cc30 <__malloc_unlock>
 1004604:	00800044 	movi	r2,1
 1004608:	003fe706 	br	10045a8 <_malloc_trim_r+0x7c>
 100460c:	9009883a 	mov	r4,r18
 1004610:	000b883a 	mov	r5,zero
 1004614:	10073e40 	call	10073e4 <_sbrk_r>
 1004618:	99000217 	ldw	r4,8(r19)
 100461c:	014003c4 	movi	r5,15
 1004620:	1107c83a 	sub	r3,r2,r4
 1004624:	28ffdd0e 	bge	r5,r3,100459c <_malloc_trim_r+0x70>
 1004628:	01404074 	movhi	r5,257
 100462c:	2942bb04 	addi	r5,r5,2796
 1004630:	29400017 	ldw	r5,0(r5)
 1004634:	18c00054 	ori	r3,r3,1
 1004638:	20c00115 	stw	r3,4(r4)
 100463c:	00c04074 	movhi	r3,257
 1004640:	1145c83a 	sub	r2,r2,r5
 1004644:	18c99004 	addi	r3,r3,9792
 1004648:	18800015 	stw	r2,0(r3)
 100464c:	003fd306 	br	100459c <_malloc_trim_r+0x70>

01004650 <_free_r>:
 1004650:	28004c26 	beq	r5,zero,1004784 <_free_r+0x134>
 1004654:	defffd04 	addi	sp,sp,-12
 1004658:	dc400115 	stw	r17,4(sp)
 100465c:	dc000015 	stw	r16,0(sp)
 1004660:	2023883a 	mov	r17,r4
 1004664:	2821883a 	mov	r16,r5
 1004668:	dfc00215 	stw	ra,8(sp)
 100466c:	100cc100 	call	100cc10 <__malloc_lock>
 1004670:	813fff17 	ldw	r4,-4(r16)
 1004674:	00bfff84 	movi	r2,-2
 1004678:	02404074 	movhi	r9,257
 100467c:	81bffe04 	addi	r6,r16,-8
 1004680:	2084703a 	and	r2,r4,r2
 1004684:	4a7d3404 	addi	r9,r9,-2864
 1004688:	308b883a 	add	r5,r6,r2
 100468c:	2a000117 	ldw	r8,4(r5)
 1004690:	49c00217 	ldw	r7,8(r9)
 1004694:	00ffff04 	movi	r3,-4
 1004698:	40c6703a 	and	r3,r8,r3
 100469c:	39405326 	beq	r7,r5,10047ec <_free_r+0x19c>
 10046a0:	28c00115 	stw	r3,4(r5)
 10046a4:	2100004c 	andi	r4,r4,1
 10046a8:	2000091e 	bne	r4,zero,10046d0 <_free_r+0x80>
 10046ac:	81fffe17 	ldw	r7,-8(r16)
 10046b0:	4a000204 	addi	r8,r9,8
 10046b4:	31cdc83a 	sub	r6,r6,r7
 10046b8:	31000217 	ldw	r4,8(r6)
 10046bc:	11c5883a 	add	r2,r2,r7
 10046c0:	22006126 	beq	r4,r8,1004848 <_free_r+0x1f8>
 10046c4:	31c00317 	ldw	r7,12(r6)
 10046c8:	21c00315 	stw	r7,12(r4)
 10046cc:	39000215 	stw	r4,8(r7)
 10046d0:	28c9883a 	add	r4,r5,r3
 10046d4:	21c00117 	ldw	r7,4(r4)
 10046d8:	39c0004c 	andi	r7,r7,1
 10046dc:	38000d1e 	bne	r7,zero,1004714 <_free_r+0xc4>
 10046e0:	29000217 	ldw	r4,8(r5)
 10046e4:	10c5883a 	add	r2,r2,r3
 10046e8:	00c04074 	movhi	r3,257
 10046ec:	18fd3604 	addi	r3,r3,-2856
 10046f0:	20c07526 	beq	r4,r3,10048c8 <_free_r+0x278>
 10046f4:	29c00317 	ldw	r7,12(r5)
 10046f8:	11400054 	ori	r5,r2,1
 10046fc:	3087883a 	add	r3,r6,r2
 1004700:	21c00315 	stw	r7,12(r4)
 1004704:	39000215 	stw	r4,8(r7)
 1004708:	31400115 	stw	r5,4(r6)
 100470c:	18800015 	stw	r2,0(r3)
 1004710:	00000406 	br	1004724 <_free_r+0xd4>
 1004714:	10c00054 	ori	r3,r2,1
 1004718:	30c00115 	stw	r3,4(r6)
 100471c:	3087883a 	add	r3,r6,r2
 1004720:	18800015 	stw	r2,0(r3)
 1004724:	00c07fc4 	movi	r3,511
 1004728:	18801736 	bltu	r3,r2,1004788 <_free_r+0x138>
 100472c:	1004d0fa 	srli	r2,r2,3
 1004730:	01400044 	movi	r5,1
 1004734:	49000117 	ldw	r4,4(r9)
 1004738:	1087883a 	add	r3,r2,r2
 100473c:	18c7883a 	add	r3,r3,r3
 1004740:	1005d0ba 	srai	r2,r2,2
 1004744:	18c7883a 	add	r3,r3,r3
 1004748:	1a47883a 	add	r3,r3,r9
 100474c:	19c00217 	ldw	r7,8(r3)
 1004750:	2884983a 	sll	r2,r5,r2
 1004754:	30c00315 	stw	r3,12(r6)
 1004758:	31c00215 	stw	r7,8(r6)
 100475c:	1104b03a 	or	r2,r2,r4
 1004760:	19800215 	stw	r6,8(r3)
 1004764:	48800115 	stw	r2,4(r9)
 1004768:	39800315 	stw	r6,12(r7)
 100476c:	8809883a 	mov	r4,r17
 1004770:	dfc00217 	ldw	ra,8(sp)
 1004774:	dc400117 	ldw	r17,4(sp)
 1004778:	dc000017 	ldw	r16,0(sp)
 100477c:	dec00304 	addi	sp,sp,12
 1004780:	100cc301 	jmpi	100cc30 <__malloc_unlock>
 1004784:	f800283a 	ret
 1004788:	1006d27a 	srli	r3,r2,9
 100478c:	01000104 	movi	r4,4
 1004790:	20c04036 	bltu	r4,r3,1004894 <_free_r+0x244>
 1004794:	1006d1ba 	srli	r3,r2,6
 1004798:	19400e04 	addi	r5,r3,56
 100479c:	2947883a 	add	r3,r5,r5
 10047a0:	18c7883a 	add	r3,r3,r3
 10047a4:	18c7883a 	add	r3,r3,r3
 10047a8:	1a49883a 	add	r4,r3,r9
 10047ac:	20c00217 	ldw	r3,8(r4)
 10047b0:	01c04074 	movhi	r7,257
 10047b4:	39fd3404 	addi	r7,r7,-2864
 10047b8:	19003b26 	beq	r3,r4,10048a8 <_free_r+0x258>
 10047bc:	01ffff04 	movi	r7,-4
 10047c0:	19400117 	ldw	r5,4(r3)
 10047c4:	29ca703a 	and	r5,r5,r7
 10047c8:	1140022e 	bgeu	r2,r5,10047d4 <_free_r+0x184>
 10047cc:	18c00217 	ldw	r3,8(r3)
 10047d0:	20fffb1e 	bne	r4,r3,10047c0 <_free_r+0x170>
 10047d4:	18800317 	ldw	r2,12(r3)
 10047d8:	30800315 	stw	r2,12(r6)
 10047dc:	30c00215 	stw	r3,8(r6)
 10047e0:	11800215 	stw	r6,8(r2)
 10047e4:	19800315 	stw	r6,12(r3)
 10047e8:	003fe006 	br	100476c <_free_r+0x11c>
 10047ec:	2100004c 	andi	r4,r4,1
 10047f0:	1885883a 	add	r2,r3,r2
 10047f4:	2000071e 	bne	r4,zero,1004814 <_free_r+0x1c4>
 10047f8:	817ffe17 	ldw	r5,-8(r16)
 10047fc:	314dc83a 	sub	r6,r6,r5
 1004800:	30c00317 	ldw	r3,12(r6)
 1004804:	31000217 	ldw	r4,8(r6)
 1004808:	1145883a 	add	r2,r2,r5
 100480c:	20c00315 	stw	r3,12(r4)
 1004810:	19000215 	stw	r4,8(r3)
 1004814:	10c00054 	ori	r3,r2,1
 1004818:	30c00115 	stw	r3,4(r6)
 100481c:	00c04074 	movhi	r3,257
 1004820:	18c2bc04 	addi	r3,r3,2800
 1004824:	18c00017 	ldw	r3,0(r3)
 1004828:	49800215 	stw	r6,8(r9)
 100482c:	10ffcf36 	bltu	r2,r3,100476c <_free_r+0x11c>
 1004830:	00804074 	movhi	r2,257
 1004834:	10898804 	addi	r2,r2,9760
 1004838:	11400017 	ldw	r5,0(r2)
 100483c:	8809883a 	mov	r4,r17
 1004840:	100452c0 	call	100452c <_malloc_trim_r>
 1004844:	003fc906 	br	100476c <_free_r+0x11c>
 1004848:	28c9883a 	add	r4,r5,r3
 100484c:	21000117 	ldw	r4,4(r4)
 1004850:	2100004c 	andi	r4,r4,1
 1004854:	20000a1e 	bne	r4,zero,1004880 <_free_r+0x230>
 1004858:	29000317 	ldw	r4,12(r5)
 100485c:	29400217 	ldw	r5,8(r5)
 1004860:	10c5883a 	add	r2,r2,r3
 1004864:	10c00054 	ori	r3,r2,1
 1004868:	29000315 	stw	r4,12(r5)
 100486c:	21400215 	stw	r5,8(r4)
 1004870:	30c00115 	stw	r3,4(r6)
 1004874:	308d883a 	add	r6,r6,r2
 1004878:	30800015 	stw	r2,0(r6)
 100487c:	003fbb06 	br	100476c <_free_r+0x11c>
 1004880:	10c00054 	ori	r3,r2,1
 1004884:	30c00115 	stw	r3,4(r6)
 1004888:	308d883a 	add	r6,r6,r2
 100488c:	30800015 	stw	r2,0(r6)
 1004890:	003fb606 	br	100476c <_free_r+0x11c>
 1004894:	01000504 	movi	r4,20
 1004898:	20c01436 	bltu	r4,r3,10048ec <_free_r+0x29c>
 100489c:	194016c4 	addi	r5,r3,91
 10048a0:	2947883a 	add	r3,r5,r5
 10048a4:	003fbe06 	br	10047a0 <_free_r+0x150>
 10048a8:	280bd0ba 	srai	r5,r5,2
 10048ac:	00800044 	movi	r2,1
 10048b0:	39000117 	ldw	r4,4(r7)
 10048b4:	114a983a 	sll	r5,r2,r5
 10048b8:	1805883a 	mov	r2,r3
 10048bc:	2908b03a 	or	r4,r5,r4
 10048c0:	39000115 	stw	r4,4(r7)
 10048c4:	003fc406 	br	10047d8 <_free_r+0x188>
 10048c8:	49800515 	stw	r6,20(r9)
 10048cc:	49800415 	stw	r6,16(r9)
 10048d0:	10c00054 	ori	r3,r2,1
 10048d4:	31000315 	stw	r4,12(r6)
 10048d8:	31000215 	stw	r4,8(r6)
 10048dc:	30c00115 	stw	r3,4(r6)
 10048e0:	308d883a 	add	r6,r6,r2
 10048e4:	30800015 	stw	r2,0(r6)
 10048e8:	003fa006 	br	100476c <_free_r+0x11c>
 10048ec:	01001504 	movi	r4,84
 10048f0:	20c00436 	bltu	r4,r3,1004904 <_free_r+0x2b4>
 10048f4:	1006d33a 	srli	r3,r2,12
 10048f8:	19401b84 	addi	r5,r3,110
 10048fc:	2947883a 	add	r3,r5,r5
 1004900:	003fa706 	br	10047a0 <_free_r+0x150>
 1004904:	01005504 	movi	r4,340
 1004908:	20c00436 	bltu	r4,r3,100491c <_free_r+0x2cc>
 100490c:	1006d3fa 	srli	r3,r2,15
 1004910:	19401dc4 	addi	r5,r3,119
 1004914:	2947883a 	add	r3,r5,r5
 1004918:	003fa106 	br	10047a0 <_free_r+0x150>
 100491c:	01015504 	movi	r4,1364
 1004920:	20c00436 	bltu	r4,r3,1004934 <_free_r+0x2e4>
 1004924:	1006d4ba 	srli	r3,r2,18
 1004928:	19401f04 	addi	r5,r3,124
 100492c:	2947883a 	add	r3,r5,r5
 1004930:	003f9b06 	br	10047a0 <_free_r+0x150>
 1004934:	00c03f04 	movi	r3,252
 1004938:	01401f84 	movi	r5,126
 100493c:	003f9806 	br	10047a0 <_free_r+0x150>

01004940 <__sfvwrite_r>:
 1004940:	30800217 	ldw	r2,8(r6)
 1004944:	10006726 	beq	r2,zero,1004ae4 <__sfvwrite_r+0x1a4>
 1004948:	defff404 	addi	sp,sp,-48
 100494c:	dd000615 	stw	r20,24(sp)
 1004950:	2029883a 	mov	r20,r4
 1004954:	2900030b 	ldhu	r4,12(r5)
 1004958:	ddc00915 	stw	r23,36(sp)
 100495c:	dc000215 	stw	r16,8(sp)
 1004960:	dfc00b15 	stw	ra,44(sp)
 1004964:	df000a15 	stw	fp,40(sp)
 1004968:	dd800815 	stw	r22,32(sp)
 100496c:	dd400715 	stw	r21,28(sp)
 1004970:	dcc00515 	stw	r19,20(sp)
 1004974:	dc800415 	stw	r18,16(sp)
 1004978:	dc400315 	stw	r17,12(sp)
 100497c:	2080020c 	andi	r2,r4,8
 1004980:	2821883a 	mov	r16,r5
 1004984:	302f883a 	mov	r23,r6
 1004988:	10002726 	beq	r2,zero,1004a28 <__sfvwrite_r+0xe8>
 100498c:	28800417 	ldw	r2,16(r5)
 1004990:	10002526 	beq	r2,zero,1004a28 <__sfvwrite_r+0xe8>
 1004994:	2080008c 	andi	r2,r4,2
 1004998:	bc400017 	ldw	r17,0(r23)
 100499c:	10002a26 	beq	r2,zero,1004a48 <__sfvwrite_r+0x108>
 10049a0:	05600034 	movhi	r21,32768
 10049a4:	0027883a 	mov	r19,zero
 10049a8:	0025883a 	mov	r18,zero
 10049ac:	ad7f0004 	addi	r21,r21,-1024
 10049b0:	980d883a 	mov	r6,r19
 10049b4:	a009883a 	mov	r4,r20
 10049b8:	90004626 	beq	r18,zero,1004ad4 <__sfvwrite_r+0x194>
 10049bc:	900f883a 	mov	r7,r18
 10049c0:	81400717 	ldw	r5,28(r16)
 10049c4:	ac80022e 	bgeu	r21,r18,10049d0 <__sfvwrite_r+0x90>
 10049c8:	01e00034 	movhi	r7,32768
 10049cc:	39ff0004 	addi	r7,r7,-1024
 10049d0:	80800917 	ldw	r2,36(r16)
 10049d4:	103ee83a 	callr	r2
 10049d8:	0080520e 	bge	zero,r2,1004b24 <__sfvwrite_r+0x1e4>
 10049dc:	b8c00217 	ldw	r3,8(r23)
 10049e0:	98a7883a 	add	r19,r19,r2
 10049e4:	90a5c83a 	sub	r18,r18,r2
 10049e8:	1885c83a 	sub	r2,r3,r2
 10049ec:	b8800215 	stw	r2,8(r23)
 10049f0:	103fef1e 	bne	r2,zero,10049b0 <__sfvwrite_r+0x70>
 10049f4:	0005883a 	mov	r2,zero
 10049f8:	dfc00b17 	ldw	ra,44(sp)
 10049fc:	df000a17 	ldw	fp,40(sp)
 1004a00:	ddc00917 	ldw	r23,36(sp)
 1004a04:	dd800817 	ldw	r22,32(sp)
 1004a08:	dd400717 	ldw	r21,28(sp)
 1004a0c:	dd000617 	ldw	r20,24(sp)
 1004a10:	dcc00517 	ldw	r19,20(sp)
 1004a14:	dc800417 	ldw	r18,16(sp)
 1004a18:	dc400317 	ldw	r17,12(sp)
 1004a1c:	dc000217 	ldw	r16,8(sp)
 1004a20:	dec00c04 	addi	sp,sp,48
 1004a24:	f800283a 	ret
 1004a28:	a009883a 	mov	r4,r20
 1004a2c:	800b883a 	mov	r5,r16
 1004a30:	100247c0 	call	100247c <__swsetup_r>
 1004a34:	1000ec1e 	bne	r2,zero,1004de8 <__sfvwrite_r+0x4a8>
 1004a38:	8100030b 	ldhu	r4,12(r16)
 1004a3c:	bc400017 	ldw	r17,0(r23)
 1004a40:	2080008c 	andi	r2,r4,2
 1004a44:	103fd61e 	bne	r2,zero,10049a0 <__sfvwrite_r+0x60>
 1004a48:	2080004c 	andi	r2,r4,1
 1004a4c:	10003a1e 	bne	r2,zero,1004b38 <__sfvwrite_r+0x1f8>
 1004a50:	0039883a 	mov	fp,zero
 1004a54:	0025883a 	mov	r18,zero
 1004a58:	90001a26 	beq	r18,zero,1004ac4 <__sfvwrite_r+0x184>
 1004a5c:	2080800c 	andi	r2,r4,512
 1004a60:	85800217 	ldw	r22,8(r16)
 1004a64:	10007626 	beq	r2,zero,1004c40 <__sfvwrite_r+0x300>
 1004a68:	b027883a 	mov	r19,r22
 1004a6c:	95809436 	bltu	r18,r22,1004cc0 <__sfvwrite_r+0x380>
 1004a70:	2081200c 	andi	r2,r4,1152
 1004a74:	10009f1e 	bne	r2,zero,1004cf4 <__sfvwrite_r+0x3b4>
 1004a78:	81000017 	ldw	r4,0(r16)
 1004a7c:	e00b883a 	mov	r5,fp
 1004a80:	980d883a 	mov	r6,r19
 1004a84:	1005be80 	call	1005be8 <memmove>
 1004a88:	81000217 	ldw	r4,8(r16)
 1004a8c:	81400017 	ldw	r5,0(r16)
 1004a90:	9005883a 	mov	r2,r18
 1004a94:	2587c83a 	sub	r3,r4,r22
 1004a98:	2ce7883a 	add	r19,r5,r19
 1004a9c:	80c00215 	stw	r3,8(r16)
 1004aa0:	84c00015 	stw	r19,0(r16)
 1004aa4:	b8c00217 	ldw	r3,8(r23)
 1004aa8:	e0b9883a 	add	fp,fp,r2
 1004aac:	90a5c83a 	sub	r18,r18,r2
 1004ab0:	1885c83a 	sub	r2,r3,r2
 1004ab4:	b8800215 	stw	r2,8(r23)
 1004ab8:	103fce26 	beq	r2,zero,10049f4 <__sfvwrite_r+0xb4>
 1004abc:	8100030b 	ldhu	r4,12(r16)
 1004ac0:	903fe61e 	bne	r18,zero,1004a5c <__sfvwrite_r+0x11c>
 1004ac4:	8f000017 	ldw	fp,0(r17)
 1004ac8:	8c800117 	ldw	r18,4(r17)
 1004acc:	8c400204 	addi	r17,r17,8
 1004ad0:	003fe106 	br	1004a58 <__sfvwrite_r+0x118>
 1004ad4:	8cc00017 	ldw	r19,0(r17)
 1004ad8:	8c800117 	ldw	r18,4(r17)
 1004adc:	8c400204 	addi	r17,r17,8
 1004ae0:	003fb306 	br	10049b0 <__sfvwrite_r+0x70>
 1004ae4:	0005883a 	mov	r2,zero
 1004ae8:	f800283a 	ret
 1004aec:	00a00034 	movhi	r2,32768
 1004af0:	10bfffc4 	addi	r2,r2,-1
 1004af4:	9009883a 	mov	r4,r18
 1004af8:	1480012e 	bgeu	r2,r18,1004b00 <__sfvwrite_r+0x1c0>
 1004afc:	1009883a 	mov	r4,r2
 1004b00:	980b883a 	mov	r5,r19
 1004b04:	1009f900 	call	1009f90 <__divsi3>
 1004b08:	81400717 	ldw	r5,28(r16)
 1004b0c:	80c00917 	ldw	r3,36(r16)
 1004b10:	988f383a 	mul	r7,r19,r2
 1004b14:	a009883a 	mov	r4,r20
 1004b18:	e00d883a 	mov	r6,fp
 1004b1c:	183ee83a 	callr	r3
 1004b20:	00bfe016 	blt	zero,r2,1004aa4 <__sfvwrite_r+0x164>
 1004b24:	8080030b 	ldhu	r2,12(r16)
 1004b28:	10801014 	ori	r2,r2,64
 1004b2c:	8080030d 	sth	r2,12(r16)
 1004b30:	00bfffc4 	movi	r2,-1
 1004b34:	003fb006 	br	10049f8 <__sfvwrite_r+0xb8>
 1004b38:	0027883a 	mov	r19,zero
 1004b3c:	0011883a 	mov	r8,zero
 1004b40:	0039883a 	mov	fp,zero
 1004b44:	0025883a 	mov	r18,zero
 1004b48:	90001f26 	beq	r18,zero,1004bc8 <__sfvwrite_r+0x288>
 1004b4c:	40006026 	beq	r8,zero,1004cd0 <__sfvwrite_r+0x390>
 1004b50:	982b883a 	mov	r21,r19
 1004b54:	94c0012e 	bgeu	r18,r19,1004b5c <__sfvwrite_r+0x21c>
 1004b58:	902b883a 	mov	r21,r18
 1004b5c:	81000017 	ldw	r4,0(r16)
 1004b60:	80800417 	ldw	r2,16(r16)
 1004b64:	a82d883a 	mov	r22,r21
 1004b68:	81800217 	ldw	r6,8(r16)
 1004b6c:	81c00517 	ldw	r7,20(r16)
 1004b70:	1100022e 	bgeu	r2,r4,1004b7c <__sfvwrite_r+0x23c>
 1004b74:	31c7883a 	add	r3,r6,r7
 1004b78:	1d401816 	blt	r3,r21,1004bdc <__sfvwrite_r+0x29c>
 1004b7c:	a9c04416 	blt	r21,r7,1004c90 <__sfvwrite_r+0x350>
 1004b80:	80800917 	ldw	r2,36(r16)
 1004b84:	81400717 	ldw	r5,28(r16)
 1004b88:	a009883a 	mov	r4,r20
 1004b8c:	da000115 	stw	r8,4(sp)
 1004b90:	e00d883a 	mov	r6,fp
 1004b94:	103ee83a 	callr	r2
 1004b98:	102d883a 	mov	r22,r2
 1004b9c:	da000117 	ldw	r8,4(sp)
 1004ba0:	00bfe00e 	bge	zero,r2,1004b24 <__sfvwrite_r+0x1e4>
 1004ba4:	9da7c83a 	sub	r19,r19,r22
 1004ba8:	98001f26 	beq	r19,zero,1004c28 <__sfvwrite_r+0x2e8>
 1004bac:	b8800217 	ldw	r2,8(r23)
 1004bb0:	e5b9883a 	add	fp,fp,r22
 1004bb4:	95a5c83a 	sub	r18,r18,r22
 1004bb8:	15adc83a 	sub	r22,r2,r22
 1004bbc:	bd800215 	stw	r22,8(r23)
 1004bc0:	b03f8c26 	beq	r22,zero,10049f4 <__sfvwrite_r+0xb4>
 1004bc4:	903fe11e 	bne	r18,zero,1004b4c <__sfvwrite_r+0x20c>
 1004bc8:	8f000017 	ldw	fp,0(r17)
 1004bcc:	8c800117 	ldw	r18,4(r17)
 1004bd0:	0011883a 	mov	r8,zero
 1004bd4:	8c400204 	addi	r17,r17,8
 1004bd8:	003fdb06 	br	1004b48 <__sfvwrite_r+0x208>
 1004bdc:	180d883a 	mov	r6,r3
 1004be0:	e00b883a 	mov	r5,fp
 1004be4:	da000115 	stw	r8,4(sp)
 1004be8:	d8c00015 	stw	r3,0(sp)
 1004bec:	1005be80 	call	1005be8 <memmove>
 1004bf0:	d8c00017 	ldw	r3,0(sp)
 1004bf4:	80800017 	ldw	r2,0(r16)
 1004bf8:	a009883a 	mov	r4,r20
 1004bfc:	800b883a 	mov	r5,r16
 1004c00:	10c5883a 	add	r2,r2,r3
 1004c04:	80800015 	stw	r2,0(r16)
 1004c08:	d8c00015 	stw	r3,0(sp)
 1004c0c:	10041000 	call	1004100 <_fflush_r>
 1004c10:	d8c00017 	ldw	r3,0(sp)
 1004c14:	da000117 	ldw	r8,4(sp)
 1004c18:	103fc21e 	bne	r2,zero,1004b24 <__sfvwrite_r+0x1e4>
 1004c1c:	182d883a 	mov	r22,r3
 1004c20:	9da7c83a 	sub	r19,r19,r22
 1004c24:	983fe11e 	bne	r19,zero,1004bac <__sfvwrite_r+0x26c>
 1004c28:	a009883a 	mov	r4,r20
 1004c2c:	800b883a 	mov	r5,r16
 1004c30:	10041000 	call	1004100 <_fflush_r>
 1004c34:	103fbb1e 	bne	r2,zero,1004b24 <__sfvwrite_r+0x1e4>
 1004c38:	0011883a 	mov	r8,zero
 1004c3c:	003fdb06 	br	1004bac <__sfvwrite_r+0x26c>
 1004c40:	81000017 	ldw	r4,0(r16)
 1004c44:	80800417 	ldw	r2,16(r16)
 1004c48:	11000236 	bltu	r2,r4,1004c54 <__sfvwrite_r+0x314>
 1004c4c:	84c00517 	ldw	r19,20(r16)
 1004c50:	94ffa62e 	bgeu	r18,r19,1004aec <__sfvwrite_r+0x1ac>
 1004c54:	9027883a 	mov	r19,r18
 1004c58:	b480012e 	bgeu	r22,r18,1004c60 <__sfvwrite_r+0x320>
 1004c5c:	b027883a 	mov	r19,r22
 1004c60:	e00b883a 	mov	r5,fp
 1004c64:	980d883a 	mov	r6,r19
 1004c68:	1005be80 	call	1005be8 <memmove>
 1004c6c:	80800217 	ldw	r2,8(r16)
 1004c70:	80c00017 	ldw	r3,0(r16)
 1004c74:	14c5c83a 	sub	r2,r2,r19
 1004c78:	1cc7883a 	add	r3,r3,r19
 1004c7c:	80800215 	stw	r2,8(r16)
 1004c80:	80c00015 	stw	r3,0(r16)
 1004c84:	10004326 	beq	r2,zero,1004d94 <__sfvwrite_r+0x454>
 1004c88:	9805883a 	mov	r2,r19
 1004c8c:	003f8506 	br	1004aa4 <__sfvwrite_r+0x164>
 1004c90:	a80d883a 	mov	r6,r21
 1004c94:	e00b883a 	mov	r5,fp
 1004c98:	da000115 	stw	r8,4(sp)
 1004c9c:	1005be80 	call	1005be8 <memmove>
 1004ca0:	80800217 	ldw	r2,8(r16)
 1004ca4:	80c00017 	ldw	r3,0(r16)
 1004ca8:	da000117 	ldw	r8,4(sp)
 1004cac:	1545c83a 	sub	r2,r2,r21
 1004cb0:	1d6b883a 	add	r21,r3,r21
 1004cb4:	80800215 	stw	r2,8(r16)
 1004cb8:	85400015 	stw	r21,0(r16)
 1004cbc:	003fb906 	br	1004ba4 <__sfvwrite_r+0x264>
 1004cc0:	81000017 	ldw	r4,0(r16)
 1004cc4:	902d883a 	mov	r22,r18
 1004cc8:	9027883a 	mov	r19,r18
 1004ccc:	003f6b06 	br	1004a7c <__sfvwrite_r+0x13c>
 1004cd0:	e009883a 	mov	r4,fp
 1004cd4:	01400284 	movi	r5,10
 1004cd8:	900d883a 	mov	r6,r18
 1004cdc:	10059c80 	call	10059c8 <memchr>
 1004ce0:	10003e26 	beq	r2,zero,1004ddc <__sfvwrite_r+0x49c>
 1004ce4:	10800044 	addi	r2,r2,1
 1004ce8:	1727c83a 	sub	r19,r2,fp
 1004cec:	02000044 	movi	r8,1
 1004cf0:	003f9706 	br	1004b50 <__sfvwrite_r+0x210>
 1004cf4:	80800517 	ldw	r2,20(r16)
 1004cf8:	81400417 	ldw	r5,16(r16)
 1004cfc:	80c00017 	ldw	r3,0(r16)
 1004d00:	10a7883a 	add	r19,r2,r2
 1004d04:	9885883a 	add	r2,r19,r2
 1004d08:	1026d7fa 	srli	r19,r2,31
 1004d0c:	196bc83a 	sub	r21,r3,r5
 1004d10:	a9800044 	addi	r6,r21,1
 1004d14:	9885883a 	add	r2,r19,r2
 1004d18:	1027d07a 	srai	r19,r2,1
 1004d1c:	3485883a 	add	r2,r6,r18
 1004d20:	980d883a 	mov	r6,r19
 1004d24:	9880022e 	bgeu	r19,r2,1004d30 <__sfvwrite_r+0x3f0>
 1004d28:	1027883a 	mov	r19,r2
 1004d2c:	100d883a 	mov	r6,r2
 1004d30:	2101000c 	andi	r4,r4,1024
 1004d34:	20001c26 	beq	r4,zero,1004da8 <__sfvwrite_r+0x468>
 1004d38:	a009883a 	mov	r4,r20
 1004d3c:	300b883a 	mov	r5,r6
 1004d40:	10052200 	call	1005220 <_malloc_r>
 1004d44:	102d883a 	mov	r22,r2
 1004d48:	10002926 	beq	r2,zero,1004df0 <__sfvwrite_r+0x4b0>
 1004d4c:	81400417 	ldw	r5,16(r16)
 1004d50:	1009883a 	mov	r4,r2
 1004d54:	a80d883a 	mov	r6,r21
 1004d58:	1005ab00 	call	1005ab0 <memcpy>
 1004d5c:	8080030b 	ldhu	r2,12(r16)
 1004d60:	00fedfc4 	movi	r3,-1153
 1004d64:	10c4703a 	and	r2,r2,r3
 1004d68:	10802014 	ori	r2,r2,128
 1004d6c:	8080030d 	sth	r2,12(r16)
 1004d70:	b549883a 	add	r4,r22,r21
 1004d74:	9d4bc83a 	sub	r5,r19,r21
 1004d78:	85800415 	stw	r22,16(r16)
 1004d7c:	84c00515 	stw	r19,20(r16)
 1004d80:	81000015 	stw	r4,0(r16)
 1004d84:	902d883a 	mov	r22,r18
 1004d88:	81400215 	stw	r5,8(r16)
 1004d8c:	9027883a 	mov	r19,r18
 1004d90:	003f3a06 	br	1004a7c <__sfvwrite_r+0x13c>
 1004d94:	a009883a 	mov	r4,r20
 1004d98:	800b883a 	mov	r5,r16
 1004d9c:	10041000 	call	1004100 <_fflush_r>
 1004da0:	103fb926 	beq	r2,zero,1004c88 <__sfvwrite_r+0x348>
 1004da4:	003f5f06 	br	1004b24 <__sfvwrite_r+0x1e4>
 1004da8:	a009883a 	mov	r4,r20
 1004dac:	1006e080 	call	1006e08 <_realloc_r>
 1004db0:	102d883a 	mov	r22,r2
 1004db4:	103fee1e 	bne	r2,zero,1004d70 <__sfvwrite_r+0x430>
 1004db8:	81400417 	ldw	r5,16(r16)
 1004dbc:	a009883a 	mov	r4,r20
 1004dc0:	10046500 	call	1004650 <_free_r>
 1004dc4:	8080030b 	ldhu	r2,12(r16)
 1004dc8:	00ffdfc4 	movi	r3,-129
 1004dcc:	1884703a 	and	r2,r3,r2
 1004dd0:	00c00304 	movi	r3,12
 1004dd4:	a0c00015 	stw	r3,0(r20)
 1004dd8:	003f5306 	br	1004b28 <__sfvwrite_r+0x1e8>
 1004ddc:	94c00044 	addi	r19,r18,1
 1004de0:	02000044 	movi	r8,1
 1004de4:	003f5a06 	br	1004b50 <__sfvwrite_r+0x210>
 1004de8:	00bfffc4 	movi	r2,-1
 1004dec:	003f0206 	br	10049f8 <__sfvwrite_r+0xb8>
 1004df0:	00800304 	movi	r2,12
 1004df4:	a0800015 	stw	r2,0(r20)
 1004df8:	8080030b 	ldhu	r2,12(r16)
 1004dfc:	003f4a06 	br	1004b28 <__sfvwrite_r+0x1e8>

01004e00 <_fwalk>:
 1004e00:	defff704 	addi	sp,sp,-36
 1004e04:	dd000415 	stw	r20,16(sp)
 1004e08:	dfc00815 	stw	ra,32(sp)
 1004e0c:	ddc00715 	stw	r23,28(sp)
 1004e10:	dd800615 	stw	r22,24(sp)
 1004e14:	dd400515 	stw	r21,20(sp)
 1004e18:	dcc00315 	stw	r19,12(sp)
 1004e1c:	dc800215 	stw	r18,8(sp)
 1004e20:	dc400115 	stw	r17,4(sp)
 1004e24:	dc000015 	stw	r16,0(sp)
 1004e28:	2500b804 	addi	r20,r4,736
 1004e2c:	a0002326 	beq	r20,zero,1004ebc <_fwalk+0xbc>
 1004e30:	282b883a 	mov	r21,r5
 1004e34:	002f883a 	mov	r23,zero
 1004e38:	05800044 	movi	r22,1
 1004e3c:	04ffffc4 	movi	r19,-1
 1004e40:	a4400117 	ldw	r17,4(r20)
 1004e44:	a4800217 	ldw	r18,8(r20)
 1004e48:	8c7fffc4 	addi	r17,r17,-1
 1004e4c:	88000d16 	blt	r17,zero,1004e84 <_fwalk+0x84>
 1004e50:	94000304 	addi	r16,r18,12
 1004e54:	94800384 	addi	r18,r18,14
 1004e58:	80c0000b 	ldhu	r3,0(r16)
 1004e5c:	8c7fffc4 	addi	r17,r17,-1
 1004e60:	813ffd04 	addi	r4,r16,-12
 1004e64:	b0c0042e 	bgeu	r22,r3,1004e78 <_fwalk+0x78>
 1004e68:	90c0000f 	ldh	r3,0(r18)
 1004e6c:	1cc00226 	beq	r3,r19,1004e78 <_fwalk+0x78>
 1004e70:	a83ee83a 	callr	r21
 1004e74:	b8aeb03a 	or	r23,r23,r2
 1004e78:	84001a04 	addi	r16,r16,104
 1004e7c:	94801a04 	addi	r18,r18,104
 1004e80:	8cfff51e 	bne	r17,r19,1004e58 <_fwalk+0x58>
 1004e84:	a5000017 	ldw	r20,0(r20)
 1004e88:	a03fed1e 	bne	r20,zero,1004e40 <_fwalk+0x40>
 1004e8c:	b805883a 	mov	r2,r23
 1004e90:	dfc00817 	ldw	ra,32(sp)
 1004e94:	ddc00717 	ldw	r23,28(sp)
 1004e98:	dd800617 	ldw	r22,24(sp)
 1004e9c:	dd400517 	ldw	r21,20(sp)
 1004ea0:	dd000417 	ldw	r20,16(sp)
 1004ea4:	dcc00317 	ldw	r19,12(sp)
 1004ea8:	dc800217 	ldw	r18,8(sp)
 1004eac:	dc400117 	ldw	r17,4(sp)
 1004eb0:	dc000017 	ldw	r16,0(sp)
 1004eb4:	dec00904 	addi	sp,sp,36
 1004eb8:	f800283a 	ret
 1004ebc:	002f883a 	mov	r23,zero
 1004ec0:	003ff206 	br	1004e8c <_fwalk+0x8c>

01004ec4 <_fwalk_reent>:
 1004ec4:	defff704 	addi	sp,sp,-36
 1004ec8:	dd400515 	stw	r21,20(sp)
 1004ecc:	dfc00815 	stw	ra,32(sp)
 1004ed0:	ddc00715 	stw	r23,28(sp)
 1004ed4:	dd800615 	stw	r22,24(sp)
 1004ed8:	dd000415 	stw	r20,16(sp)
 1004edc:	dcc00315 	stw	r19,12(sp)
 1004ee0:	dc800215 	stw	r18,8(sp)
 1004ee4:	dc400115 	stw	r17,4(sp)
 1004ee8:	dc000015 	stw	r16,0(sp)
 1004eec:	2540b804 	addi	r21,r4,736
 1004ef0:	a8002326 	beq	r21,zero,1004f80 <_fwalk_reent+0xbc>
 1004ef4:	2829883a 	mov	r20,r5
 1004ef8:	202d883a 	mov	r22,r4
 1004efc:	002f883a 	mov	r23,zero
 1004f00:	04c00044 	movi	r19,1
 1004f04:	04bfffc4 	movi	r18,-1
 1004f08:	ac400117 	ldw	r17,4(r21)
 1004f0c:	ac000217 	ldw	r16,8(r21)
 1004f10:	8c7fffc4 	addi	r17,r17,-1
 1004f14:	88000c16 	blt	r17,zero,1004f48 <_fwalk_reent+0x84>
 1004f18:	84000304 	addi	r16,r16,12
 1004f1c:	80c0000b 	ldhu	r3,0(r16)
 1004f20:	8c7fffc4 	addi	r17,r17,-1
 1004f24:	817ffd04 	addi	r5,r16,-12
 1004f28:	98c0052e 	bgeu	r19,r3,1004f40 <_fwalk_reent+0x7c>
 1004f2c:	80c0008f 	ldh	r3,2(r16)
 1004f30:	b009883a 	mov	r4,r22
 1004f34:	1c800226 	beq	r3,r18,1004f40 <_fwalk_reent+0x7c>
 1004f38:	a03ee83a 	callr	r20
 1004f3c:	b8aeb03a 	or	r23,r23,r2
 1004f40:	84001a04 	addi	r16,r16,104
 1004f44:	8cbff51e 	bne	r17,r18,1004f1c <_fwalk_reent+0x58>
 1004f48:	ad400017 	ldw	r21,0(r21)
 1004f4c:	a83fee1e 	bne	r21,zero,1004f08 <_fwalk_reent+0x44>
 1004f50:	b805883a 	mov	r2,r23
 1004f54:	dfc00817 	ldw	ra,32(sp)
 1004f58:	ddc00717 	ldw	r23,28(sp)
 1004f5c:	dd800617 	ldw	r22,24(sp)
 1004f60:	dd400517 	ldw	r21,20(sp)
 1004f64:	dd000417 	ldw	r20,16(sp)
 1004f68:	dcc00317 	ldw	r19,12(sp)
 1004f6c:	dc800217 	ldw	r18,8(sp)
 1004f70:	dc400117 	ldw	r17,4(sp)
 1004f74:	dc000017 	ldw	r16,0(sp)
 1004f78:	dec00904 	addi	sp,sp,36
 1004f7c:	f800283a 	ret
 1004f80:	002f883a 	mov	r23,zero
 1004f84:	003ff206 	br	1004f50 <_fwalk_reent+0x8c>

01004f88 <_setlocale_r>:
 1004f88:	30001b26 	beq	r6,zero,1004ff8 <_setlocale_r+0x70>
 1004f8c:	01404074 	movhi	r5,257
 1004f90:	defffe04 	addi	sp,sp,-8
 1004f94:	297b6e04 	addi	r5,r5,-4680
 1004f98:	3009883a 	mov	r4,r6
 1004f9c:	dc000015 	stw	r16,0(sp)
 1004fa0:	dfc00115 	stw	ra,4(sp)
 1004fa4:	3021883a 	mov	r16,r6
 1004fa8:	10075740 	call	1007574 <strcmp>
 1004fac:	1000061e 	bne	r2,zero,1004fc8 <_setlocale_r+0x40>
 1004fb0:	00804074 	movhi	r2,257
 1004fb4:	10bb6d04 	addi	r2,r2,-4684
 1004fb8:	dfc00117 	ldw	ra,4(sp)
 1004fbc:	dc000017 	ldw	r16,0(sp)
 1004fc0:	dec00204 	addi	sp,sp,8
 1004fc4:	f800283a 	ret
 1004fc8:	01404074 	movhi	r5,257
 1004fcc:	297b6d04 	addi	r5,r5,-4684
 1004fd0:	8009883a 	mov	r4,r16
 1004fd4:	10075740 	call	1007574 <strcmp>
 1004fd8:	103ff526 	beq	r2,zero,1004fb0 <_setlocale_r+0x28>
 1004fdc:	01404074 	movhi	r5,257
 1004fe0:	297b5804 	addi	r5,r5,-4768
 1004fe4:	8009883a 	mov	r4,r16
 1004fe8:	10075740 	call	1007574 <strcmp>
 1004fec:	103ff026 	beq	r2,zero,1004fb0 <_setlocale_r+0x28>
 1004ff0:	0005883a 	mov	r2,zero
 1004ff4:	003ff006 	br	1004fb8 <_setlocale_r+0x30>
 1004ff8:	00804074 	movhi	r2,257
 1004ffc:	10bb6d04 	addi	r2,r2,-4684
 1005000:	f800283a 	ret

01005004 <__locale_charset>:
 1005004:	00804074 	movhi	r2,257
 1005008:	10bd1e04 	addi	r2,r2,-2952
 100500c:	f800283a 	ret

01005010 <__locale_mb_cur_max>:
 1005010:	00804074 	movhi	r2,257
 1005014:	1082ba04 	addi	r2,r2,2792
 1005018:	10800017 	ldw	r2,0(r2)
 100501c:	f800283a 	ret

01005020 <__locale_msgcharset>:
 1005020:	00804074 	movhi	r2,257
 1005024:	10bd1604 	addi	r2,r2,-2984
 1005028:	f800283a 	ret

0100502c <__locale_cjk_lang>:
 100502c:	0005883a 	mov	r2,zero
 1005030:	f800283a 	ret

01005034 <_localeconv_r>:
 1005034:	00804074 	movhi	r2,257
 1005038:	10bd2604 	addi	r2,r2,-2920
 100503c:	f800283a 	ret

01005040 <setlocale>:
 1005040:	00c04074 	movhi	r3,257
 1005044:	18c2b904 	addi	r3,r3,2788
 1005048:	2005883a 	mov	r2,r4
 100504c:	19000017 	ldw	r4,0(r3)
 1005050:	280d883a 	mov	r6,r5
 1005054:	100b883a 	mov	r5,r2
 1005058:	1004f881 	jmpi	1004f88 <_setlocale_r>

0100505c <localeconv>:
 100505c:	00804074 	movhi	r2,257
 1005060:	10bd2604 	addi	r2,r2,-2920
 1005064:	f800283a 	ret

01005068 <__smakebuf_r>:
 1005068:	2880030b 	ldhu	r2,12(r5)
 100506c:	10c0008c 	andi	r3,r2,2
 1005070:	1800401e 	bne	r3,zero,1005174 <__smakebuf_r+0x10c>
 1005074:	deffec04 	addi	sp,sp,-80
 1005078:	dc000f15 	stw	r16,60(sp)
 100507c:	2821883a 	mov	r16,r5
 1005080:	2940038f 	ldh	r5,14(r5)
 1005084:	dc401015 	stw	r17,64(sp)
 1005088:	dfc01315 	stw	ra,76(sp)
 100508c:	dcc01215 	stw	r19,72(sp)
 1005090:	dc801115 	stw	r18,68(sp)
 1005094:	2023883a 	mov	r17,r4
 1005098:	28001b16 	blt	r5,zero,1005108 <__smakebuf_r+0xa0>
 100509c:	d80d883a 	mov	r6,sp
 10050a0:	1008f340 	call	1008f34 <_fstat_r>
 10050a4:	10001716 	blt	r2,zero,1005104 <__smakebuf_r+0x9c>
 10050a8:	d8800117 	ldw	r2,4(sp)
 10050ac:	00e00014 	movui	r3,32768
 10050b0:	10bc000c 	andi	r2,r2,61440
 10050b4:	10c03726 	beq	r2,r3,1005194 <__smakebuf_r+0x12c>
 10050b8:	80c0030b 	ldhu	r3,12(r16)
 10050bc:	18c20014 	ori	r3,r3,2048
 10050c0:	80c0030d 	sth	r3,12(r16)
 10050c4:	00c80004 	movi	r3,8192
 10050c8:	10c03c1e 	bne	r2,r3,10051bc <__smakebuf_r+0x154>
 10050cc:	8140038f 	ldh	r5,14(r16)
 10050d0:	8809883a 	mov	r4,r17
 10050d4:	1008f8c0 	call	1008f8c <_isatty_r>
 10050d8:	10004e26 	beq	r2,zero,1005214 <__smakebuf_r+0x1ac>
 10050dc:	8080030b 	ldhu	r2,12(r16)
 10050e0:	04c00044 	movi	r19,1
 10050e4:	80c010c4 	addi	r3,r16,67
 10050e8:	14c4b03a 	or	r2,r2,r19
 10050ec:	8080030d 	sth	r2,12(r16)
 10050f0:	80c00015 	stw	r3,0(r16)
 10050f4:	80c00415 	stw	r3,16(r16)
 10050f8:	84c00515 	stw	r19,20(r16)
 10050fc:	04810004 	movi	r18,1024
 1005100:	00000706 	br	1005120 <__smakebuf_r+0xb8>
 1005104:	8080030b 	ldhu	r2,12(r16)
 1005108:	10c0200c 	andi	r3,r2,128
 100510c:	18001f1e 	bne	r3,zero,100518c <__smakebuf_r+0x124>
 1005110:	04810004 	movi	r18,1024
 1005114:	10820014 	ori	r2,r2,2048
 1005118:	8080030d 	sth	r2,12(r16)
 100511c:	0027883a 	mov	r19,zero
 1005120:	8809883a 	mov	r4,r17
 1005124:	900b883a 	mov	r5,r18
 1005128:	10052200 	call	1005220 <_malloc_r>
 100512c:	10002e26 	beq	r2,zero,10051e8 <__smakebuf_r+0x180>
 1005130:	80c0030b 	ldhu	r3,12(r16)
 1005134:	01004034 	movhi	r4,256
 1005138:	21106704 	addi	r4,r4,16796
 100513c:	89000f15 	stw	r4,60(r17)
 1005140:	18c02014 	ori	r3,r3,128
 1005144:	80c0030d 	sth	r3,12(r16)
 1005148:	80800015 	stw	r2,0(r16)
 100514c:	80800415 	stw	r2,16(r16)
 1005150:	84800515 	stw	r18,20(r16)
 1005154:	98001c1e 	bne	r19,zero,10051c8 <__smakebuf_r+0x160>
 1005158:	dfc01317 	ldw	ra,76(sp)
 100515c:	dcc01217 	ldw	r19,72(sp)
 1005160:	dc801117 	ldw	r18,68(sp)
 1005164:	dc401017 	ldw	r17,64(sp)
 1005168:	dc000f17 	ldw	r16,60(sp)
 100516c:	dec01404 	addi	sp,sp,80
 1005170:	f800283a 	ret
 1005174:	288010c4 	addi	r2,r5,67
 1005178:	28800015 	stw	r2,0(r5)
 100517c:	28800415 	stw	r2,16(r5)
 1005180:	00800044 	movi	r2,1
 1005184:	28800515 	stw	r2,20(r5)
 1005188:	f800283a 	ret
 100518c:	04801004 	movi	r18,64
 1005190:	003fe006 	br	1005114 <__smakebuf_r+0xac>
 1005194:	81000a17 	ldw	r4,40(r16)
 1005198:	00c04034 	movhi	r3,256
 100519c:	18dd4404 	addi	r3,r3,29968
 10051a0:	20ffc51e 	bne	r4,r3,10050b8 <__smakebuf_r+0x50>
 10051a4:	80c0030b 	ldhu	r3,12(r16)
 10051a8:	01010004 	movi	r4,1024
 10051ac:	81001315 	stw	r4,76(r16)
 10051b0:	1906b03a 	or	r3,r3,r4
 10051b4:	80c0030d 	sth	r3,12(r16)
 10051b8:	003fc206 	br	10050c4 <__smakebuf_r+0x5c>
 10051bc:	0027883a 	mov	r19,zero
 10051c0:	04810004 	movi	r18,1024
 10051c4:	003fd606 	br	1005120 <__smakebuf_r+0xb8>
 10051c8:	8140038f 	ldh	r5,14(r16)
 10051cc:	8809883a 	mov	r4,r17
 10051d0:	1008f8c0 	call	1008f8c <_isatty_r>
 10051d4:	103fe026 	beq	r2,zero,1005158 <__smakebuf_r+0xf0>
 10051d8:	8080030b 	ldhu	r2,12(r16)
 10051dc:	10800054 	ori	r2,r2,1
 10051e0:	8080030d 	sth	r2,12(r16)
 10051e4:	003fdc06 	br	1005158 <__smakebuf_r+0xf0>
 10051e8:	8080030b 	ldhu	r2,12(r16)
 10051ec:	10c0800c 	andi	r3,r2,512
 10051f0:	183fd91e 	bne	r3,zero,1005158 <__smakebuf_r+0xf0>
 10051f4:	10800094 	ori	r2,r2,2
 10051f8:	80c010c4 	addi	r3,r16,67
 10051fc:	8080030d 	sth	r2,12(r16)
 1005200:	00800044 	movi	r2,1
 1005204:	80c00015 	stw	r3,0(r16)
 1005208:	80c00415 	stw	r3,16(r16)
 100520c:	80800515 	stw	r2,20(r16)
 1005210:	003fd106 	br	1005158 <__smakebuf_r+0xf0>
 1005214:	04c00044 	movi	r19,1
 1005218:	04810004 	movi	r18,1024
 100521c:	003fc006 	br	1005120 <__smakebuf_r+0xb8>

01005220 <_malloc_r>:
 1005220:	defff504 	addi	sp,sp,-44
 1005224:	dc800315 	stw	r18,12(sp)
 1005228:	dfc00a15 	stw	ra,40(sp)
 100522c:	df000915 	stw	fp,36(sp)
 1005230:	ddc00815 	stw	r23,32(sp)
 1005234:	dd800715 	stw	r22,28(sp)
 1005238:	dd400615 	stw	r21,24(sp)
 100523c:	dd000515 	stw	r20,20(sp)
 1005240:	dcc00415 	stw	r19,16(sp)
 1005244:	dc400215 	stw	r17,8(sp)
 1005248:	dc000115 	stw	r16,4(sp)
 100524c:	288002c4 	addi	r2,r5,11
 1005250:	00c00584 	movi	r3,22
 1005254:	2025883a 	mov	r18,r4
 1005258:	18802a2e 	bgeu	r3,r2,1005304 <_malloc_r+0xe4>
 100525c:	047ffe04 	movi	r17,-8
 1005260:	1462703a 	and	r17,r2,r17
 1005264:	88009e16 	blt	r17,zero,10054e0 <_malloc_r+0x2c0>
 1005268:	89409d36 	bltu	r17,r5,10054e0 <_malloc_r+0x2c0>
 100526c:	100cc100 	call	100cc10 <__malloc_lock>
 1005270:	00807dc4 	movi	r2,503
 1005274:	14402736 	bltu	r2,r17,1005314 <_malloc_r+0xf4>
 1005278:	8806d0fa 	srli	r3,r17,3
 100527c:	04c04074 	movhi	r19,257
 1005280:	9cfd3404 	addi	r19,r19,-2864
 1005284:	18c5883a 	add	r2,r3,r3
 1005288:	1085883a 	add	r2,r2,r2
 100528c:	1085883a 	add	r2,r2,r2
 1005290:	9885883a 	add	r2,r19,r2
 1005294:	14000317 	ldw	r16,12(r2)
 1005298:	80814a26 	beq	r16,r2,10057c4 <_malloc_r+0x5a4>
 100529c:	80c00117 	ldw	r3,4(r16)
 10052a0:	81000317 	ldw	r4,12(r16)
 10052a4:	00bfff04 	movi	r2,-4
 10052a8:	1884703a 	and	r2,r3,r2
 10052ac:	81400217 	ldw	r5,8(r16)
 10052b0:	8085883a 	add	r2,r16,r2
 10052b4:	10c00117 	ldw	r3,4(r2)
 10052b8:	29000315 	stw	r4,12(r5)
 10052bc:	21400215 	stw	r5,8(r4)
 10052c0:	18c00054 	ori	r3,r3,1
 10052c4:	10c00115 	stw	r3,4(r2)
 10052c8:	9009883a 	mov	r4,r18
 10052cc:	100cc300 	call	100cc30 <__malloc_unlock>
 10052d0:	80800204 	addi	r2,r16,8
 10052d4:	dfc00a17 	ldw	ra,40(sp)
 10052d8:	df000917 	ldw	fp,36(sp)
 10052dc:	ddc00817 	ldw	r23,32(sp)
 10052e0:	dd800717 	ldw	r22,28(sp)
 10052e4:	dd400617 	ldw	r21,24(sp)
 10052e8:	dd000517 	ldw	r20,20(sp)
 10052ec:	dcc00417 	ldw	r19,16(sp)
 10052f0:	dc800317 	ldw	r18,12(sp)
 10052f4:	dc400217 	ldw	r17,8(sp)
 10052f8:	dc000117 	ldw	r16,4(sp)
 10052fc:	dec00b04 	addi	sp,sp,44
 1005300:	f800283a 	ret
 1005304:	04400404 	movi	r17,16
 1005308:	89407536 	bltu	r17,r5,10054e0 <_malloc_r+0x2c0>
 100530c:	100cc100 	call	100cc10 <__malloc_lock>
 1005310:	003fd906 	br	1005278 <_malloc_r+0x58>
 1005314:	8806d27a 	srli	r3,r17,9
 1005318:	18007526 	beq	r3,zero,10054f0 <_malloc_r+0x2d0>
 100531c:	00800104 	movi	r2,4
 1005320:	10c0ef36 	bltu	r2,r3,10056e0 <_malloc_r+0x4c0>
 1005324:	8806d1ba 	srli	r3,r17,6
 1005328:	19c00e04 	addi	r7,r3,56
 100532c:	39cb883a 	add	r5,r7,r7
 1005330:	04c04074 	movhi	r19,257
 1005334:	294b883a 	add	r5,r5,r5
 1005338:	9cfd3404 	addi	r19,r19,-2864
 100533c:	294b883a 	add	r5,r5,r5
 1005340:	994b883a 	add	r5,r19,r5
 1005344:	2c000317 	ldw	r16,12(r5)
 1005348:	2c000e26 	beq	r5,r16,1005384 <_malloc_r+0x164>
 100534c:	80800117 	ldw	r2,4(r16)
 1005350:	01bfff04 	movi	r6,-4
 1005354:	010003c4 	movi	r4,15
 1005358:	1184703a 	and	r2,r2,r6
 100535c:	1447c83a 	sub	r3,r2,r17
 1005360:	20c00716 	blt	r4,r3,1005380 <_malloc_r+0x160>
 1005364:	1800650e 	bge	r3,zero,10054fc <_malloc_r+0x2dc>
 1005368:	84000317 	ldw	r16,12(r16)
 100536c:	2c000526 	beq	r5,r16,1005384 <_malloc_r+0x164>
 1005370:	80800117 	ldw	r2,4(r16)
 1005374:	1184703a 	and	r2,r2,r6
 1005378:	1447c83a 	sub	r3,r2,r17
 100537c:	20fff90e 	bge	r4,r3,1005364 <_malloc_r+0x144>
 1005380:	39ffffc4 	addi	r7,r7,-1
 1005384:	38c00044 	addi	r3,r7,1
 1005388:	01804074 	movhi	r6,257
 100538c:	9c000417 	ldw	r16,16(r19)
 1005390:	31bd3404 	addi	r6,r6,-2864
 1005394:	32400204 	addi	r9,r6,8
 1005398:	82410326 	beq	r16,r9,10057a8 <_malloc_r+0x588>
 100539c:	81000117 	ldw	r4,4(r16)
 10053a0:	00bfff04 	movi	r2,-4
 10053a4:	208e703a 	and	r7,r4,r2
 10053a8:	3c45c83a 	sub	r2,r7,r17
 10053ac:	010003c4 	movi	r4,15
 10053b0:	2080ee16 	blt	r4,r2,100576c <_malloc_r+0x54c>
 10053b4:	32400515 	stw	r9,20(r6)
 10053b8:	32400415 	stw	r9,16(r6)
 10053bc:	1000510e 	bge	r2,zero,1005504 <_malloc_r+0x2e4>
 10053c0:	00807fc4 	movi	r2,511
 10053c4:	11c0ce36 	bltu	r2,r7,1005700 <_malloc_r+0x4e0>
 10053c8:	3808d0fa 	srli	r4,r7,3
 10053cc:	01c00044 	movi	r7,1
 10053d0:	30800117 	ldw	r2,4(r6)
 10053d4:	210b883a 	add	r5,r4,r4
 10053d8:	294b883a 	add	r5,r5,r5
 10053dc:	2009d0ba 	srai	r4,r4,2
 10053e0:	294b883a 	add	r5,r5,r5
 10053e4:	298b883a 	add	r5,r5,r6
 10053e8:	2a000217 	ldw	r8,8(r5)
 10053ec:	3908983a 	sll	r4,r7,r4
 10053f0:	81400315 	stw	r5,12(r16)
 10053f4:	82000215 	stw	r8,8(r16)
 10053f8:	2088b03a 	or	r4,r4,r2
 10053fc:	2c000215 	stw	r16,8(r5)
 1005400:	31000115 	stw	r4,4(r6)
 1005404:	44000315 	stw	r16,12(r8)
 1005408:	1805d0ba 	srai	r2,r3,2
 100540c:	01400044 	movi	r5,1
 1005410:	288a983a 	sll	r5,r5,r2
 1005414:	21404336 	bltu	r4,r5,1005524 <_malloc_r+0x304>
 1005418:	2144703a 	and	r2,r4,r5
 100541c:	10000a1e 	bne	r2,zero,1005448 <_malloc_r+0x228>
 1005420:	00bfff04 	movi	r2,-4
 1005424:	294b883a 	add	r5,r5,r5
 1005428:	1886703a 	and	r3,r3,r2
 100542c:	2144703a 	and	r2,r4,r5
 1005430:	18c00104 	addi	r3,r3,4
 1005434:	1000041e 	bne	r2,zero,1005448 <_malloc_r+0x228>
 1005438:	294b883a 	add	r5,r5,r5
 100543c:	2144703a 	and	r2,r4,r5
 1005440:	18c00104 	addi	r3,r3,4
 1005444:	103ffc26 	beq	r2,zero,1005438 <_malloc_r+0x218>
 1005448:	023fff04 	movi	r8,-4
 100544c:	01c003c4 	movi	r7,15
 1005450:	18c5883a 	add	r2,r3,r3
 1005454:	1085883a 	add	r2,r2,r2
 1005458:	1085883a 	add	r2,r2,r2
 100545c:	9895883a 	add	r10,r19,r2
 1005460:	52c00304 	addi	r11,r10,12
 1005464:	1819883a 	mov	r12,r3
 1005468:	5c000017 	ldw	r16,0(r11)
 100546c:	59bffd04 	addi	r6,r11,-12
 1005470:	8180041e 	bne	r16,r6,1005484 <_malloc_r+0x264>
 1005474:	0000ce06 	br	10057b0 <_malloc_r+0x590>
 1005478:	2000d70e 	bge	r4,zero,10057d8 <_malloc_r+0x5b8>
 100547c:	84000317 	ldw	r16,12(r16)
 1005480:	8180cb26 	beq	r16,r6,10057b0 <_malloc_r+0x590>
 1005484:	80800117 	ldw	r2,4(r16)
 1005488:	1204703a 	and	r2,r2,r8
 100548c:	1449c83a 	sub	r4,r2,r17
 1005490:	393ff90e 	bge	r7,r4,1005478 <_malloc_r+0x258>
 1005494:	80800317 	ldw	r2,12(r16)
 1005498:	80c00217 	ldw	r3,8(r16)
 100549c:	89400054 	ori	r5,r17,1
 10054a0:	81400115 	stw	r5,4(r16)
 10054a4:	18800315 	stw	r2,12(r3)
 10054a8:	10c00215 	stw	r3,8(r2)
 10054ac:	8463883a 	add	r17,r16,r17
 10054b0:	9c400515 	stw	r17,20(r19)
 10054b4:	9c400415 	stw	r17,16(r19)
 10054b8:	20800054 	ori	r2,r4,1
 10054bc:	88800115 	stw	r2,4(r17)
 10054c0:	8a400315 	stw	r9,12(r17)
 10054c4:	8a400215 	stw	r9,8(r17)
 10054c8:	8923883a 	add	r17,r17,r4
 10054cc:	89000015 	stw	r4,0(r17)
 10054d0:	9009883a 	mov	r4,r18
 10054d4:	100cc300 	call	100cc30 <__malloc_unlock>
 10054d8:	80800204 	addi	r2,r16,8
 10054dc:	003f7d06 	br	10052d4 <_malloc_r+0xb4>
 10054e0:	00800304 	movi	r2,12
 10054e4:	90800015 	stw	r2,0(r18)
 10054e8:	0005883a 	mov	r2,zero
 10054ec:	003f7906 	br	10052d4 <_malloc_r+0xb4>
 10054f0:	01401f84 	movi	r5,126
 10054f4:	01c00fc4 	movi	r7,63
 10054f8:	003f8d06 	br	1005330 <_malloc_r+0x110>
 10054fc:	81000317 	ldw	r4,12(r16)
 1005500:	003f6a06 	br	10052ac <_malloc_r+0x8c>
 1005504:	81c5883a 	add	r2,r16,r7
 1005508:	10c00117 	ldw	r3,4(r2)
 100550c:	9009883a 	mov	r4,r18
 1005510:	18c00054 	ori	r3,r3,1
 1005514:	10c00115 	stw	r3,4(r2)
 1005518:	100cc300 	call	100cc30 <__malloc_unlock>
 100551c:	80800204 	addi	r2,r16,8
 1005520:	003f6c06 	br	10052d4 <_malloc_r+0xb4>
 1005524:	9c000217 	ldw	r16,8(r19)
 1005528:	00bfff04 	movi	r2,-4
 100552c:	85800117 	ldw	r22,4(r16)
 1005530:	b0ac703a 	and	r22,r22,r2
 1005534:	b4400336 	bltu	r22,r17,1005544 <_malloc_r+0x324>
 1005538:	b445c83a 	sub	r2,r22,r17
 100553c:	00c003c4 	movi	r3,15
 1005540:	18805d16 	blt	r3,r2,10056b8 <_malloc_r+0x498>
 1005544:	05c04074 	movhi	r23,257
 1005548:	00804074 	movhi	r2,257
 100554c:	bdc2bb04 	addi	r23,r23,2796
 1005550:	10898804 	addi	r2,r2,9760
 1005554:	15400017 	ldw	r21,0(r2)
 1005558:	b9000017 	ldw	r4,0(r23)
 100555c:	00ffffc4 	movi	r3,-1
 1005560:	858d883a 	add	r6,r16,r22
 1005564:	8d6b883a 	add	r21,r17,r21
 1005568:	20c0e426 	beq	r4,r3,10058fc <_malloc_r+0x6dc>
 100556c:	ad4403c4 	addi	r21,r21,4111
 1005570:	00fc0004 	movi	r3,-4096
 1005574:	a8ea703a 	and	r21,r21,r3
 1005578:	9009883a 	mov	r4,r18
 100557c:	a80b883a 	mov	r5,r21
 1005580:	d9800015 	stw	r6,0(sp)
 1005584:	10073e40 	call	10073e4 <_sbrk_r>
 1005588:	00ffffc4 	movi	r3,-1
 100558c:	1029883a 	mov	r20,r2
 1005590:	d9800017 	ldw	r6,0(sp)
 1005594:	10c0a426 	beq	r2,r3,1005828 <_malloc_r+0x608>
 1005598:	1180a236 	bltu	r2,r6,1005824 <_malloc_r+0x604>
 100559c:	07004074 	movhi	fp,257
 10055a0:	e7099004 	addi	fp,fp,9792
 10055a4:	e0c00017 	ldw	r3,0(fp)
 10055a8:	a8c7883a 	add	r3,r21,r3
 10055ac:	e0c00015 	stw	r3,0(fp)
 10055b0:	3500da26 	beq	r6,r20,100591c <_malloc_r+0x6fc>
 10055b4:	b9000017 	ldw	r4,0(r23)
 10055b8:	00bfffc4 	movi	r2,-1
 10055bc:	2080e426 	beq	r4,r2,1005950 <_malloc_r+0x730>
 10055c0:	a185c83a 	sub	r2,r20,r6
 10055c4:	1885883a 	add	r2,r3,r2
 10055c8:	e0800015 	stw	r2,0(fp)
 10055cc:	a0c001cc 	andi	r3,r20,7
 10055d0:	1800b526 	beq	r3,zero,10058a8 <_malloc_r+0x688>
 10055d4:	a0e9c83a 	sub	r20,r20,r3
 10055d8:	00840204 	movi	r2,4104
 10055dc:	a5000204 	addi	r20,r20,8
 10055e0:	10c7c83a 	sub	r3,r2,r3
 10055e4:	a545883a 	add	r2,r20,r21
 10055e8:	1083ffcc 	andi	r2,r2,4095
 10055ec:	18abc83a 	sub	r21,r3,r2
 10055f0:	9009883a 	mov	r4,r18
 10055f4:	a80b883a 	mov	r5,r21
 10055f8:	10073e40 	call	10073e4 <_sbrk_r>
 10055fc:	00ffffc4 	movi	r3,-1
 1005600:	10c0d026 	beq	r2,r3,1005944 <_malloc_r+0x724>
 1005604:	1507c83a 	sub	r3,r2,r20
 1005608:	a8c7883a 	add	r3,r21,r3
 100560c:	18c00054 	ori	r3,r3,1
 1005610:	e0800017 	ldw	r2,0(fp)
 1005614:	9d000215 	stw	r20,8(r19)
 1005618:	a0c00115 	stw	r3,4(r20)
 100561c:	a887883a 	add	r3,r21,r2
 1005620:	e0c00015 	stw	r3,0(fp)
 1005624:	84c00e26 	beq	r16,r19,1005660 <_malloc_r+0x440>
 1005628:	018003c4 	movi	r6,15
 100562c:	3580a02e 	bgeu	r6,r22,10058b0 <_malloc_r+0x690>
 1005630:	81400117 	ldw	r5,4(r16)
 1005634:	013ffe04 	movi	r4,-8
 1005638:	b0bffd04 	addi	r2,r22,-12
 100563c:	1104703a 	and	r2,r2,r4
 1005640:	2900004c 	andi	r4,r5,1
 1005644:	1108b03a 	or	r4,r2,r4
 1005648:	81000115 	stw	r4,4(r16)
 100564c:	01400144 	movi	r5,5
 1005650:	8089883a 	add	r4,r16,r2
 1005654:	21400115 	stw	r5,4(r4)
 1005658:	21400215 	stw	r5,8(r4)
 100565c:	3080c036 	bltu	r6,r2,1005960 <_malloc_r+0x740>
 1005660:	00804074 	movhi	r2,257
 1005664:	10898704 	addi	r2,r2,9756
 1005668:	11000017 	ldw	r4,0(r2)
 100566c:	20c0012e 	bgeu	r4,r3,1005674 <_malloc_r+0x454>
 1005670:	10c00015 	stw	r3,0(r2)
 1005674:	00804074 	movhi	r2,257
 1005678:	10898604 	addi	r2,r2,9752
 100567c:	11000017 	ldw	r4,0(r2)
 1005680:	9c000217 	ldw	r16,8(r19)
 1005684:	20c0012e 	bgeu	r4,r3,100568c <_malloc_r+0x46c>
 1005688:	10c00015 	stw	r3,0(r2)
 100568c:	80c00117 	ldw	r3,4(r16)
 1005690:	00bfff04 	movi	r2,-4
 1005694:	1886703a 	and	r3,r3,r2
 1005698:	1c45c83a 	sub	r2,r3,r17
 100569c:	1c400236 	bltu	r3,r17,10056a8 <_malloc_r+0x488>
 10056a0:	00c003c4 	movi	r3,15
 10056a4:	18800416 	blt	r3,r2,10056b8 <_malloc_r+0x498>
 10056a8:	9009883a 	mov	r4,r18
 10056ac:	100cc300 	call	100cc30 <__malloc_unlock>
 10056b0:	0005883a 	mov	r2,zero
 10056b4:	003f0706 	br	10052d4 <_malloc_r+0xb4>
 10056b8:	88c00054 	ori	r3,r17,1
 10056bc:	80c00115 	stw	r3,4(r16)
 10056c0:	8463883a 	add	r17,r16,r17
 10056c4:	10800054 	ori	r2,r2,1
 10056c8:	9c400215 	stw	r17,8(r19)
 10056cc:	88800115 	stw	r2,4(r17)
 10056d0:	9009883a 	mov	r4,r18
 10056d4:	100cc300 	call	100cc30 <__malloc_unlock>
 10056d8:	80800204 	addi	r2,r16,8
 10056dc:	003efd06 	br	10052d4 <_malloc_r+0xb4>
 10056e0:	00800504 	movi	r2,20
 10056e4:	10c0482e 	bgeu	r2,r3,1005808 <_malloc_r+0x5e8>
 10056e8:	00801504 	movi	r2,84
 10056ec:	10c06836 	bltu	r2,r3,1005890 <_malloc_r+0x670>
 10056f0:	8806d33a 	srli	r3,r17,12
 10056f4:	19c01b84 	addi	r7,r3,110
 10056f8:	39cb883a 	add	r5,r7,r7
 10056fc:	003f0c06 	br	1005330 <_malloc_r+0x110>
 1005700:	3804d27a 	srli	r2,r7,9
 1005704:	01000104 	movi	r4,4
 1005708:	2080422e 	bgeu	r4,r2,1005814 <_malloc_r+0x5f4>
 100570c:	01000504 	movi	r4,20
 1005710:	20807c36 	bltu	r4,r2,1005904 <_malloc_r+0x6e4>
 1005714:	110016c4 	addi	r4,r2,91
 1005718:	210b883a 	add	r5,r4,r4
 100571c:	294b883a 	add	r5,r5,r5
 1005720:	294b883a 	add	r5,r5,r5
 1005724:	994b883a 	add	r5,r19,r5
 1005728:	28800217 	ldw	r2,8(r5)
 100572c:	02004074 	movhi	r8,257
 1005730:	423d3404 	addi	r8,r8,-2864
 1005734:	11406326 	beq	r2,r5,10058c4 <_malloc_r+0x6a4>
 1005738:	01bfff04 	movi	r6,-4
 100573c:	11000117 	ldw	r4,4(r2)
 1005740:	2188703a 	and	r4,r4,r6
 1005744:	3900022e 	bgeu	r7,r4,1005750 <_malloc_r+0x530>
 1005748:	10800217 	ldw	r2,8(r2)
 100574c:	28bffb1e 	bne	r5,r2,100573c <_malloc_r+0x51c>
 1005750:	11800317 	ldw	r6,12(r2)
 1005754:	99000117 	ldw	r4,4(r19)
 1005758:	81800315 	stw	r6,12(r16)
 100575c:	80800215 	stw	r2,8(r16)
 1005760:	34000215 	stw	r16,8(r6)
 1005764:	14000315 	stw	r16,12(r2)
 1005768:	003f2706 	br	1005408 <_malloc_r+0x1e8>
 100576c:	88c00054 	ori	r3,r17,1
 1005770:	80c00115 	stw	r3,4(r16)
 1005774:	8463883a 	add	r17,r16,r17
 1005778:	34400515 	stw	r17,20(r6)
 100577c:	34400415 	stw	r17,16(r6)
 1005780:	10c00054 	ori	r3,r2,1
 1005784:	8a400315 	stw	r9,12(r17)
 1005788:	8a400215 	stw	r9,8(r17)
 100578c:	88c00115 	stw	r3,4(r17)
 1005790:	88a3883a 	add	r17,r17,r2
 1005794:	88800015 	stw	r2,0(r17)
 1005798:	9009883a 	mov	r4,r18
 100579c:	100cc300 	call	100cc30 <__malloc_unlock>
 10057a0:	80800204 	addi	r2,r16,8
 10057a4:	003ecb06 	br	10052d4 <_malloc_r+0xb4>
 10057a8:	31000117 	ldw	r4,4(r6)
 10057ac:	003f1606 	br	1005408 <_malloc_r+0x1e8>
 10057b0:	63000044 	addi	r12,r12,1
 10057b4:	608000cc 	andi	r2,r12,3
 10057b8:	5ac00204 	addi	r11,r11,8
 10057bc:	103f2a1e 	bne	r2,zero,1005468 <_malloc_r+0x248>
 10057c0:	00002106 	br	1005848 <_malloc_r+0x628>
 10057c4:	80800204 	addi	r2,r16,8
 10057c8:	84000517 	ldw	r16,20(r16)
 10057cc:	143eb31e 	bne	r2,r16,100529c <_malloc_r+0x7c>
 10057d0:	18c00084 	addi	r3,r3,2
 10057d4:	003eec06 	br	1005388 <_malloc_r+0x168>
 10057d8:	8085883a 	add	r2,r16,r2
 10057dc:	10c00117 	ldw	r3,4(r2)
 10057e0:	81000317 	ldw	r4,12(r16)
 10057e4:	81400217 	ldw	r5,8(r16)
 10057e8:	18c00054 	ori	r3,r3,1
 10057ec:	10c00115 	stw	r3,4(r2)
 10057f0:	29000315 	stw	r4,12(r5)
 10057f4:	21400215 	stw	r5,8(r4)
 10057f8:	9009883a 	mov	r4,r18
 10057fc:	100cc300 	call	100cc30 <__malloc_unlock>
 1005800:	80800204 	addi	r2,r16,8
 1005804:	003eb306 	br	10052d4 <_malloc_r+0xb4>
 1005808:	19c016c4 	addi	r7,r3,91
 100580c:	39cb883a 	add	r5,r7,r7
 1005810:	003ec706 	br	1005330 <_malloc_r+0x110>
 1005814:	3804d1ba 	srli	r2,r7,6
 1005818:	11000e04 	addi	r4,r2,56
 100581c:	210b883a 	add	r5,r4,r4
 1005820:	003fbe06 	br	100571c <_malloc_r+0x4fc>
 1005824:	84ff5d26 	beq	r16,r19,100559c <_malloc_r+0x37c>
 1005828:	9c000217 	ldw	r16,8(r19)
 100582c:	00bfff04 	movi	r2,-4
 1005830:	80c00117 	ldw	r3,4(r16)
 1005834:	1886703a 	and	r3,r3,r2
 1005838:	003f9706 	br	1005698 <_malloc_r+0x478>
 100583c:	52800017 	ldw	r10,0(r10)
 1005840:	18ffffc4 	addi	r3,r3,-1
 1005844:	50805c1e 	bne	r10,r2,10059b8 <_malloc_r+0x798>
 1005848:	190000cc 	andi	r4,r3,3
 100584c:	50bffe04 	addi	r2,r10,-8
 1005850:	203ffa1e 	bne	r4,zero,100583c <_malloc_r+0x61c>
 1005854:	98800117 	ldw	r2,4(r19)
 1005858:	0146303a 	nor	r3,zero,r5
 100585c:	1884703a 	and	r2,r3,r2
 1005860:	98800115 	stw	r2,4(r19)
 1005864:	294b883a 	add	r5,r5,r5
 1005868:	117f2e36 	bltu	r2,r5,1005524 <_malloc_r+0x304>
 100586c:	283f2d26 	beq	r5,zero,1005524 <_malloc_r+0x304>
 1005870:	1146703a 	and	r3,r2,r5
 1005874:	1800521e 	bne	r3,zero,10059c0 <_malloc_r+0x7a0>
 1005878:	6007883a 	mov	r3,r12
 100587c:	294b883a 	add	r5,r5,r5
 1005880:	1148703a 	and	r4,r2,r5
 1005884:	18c00104 	addi	r3,r3,4
 1005888:	203ffc26 	beq	r4,zero,100587c <_malloc_r+0x65c>
 100588c:	003ef006 	br	1005450 <_malloc_r+0x230>
 1005890:	00805504 	movi	r2,340
 1005894:	10c01336 	bltu	r2,r3,10058e4 <_malloc_r+0x6c4>
 1005898:	8806d3fa 	srli	r3,r17,15
 100589c:	19c01dc4 	addi	r7,r3,119
 10058a0:	39cb883a 	add	r5,r7,r7
 10058a4:	003ea206 	br	1005330 <_malloc_r+0x110>
 10058a8:	00c40004 	movi	r3,4096
 10058ac:	003f4d06 	br	10055e4 <_malloc_r+0x3c4>
 10058b0:	00800044 	movi	r2,1
 10058b4:	a0800115 	stw	r2,4(r20)
 10058b8:	a021883a 	mov	r16,r20
 10058bc:	0007883a 	mov	r3,zero
 10058c0:	003f7506 	br	1005698 <_malloc_r+0x478>
 10058c4:	200bd0ba 	srai	r5,r4,2
 10058c8:	01800044 	movi	r6,1
 10058cc:	41000117 	ldw	r4,4(r8)
 10058d0:	314a983a 	sll	r5,r6,r5
 10058d4:	100d883a 	mov	r6,r2
 10058d8:	2908b03a 	or	r4,r5,r4
 10058dc:	41000115 	stw	r4,4(r8)
 10058e0:	003f9d06 	br	1005758 <_malloc_r+0x538>
 10058e4:	00815504 	movi	r2,1364
 10058e8:	10c01336 	bltu	r2,r3,1005938 <_malloc_r+0x718>
 10058ec:	8806d4ba 	srli	r3,r17,18
 10058f0:	19c01f04 	addi	r7,r3,124
 10058f4:	39cb883a 	add	r5,r7,r7
 10058f8:	003e8d06 	br	1005330 <_malloc_r+0x110>
 10058fc:	ad400404 	addi	r21,r21,16
 1005900:	003f1d06 	br	1005578 <_malloc_r+0x358>
 1005904:	01001504 	movi	r4,84
 1005908:	20801c36 	bltu	r4,r2,100597c <_malloc_r+0x75c>
 100590c:	3804d33a 	srli	r2,r7,12
 1005910:	11001b84 	addi	r4,r2,110
 1005914:	210b883a 	add	r5,r4,r4
 1005918:	003f8006 	br	100571c <_malloc_r+0x4fc>
 100591c:	3083ffcc 	andi	r2,r6,4095
 1005920:	103f241e 	bne	r2,zero,10055b4 <_malloc_r+0x394>
 1005924:	99000217 	ldw	r4,8(r19)
 1005928:	ad85883a 	add	r2,r21,r22
 100592c:	10800054 	ori	r2,r2,1
 1005930:	20800115 	stw	r2,4(r4)
 1005934:	003f4a06 	br	1005660 <_malloc_r+0x440>
 1005938:	01403f04 	movi	r5,252
 100593c:	01c01f84 	movi	r7,126
 1005940:	003e7b06 	br	1005330 <_malloc_r+0x110>
 1005944:	00c00044 	movi	r3,1
 1005948:	002b883a 	mov	r21,zero
 100594c:	003f3006 	br	1005610 <_malloc_r+0x3f0>
 1005950:	00804074 	movhi	r2,257
 1005954:	1082bb04 	addi	r2,r2,2796
 1005958:	15000015 	stw	r20,0(r2)
 100595c:	003f1b06 	br	10055cc <_malloc_r+0x3ac>
 1005960:	9009883a 	mov	r4,r18
 1005964:	81400204 	addi	r5,r16,8
 1005968:	10046500 	call	1004650 <_free_r>
 100596c:	00804074 	movhi	r2,257
 1005970:	10899004 	addi	r2,r2,9792
 1005974:	10c00017 	ldw	r3,0(r2)
 1005978:	003f3906 	br	1005660 <_malloc_r+0x440>
 100597c:	01005504 	movi	r4,340
 1005980:	20800436 	bltu	r4,r2,1005994 <_malloc_r+0x774>
 1005984:	3804d3fa 	srli	r2,r7,15
 1005988:	11001dc4 	addi	r4,r2,119
 100598c:	210b883a 	add	r5,r4,r4
 1005990:	003f6206 	br	100571c <_malloc_r+0x4fc>
 1005994:	01015504 	movi	r4,1364
 1005998:	20800436 	bltu	r4,r2,10059ac <_malloc_r+0x78c>
 100599c:	3804d4ba 	srli	r2,r7,18
 10059a0:	11001f04 	addi	r4,r2,124
 10059a4:	210b883a 	add	r5,r4,r4
 10059a8:	003f5c06 	br	100571c <_malloc_r+0x4fc>
 10059ac:	01403f04 	movi	r5,252
 10059b0:	01001f84 	movi	r4,126
 10059b4:	003f5906 	br	100571c <_malloc_r+0x4fc>
 10059b8:	98800117 	ldw	r2,4(r19)
 10059bc:	003fa906 	br	1005864 <_malloc_r+0x644>
 10059c0:	6007883a 	mov	r3,r12
 10059c4:	003ea206 	br	1005450 <_malloc_r+0x230>

010059c8 <memchr>:
 10059c8:	208000cc 	andi	r2,r4,3
 10059cc:	280f883a 	mov	r7,r5
 10059d0:	10003526 	beq	r2,zero,1005aa8 <memchr+0xe0>
 10059d4:	30bfffc4 	addi	r2,r6,-1
 10059d8:	30001b26 	beq	r6,zero,1005a48 <memchr+0x80>
 10059dc:	21800003 	ldbu	r6,0(r4)
 10059e0:	28c03fcc 	andi	r3,r5,255
 10059e4:	30c01a26 	beq	r6,r3,1005a50 <memchr+0x88>
 10059e8:	180d883a 	mov	r6,r3
 10059ec:	00000406 	br	1005a00 <memchr+0x38>
 10059f0:	10001526 	beq	r2,zero,1005a48 <memchr+0x80>
 10059f4:	20c00003 	ldbu	r3,0(r4)
 10059f8:	10bfffc4 	addi	r2,r2,-1
 10059fc:	19801426 	beq	r3,r6,1005a50 <memchr+0x88>
 1005a00:	21000044 	addi	r4,r4,1
 1005a04:	20c000cc 	andi	r3,r4,3
 1005a08:	183ff91e 	bne	r3,zero,10059f0 <memchr+0x28>
 1005a0c:	024000c4 	movi	r9,3
 1005a10:	48801136 	bltu	r9,r2,1005a58 <memchr+0x90>
 1005a14:	10000c26 	beq	r2,zero,1005a48 <memchr+0x80>
 1005a18:	20c00003 	ldbu	r3,0(r4)
 1005a1c:	29403fcc 	andi	r5,r5,255
 1005a20:	19400b26 	beq	r3,r5,1005a50 <memchr+0x88>
 1005a24:	20c00044 	addi	r3,r4,1
 1005a28:	2085883a 	add	r2,r4,r2
 1005a2c:	39803fcc 	andi	r6,r7,255
 1005a30:	00000306 	br	1005a40 <memchr+0x78>
 1005a34:	18c00044 	addi	r3,r3,1
 1005a38:	197fffc3 	ldbu	r5,-1(r3)
 1005a3c:	29800426 	beq	r5,r6,1005a50 <memchr+0x88>
 1005a40:	1809883a 	mov	r4,r3
 1005a44:	18bffb1e 	bne	r3,r2,1005a34 <memchr+0x6c>
 1005a48:	0005883a 	mov	r2,zero
 1005a4c:	f800283a 	ret
 1005a50:	2005883a 	mov	r2,r4
 1005a54:	f800283a 	ret
 1005a58:	28c03fcc 	andi	r3,r5,255
 1005a5c:	1810923a 	slli	r8,r3,8
 1005a60:	02ffbff4 	movhi	r11,65279
 1005a64:	02a02074 	movhi	r10,32897
 1005a68:	40c6b03a 	or	r3,r8,r3
 1005a6c:	1810943a 	slli	r8,r3,16
 1005a70:	5affbfc4 	addi	r11,r11,-257
 1005a74:	52a02004 	addi	r10,r10,-32640
 1005a78:	40d0b03a 	or	r8,r8,r3
 1005a7c:	20c00017 	ldw	r3,0(r4)
 1005a80:	40c6f03a 	xor	r3,r8,r3
 1005a84:	1acd883a 	add	r6,r3,r11
 1005a88:	00c6303a 	nor	r3,zero,r3
 1005a8c:	30c6703a 	and	r3,r6,r3
 1005a90:	1a86703a 	and	r3,r3,r10
 1005a94:	183fdf1e 	bne	r3,zero,1005a14 <memchr+0x4c>
 1005a98:	10bfff04 	addi	r2,r2,-4
 1005a9c:	21000104 	addi	r4,r4,4
 1005aa0:	48bff636 	bltu	r9,r2,1005a7c <memchr+0xb4>
 1005aa4:	003fdb06 	br	1005a14 <memchr+0x4c>
 1005aa8:	3005883a 	mov	r2,r6
 1005aac:	003fd706 	br	1005a0c <memchr+0x44>

01005ab0 <memcpy>:
 1005ab0:	deffff04 	addi	sp,sp,-4
 1005ab4:	dc000015 	stw	r16,0(sp)
 1005ab8:	00c003c4 	movi	r3,15
 1005abc:	2005883a 	mov	r2,r4
 1005ac0:	1980432e 	bgeu	r3,r6,1005bd0 <memcpy+0x120>
 1005ac4:	2146b03a 	or	r3,r4,r5
 1005ac8:	18c000cc 	andi	r3,r3,3
 1005acc:	1800421e 	bne	r3,zero,1005bd8 <memcpy+0x128>
 1005ad0:	343ffc04 	addi	r16,r6,-16
 1005ad4:	8020d13a 	srli	r16,r16,4
 1005ad8:	28c00104 	addi	r3,r5,4
 1005adc:	23400104 	addi	r13,r4,4
 1005ae0:	801e913a 	slli	r15,r16,4
 1005ae4:	2b000204 	addi	r12,r5,8
 1005ae8:	22c00204 	addi	r11,r4,8
 1005aec:	7bc00504 	addi	r15,r15,20
 1005af0:	2a800304 	addi	r10,r5,12
 1005af4:	22400304 	addi	r9,r4,12
 1005af8:	2bdf883a 	add	r15,r5,r15
 1005afc:	2811883a 	mov	r8,r5
 1005b00:	200f883a 	mov	r7,r4
 1005b04:	41000017 	ldw	r4,0(r8)
 1005b08:	39c00404 	addi	r7,r7,16
 1005b0c:	18c00404 	addi	r3,r3,16
 1005b10:	393ffc15 	stw	r4,-16(r7)
 1005b14:	1bbffc17 	ldw	r14,-16(r3)
 1005b18:	6b400404 	addi	r13,r13,16
 1005b1c:	5ac00404 	addi	r11,r11,16
 1005b20:	6bbffc15 	stw	r14,-16(r13)
 1005b24:	63800017 	ldw	r14,0(r12)
 1005b28:	4a400404 	addi	r9,r9,16
 1005b2c:	42000404 	addi	r8,r8,16
 1005b30:	5bbffc15 	stw	r14,-16(r11)
 1005b34:	53800017 	ldw	r14,0(r10)
 1005b38:	63000404 	addi	r12,r12,16
 1005b3c:	52800404 	addi	r10,r10,16
 1005b40:	4bbffc15 	stw	r14,-16(r9)
 1005b44:	1bffef1e 	bne	r3,r15,1005b04 <memcpy+0x54>
 1005b48:	81c00044 	addi	r7,r16,1
 1005b4c:	380e913a 	slli	r7,r7,4
 1005b50:	310003cc 	andi	r4,r6,15
 1005b54:	02c000c4 	movi	r11,3
 1005b58:	11c7883a 	add	r3,r2,r7
 1005b5c:	29cb883a 	add	r5,r5,r7
 1005b60:	59001f2e 	bgeu	r11,r4,1005be0 <memcpy+0x130>
 1005b64:	1813883a 	mov	r9,r3
 1005b68:	2811883a 	mov	r8,r5
 1005b6c:	200f883a 	mov	r7,r4
 1005b70:	42800017 	ldw	r10,0(r8)
 1005b74:	4a400104 	addi	r9,r9,4
 1005b78:	39ffff04 	addi	r7,r7,-4
 1005b7c:	4abfff15 	stw	r10,-4(r9)
 1005b80:	42000104 	addi	r8,r8,4
 1005b84:	59fffa36 	bltu	r11,r7,1005b70 <memcpy+0xc0>
 1005b88:	213fff04 	addi	r4,r4,-4
 1005b8c:	2008d0ba 	srli	r4,r4,2
 1005b90:	318000cc 	andi	r6,r6,3
 1005b94:	21000044 	addi	r4,r4,1
 1005b98:	2109883a 	add	r4,r4,r4
 1005b9c:	2109883a 	add	r4,r4,r4
 1005ba0:	1907883a 	add	r3,r3,r4
 1005ba4:	290b883a 	add	r5,r5,r4
 1005ba8:	30000626 	beq	r6,zero,1005bc4 <memcpy+0x114>
 1005bac:	198d883a 	add	r6,r3,r6
 1005bb0:	29c00003 	ldbu	r7,0(r5)
 1005bb4:	18c00044 	addi	r3,r3,1
 1005bb8:	29400044 	addi	r5,r5,1
 1005bbc:	19ffffc5 	stb	r7,-1(r3)
 1005bc0:	19bffb1e 	bne	r3,r6,1005bb0 <memcpy+0x100>
 1005bc4:	dc000017 	ldw	r16,0(sp)
 1005bc8:	dec00104 	addi	sp,sp,4
 1005bcc:	f800283a 	ret
 1005bd0:	2007883a 	mov	r3,r4
 1005bd4:	003ff406 	br	1005ba8 <memcpy+0xf8>
 1005bd8:	2007883a 	mov	r3,r4
 1005bdc:	003ff306 	br	1005bac <memcpy+0xfc>
 1005be0:	200d883a 	mov	r6,r4
 1005be4:	003ff006 	br	1005ba8 <memcpy+0xf8>

01005be8 <memmove>:
 1005be8:	2005883a 	mov	r2,r4
 1005bec:	29000b2e 	bgeu	r5,r4,1005c1c <memmove+0x34>
 1005bf0:	298f883a 	add	r7,r5,r6
 1005bf4:	21c0092e 	bgeu	r4,r7,1005c1c <memmove+0x34>
 1005bf8:	2187883a 	add	r3,r4,r6
 1005bfc:	198bc83a 	sub	r5,r3,r6
 1005c00:	30004b26 	beq	r6,zero,1005d30 <memmove+0x148>
 1005c04:	39ffffc4 	addi	r7,r7,-1
 1005c08:	39000003 	ldbu	r4,0(r7)
 1005c0c:	18ffffc4 	addi	r3,r3,-1
 1005c10:	19000005 	stb	r4,0(r3)
 1005c14:	197ffb1e 	bne	r3,r5,1005c04 <memmove+0x1c>
 1005c18:	f800283a 	ret
 1005c1c:	00c003c4 	movi	r3,15
 1005c20:	1980412e 	bgeu	r3,r6,1005d28 <memmove+0x140>
 1005c24:	1146b03a 	or	r3,r2,r5
 1005c28:	18c000cc 	andi	r3,r3,3
 1005c2c:	1800411e 	bne	r3,zero,1005d34 <memmove+0x14c>
 1005c30:	33fffc04 	addi	r15,r6,-16
 1005c34:	781ed13a 	srli	r15,r15,4
 1005c38:	28c00104 	addi	r3,r5,4
 1005c3c:	13400104 	addi	r13,r2,4
 1005c40:	781c913a 	slli	r14,r15,4
 1005c44:	2b000204 	addi	r12,r5,8
 1005c48:	12c00204 	addi	r11,r2,8
 1005c4c:	73800504 	addi	r14,r14,20
 1005c50:	2a800304 	addi	r10,r5,12
 1005c54:	12400304 	addi	r9,r2,12
 1005c58:	2b9d883a 	add	r14,r5,r14
 1005c5c:	2811883a 	mov	r8,r5
 1005c60:	100f883a 	mov	r7,r2
 1005c64:	41000017 	ldw	r4,0(r8)
 1005c68:	39c00404 	addi	r7,r7,16
 1005c6c:	18c00404 	addi	r3,r3,16
 1005c70:	393ffc15 	stw	r4,-16(r7)
 1005c74:	193ffc17 	ldw	r4,-16(r3)
 1005c78:	6b400404 	addi	r13,r13,16
 1005c7c:	5ac00404 	addi	r11,r11,16
 1005c80:	693ffc15 	stw	r4,-16(r13)
 1005c84:	61000017 	ldw	r4,0(r12)
 1005c88:	4a400404 	addi	r9,r9,16
 1005c8c:	42000404 	addi	r8,r8,16
 1005c90:	593ffc15 	stw	r4,-16(r11)
 1005c94:	51000017 	ldw	r4,0(r10)
 1005c98:	63000404 	addi	r12,r12,16
 1005c9c:	52800404 	addi	r10,r10,16
 1005ca0:	493ffc15 	stw	r4,-16(r9)
 1005ca4:	1bbfef1e 	bne	r3,r14,1005c64 <memmove+0x7c>
 1005ca8:	79000044 	addi	r4,r15,1
 1005cac:	2008913a 	slli	r4,r4,4
 1005cb0:	328003cc 	andi	r10,r6,15
 1005cb4:	02c000c4 	movi	r11,3
 1005cb8:	1107883a 	add	r3,r2,r4
 1005cbc:	290b883a 	add	r5,r5,r4
 1005cc0:	5a801e2e 	bgeu	r11,r10,1005d3c <memmove+0x154>
 1005cc4:	1813883a 	mov	r9,r3
 1005cc8:	2811883a 	mov	r8,r5
 1005ccc:	500f883a 	mov	r7,r10
 1005cd0:	41000017 	ldw	r4,0(r8)
 1005cd4:	4a400104 	addi	r9,r9,4
 1005cd8:	39ffff04 	addi	r7,r7,-4
 1005cdc:	493fff15 	stw	r4,-4(r9)
 1005ce0:	42000104 	addi	r8,r8,4
 1005ce4:	59fffa36 	bltu	r11,r7,1005cd0 <memmove+0xe8>
 1005ce8:	513fff04 	addi	r4,r10,-4
 1005cec:	2008d0ba 	srli	r4,r4,2
 1005cf0:	318000cc 	andi	r6,r6,3
 1005cf4:	21000044 	addi	r4,r4,1
 1005cf8:	2109883a 	add	r4,r4,r4
 1005cfc:	2109883a 	add	r4,r4,r4
 1005d00:	1907883a 	add	r3,r3,r4
 1005d04:	290b883a 	add	r5,r5,r4
 1005d08:	30000926 	beq	r6,zero,1005d30 <memmove+0x148>
 1005d0c:	198d883a 	add	r6,r3,r6
 1005d10:	29c00003 	ldbu	r7,0(r5)
 1005d14:	18c00044 	addi	r3,r3,1
 1005d18:	29400044 	addi	r5,r5,1
 1005d1c:	19ffffc5 	stb	r7,-1(r3)
 1005d20:	19bffb1e 	bne	r3,r6,1005d10 <memmove+0x128>
 1005d24:	f800283a 	ret
 1005d28:	1007883a 	mov	r3,r2
 1005d2c:	003ff606 	br	1005d08 <memmove+0x120>
 1005d30:	f800283a 	ret
 1005d34:	1007883a 	mov	r3,r2
 1005d38:	003ff406 	br	1005d0c <memmove+0x124>
 1005d3c:	500d883a 	mov	r6,r10
 1005d40:	003ff106 	br	1005d08 <memmove+0x120>

01005d44 <memset>:
 1005d44:	20c000cc 	andi	r3,r4,3
 1005d48:	2005883a 	mov	r2,r4
 1005d4c:	18004326 	beq	r3,zero,1005e5c <memset+0x118>
 1005d50:	31ffffc4 	addi	r7,r6,-1
 1005d54:	30004026 	beq	r6,zero,1005e58 <memset+0x114>
 1005d58:	2813883a 	mov	r9,r5
 1005d5c:	200d883a 	mov	r6,r4
 1005d60:	2007883a 	mov	r3,r4
 1005d64:	00000406 	br	1005d78 <memset+0x34>
 1005d68:	3a3fffc4 	addi	r8,r7,-1
 1005d6c:	31800044 	addi	r6,r6,1
 1005d70:	38003926 	beq	r7,zero,1005e58 <memset+0x114>
 1005d74:	400f883a 	mov	r7,r8
 1005d78:	18c00044 	addi	r3,r3,1
 1005d7c:	32400005 	stb	r9,0(r6)
 1005d80:	1a0000cc 	andi	r8,r3,3
 1005d84:	403ff81e 	bne	r8,zero,1005d68 <memset+0x24>
 1005d88:	010000c4 	movi	r4,3
 1005d8c:	21c02d2e 	bgeu	r4,r7,1005e44 <memset+0x100>
 1005d90:	29803fcc 	andi	r6,r5,255
 1005d94:	3008923a 	slli	r4,r6,8
 1005d98:	218cb03a 	or	r6,r4,r6
 1005d9c:	3008943a 	slli	r4,r6,16
 1005da0:	218cb03a 	or	r6,r4,r6
 1005da4:	010003c4 	movi	r4,15
 1005da8:	21c0182e 	bgeu	r4,r7,1005e0c <memset+0xc8>
 1005dac:	3b3ffc04 	addi	r12,r7,-16
 1005db0:	6018d13a 	srli	r12,r12,4
 1005db4:	1a000104 	addi	r8,r3,4
 1005db8:	1ac00204 	addi	r11,r3,8
 1005dbc:	6008913a 	slli	r4,r12,4
 1005dc0:	1a800304 	addi	r10,r3,12
 1005dc4:	1813883a 	mov	r9,r3
 1005dc8:	21000504 	addi	r4,r4,20
 1005dcc:	1909883a 	add	r4,r3,r4
 1005dd0:	49800015 	stw	r6,0(r9)
 1005dd4:	41800015 	stw	r6,0(r8)
 1005dd8:	59800015 	stw	r6,0(r11)
 1005ddc:	51800015 	stw	r6,0(r10)
 1005de0:	42000404 	addi	r8,r8,16
 1005de4:	4a400404 	addi	r9,r9,16
 1005de8:	5ac00404 	addi	r11,r11,16
 1005dec:	52800404 	addi	r10,r10,16
 1005df0:	413ff71e 	bne	r8,r4,1005dd0 <memset+0x8c>
 1005df4:	63000044 	addi	r12,r12,1
 1005df8:	6018913a 	slli	r12,r12,4
 1005dfc:	39c003cc 	andi	r7,r7,15
 1005e00:	010000c4 	movi	r4,3
 1005e04:	1b07883a 	add	r3,r3,r12
 1005e08:	21c00e2e 	bgeu	r4,r7,1005e44 <memset+0x100>
 1005e0c:	1813883a 	mov	r9,r3
 1005e10:	3811883a 	mov	r8,r7
 1005e14:	010000c4 	movi	r4,3
 1005e18:	49800015 	stw	r6,0(r9)
 1005e1c:	423fff04 	addi	r8,r8,-4
 1005e20:	4a400104 	addi	r9,r9,4
 1005e24:	223ffc36 	bltu	r4,r8,1005e18 <memset+0xd4>
 1005e28:	393fff04 	addi	r4,r7,-4
 1005e2c:	2008d0ba 	srli	r4,r4,2
 1005e30:	39c000cc 	andi	r7,r7,3
 1005e34:	21000044 	addi	r4,r4,1
 1005e38:	2109883a 	add	r4,r4,r4
 1005e3c:	2109883a 	add	r4,r4,r4
 1005e40:	1907883a 	add	r3,r3,r4
 1005e44:	38000426 	beq	r7,zero,1005e58 <memset+0x114>
 1005e48:	19cf883a 	add	r7,r3,r7
 1005e4c:	19400005 	stb	r5,0(r3)
 1005e50:	18c00044 	addi	r3,r3,1
 1005e54:	19fffd1e 	bne	r3,r7,1005e4c <memset+0x108>
 1005e58:	f800283a 	ret
 1005e5c:	2007883a 	mov	r3,r4
 1005e60:	300f883a 	mov	r7,r6
 1005e64:	003fc806 	br	1005d88 <memset+0x44>

01005e68 <_Balloc>:
 1005e68:	20801317 	ldw	r2,76(r4)
 1005e6c:	defffc04 	addi	sp,sp,-16
 1005e70:	dc400115 	stw	r17,4(sp)
 1005e74:	dc000015 	stw	r16,0(sp)
 1005e78:	dfc00315 	stw	ra,12(sp)
 1005e7c:	dc800215 	stw	r18,8(sp)
 1005e80:	2023883a 	mov	r17,r4
 1005e84:	2821883a 	mov	r16,r5
 1005e88:	10000f26 	beq	r2,zero,1005ec8 <_Balloc+0x60>
 1005e8c:	8407883a 	add	r3,r16,r16
 1005e90:	18c7883a 	add	r3,r3,r3
 1005e94:	10c7883a 	add	r3,r2,r3
 1005e98:	18800017 	ldw	r2,0(r3)
 1005e9c:	10001126 	beq	r2,zero,1005ee4 <_Balloc+0x7c>
 1005ea0:	11000017 	ldw	r4,0(r2)
 1005ea4:	19000015 	stw	r4,0(r3)
 1005ea8:	10000415 	stw	zero,16(r2)
 1005eac:	10000315 	stw	zero,12(r2)
 1005eb0:	dfc00317 	ldw	ra,12(sp)
 1005eb4:	dc800217 	ldw	r18,8(sp)
 1005eb8:	dc400117 	ldw	r17,4(sp)
 1005ebc:	dc000017 	ldw	r16,0(sp)
 1005ec0:	dec00404 	addi	sp,sp,16
 1005ec4:	f800283a 	ret
 1005ec8:	01400104 	movi	r5,4
 1005ecc:	01800844 	movi	r6,33
 1005ed0:	1008b8c0 	call	1008b8c <_calloc_r>
 1005ed4:	88801315 	stw	r2,76(r17)
 1005ed8:	103fec1e 	bne	r2,zero,1005e8c <_Balloc+0x24>
 1005edc:	0005883a 	mov	r2,zero
 1005ee0:	003ff306 	br	1005eb0 <_Balloc+0x48>
 1005ee4:	01400044 	movi	r5,1
 1005ee8:	2c24983a 	sll	r18,r5,r16
 1005eec:	8809883a 	mov	r4,r17
 1005ef0:	91800144 	addi	r6,r18,5
 1005ef4:	318d883a 	add	r6,r6,r6
 1005ef8:	318d883a 	add	r6,r6,r6
 1005efc:	1008b8c0 	call	1008b8c <_calloc_r>
 1005f00:	103ff626 	beq	r2,zero,1005edc <_Balloc+0x74>
 1005f04:	14000115 	stw	r16,4(r2)
 1005f08:	14800215 	stw	r18,8(r2)
 1005f0c:	003fe606 	br	1005ea8 <_Balloc+0x40>

01005f10 <_Bfree>:
 1005f10:	28000826 	beq	r5,zero,1005f34 <_Bfree+0x24>
 1005f14:	28c00117 	ldw	r3,4(r5)
 1005f18:	20801317 	ldw	r2,76(r4)
 1005f1c:	18c7883a 	add	r3,r3,r3
 1005f20:	18c7883a 	add	r3,r3,r3
 1005f24:	10c5883a 	add	r2,r2,r3
 1005f28:	10c00017 	ldw	r3,0(r2)
 1005f2c:	28c00015 	stw	r3,0(r5)
 1005f30:	11400015 	stw	r5,0(r2)
 1005f34:	f800283a 	ret

01005f38 <__multadd>:
 1005f38:	defffa04 	addi	sp,sp,-24
 1005f3c:	dc000115 	stw	r16,4(sp)
 1005f40:	2c000417 	ldw	r16,16(r5)
 1005f44:	dc800315 	stw	r18,12(sp)
 1005f48:	dc400215 	stw	r17,8(sp)
 1005f4c:	dfc00515 	stw	ra,20(sp)
 1005f50:	dcc00415 	stw	r19,16(sp)
 1005f54:	2823883a 	mov	r17,r5
 1005f58:	2025883a 	mov	r18,r4
 1005f5c:	2a400504 	addi	r9,r5,20
 1005f60:	0015883a 	mov	r10,zero
 1005f64:	4a000017 	ldw	r8,0(r9)
 1005f68:	4a400104 	addi	r9,r9,4
 1005f6c:	52800044 	addi	r10,r10,1
 1005f70:	40ffffcc 	andi	r3,r8,65535
 1005f74:	1987383a 	mul	r3,r3,r6
 1005f78:	4010d43a 	srli	r8,r8,16
 1005f7c:	19cf883a 	add	r7,r3,r7
 1005f80:	4191383a 	mul	r8,r8,r6
 1005f84:	3816d43a 	srli	r11,r7,16
 1005f88:	38ffffcc 	andi	r3,r7,65535
 1005f8c:	5a0f883a 	add	r7,r11,r8
 1005f90:	3810943a 	slli	r8,r7,16
 1005f94:	380ed43a 	srli	r7,r7,16
 1005f98:	40c7883a 	add	r3,r8,r3
 1005f9c:	48ffff15 	stw	r3,-4(r9)
 1005fa0:	543ff016 	blt	r10,r16,1005f64 <__multadd+0x2c>
 1005fa4:	38000926 	beq	r7,zero,1005fcc <__multadd+0x94>
 1005fa8:	88800217 	ldw	r2,8(r17)
 1005fac:	80800f0e 	bge	r16,r2,1005fec <__multadd+0xb4>
 1005fb0:	80800144 	addi	r2,r16,5
 1005fb4:	1085883a 	add	r2,r2,r2
 1005fb8:	1085883a 	add	r2,r2,r2
 1005fbc:	8885883a 	add	r2,r17,r2
 1005fc0:	11c00015 	stw	r7,0(r2)
 1005fc4:	84000044 	addi	r16,r16,1
 1005fc8:	8c000415 	stw	r16,16(r17)
 1005fcc:	8805883a 	mov	r2,r17
 1005fd0:	dfc00517 	ldw	ra,20(sp)
 1005fd4:	dcc00417 	ldw	r19,16(sp)
 1005fd8:	dc800317 	ldw	r18,12(sp)
 1005fdc:	dc400217 	ldw	r17,8(sp)
 1005fe0:	dc000117 	ldw	r16,4(sp)
 1005fe4:	dec00604 	addi	sp,sp,24
 1005fe8:	f800283a 	ret
 1005fec:	89400117 	ldw	r5,4(r17)
 1005ff0:	9009883a 	mov	r4,r18
 1005ff4:	d9c00015 	stw	r7,0(sp)
 1005ff8:	29400044 	addi	r5,r5,1
 1005ffc:	1005e680 	call	1005e68 <_Balloc>
 1006000:	89800417 	ldw	r6,16(r17)
 1006004:	11000304 	addi	r4,r2,12
 1006008:	89400304 	addi	r5,r17,12
 100600c:	31800084 	addi	r6,r6,2
 1006010:	318d883a 	add	r6,r6,r6
 1006014:	318d883a 	add	r6,r6,r6
 1006018:	1027883a 	mov	r19,r2
 100601c:	1005ab00 	call	1005ab0 <memcpy>
 1006020:	d9c00017 	ldw	r7,0(sp)
 1006024:	88000a26 	beq	r17,zero,1006050 <__multadd+0x118>
 1006028:	89000117 	ldw	r4,4(r17)
 100602c:	90c01317 	ldw	r3,76(r18)
 1006030:	2109883a 	add	r4,r4,r4
 1006034:	2109883a 	add	r4,r4,r4
 1006038:	1907883a 	add	r3,r3,r4
 100603c:	18800017 	ldw	r2,0(r3)
 1006040:	88800015 	stw	r2,0(r17)
 1006044:	1c400015 	stw	r17,0(r3)
 1006048:	9823883a 	mov	r17,r19
 100604c:	003fd806 	br	1005fb0 <__multadd+0x78>
 1006050:	9823883a 	mov	r17,r19
 1006054:	003fd606 	br	1005fb0 <__multadd+0x78>

01006058 <__s2b>:
 1006058:	defff904 	addi	sp,sp,-28
 100605c:	dc400115 	stw	r17,4(sp)
 1006060:	dc000015 	stw	r16,0(sp)
 1006064:	2023883a 	mov	r17,r4
 1006068:	2821883a 	mov	r16,r5
 100606c:	39000204 	addi	r4,r7,8
 1006070:	01400244 	movi	r5,9
 1006074:	dcc00315 	stw	r19,12(sp)
 1006078:	dc800215 	stw	r18,8(sp)
 100607c:	dfc00615 	stw	ra,24(sp)
 1006080:	dd400515 	stw	r21,20(sp)
 1006084:	dd000415 	stw	r20,16(sp)
 1006088:	3825883a 	mov	r18,r7
 100608c:	3027883a 	mov	r19,r6
 1006090:	1009f900 	call	1009f90 <__divsi3>
 1006094:	00c00044 	movi	r3,1
 1006098:	000b883a 	mov	r5,zero
 100609c:	1880030e 	bge	r3,r2,10060ac <__s2b+0x54>
 10060a0:	18c7883a 	add	r3,r3,r3
 10060a4:	29400044 	addi	r5,r5,1
 10060a8:	18bffd16 	blt	r3,r2,10060a0 <__s2b+0x48>
 10060ac:	8809883a 	mov	r4,r17
 10060b0:	1005e680 	call	1005e68 <_Balloc>
 10060b4:	d8c00717 	ldw	r3,28(sp)
 10060b8:	10c00515 	stw	r3,20(r2)
 10060bc:	00c00044 	movi	r3,1
 10060c0:	10c00415 	stw	r3,16(r2)
 10060c4:	00c00244 	movi	r3,9
 10060c8:	1cc0210e 	bge	r3,r19,1006150 <__s2b+0xf8>
 10060cc:	80eb883a 	add	r21,r16,r3
 10060d0:	a829883a 	mov	r20,r21
 10060d4:	84e1883a 	add	r16,r16,r19
 10060d8:	a1c00007 	ldb	r7,0(r20)
 10060dc:	8809883a 	mov	r4,r17
 10060e0:	a5000044 	addi	r20,r20,1
 10060e4:	100b883a 	mov	r5,r2
 10060e8:	01800284 	movi	r6,10
 10060ec:	39fff404 	addi	r7,r7,-48
 10060f0:	1005f380 	call	1005f38 <__multadd>
 10060f4:	a43ff81e 	bne	r20,r16,10060d8 <__s2b+0x80>
 10060f8:	ace1883a 	add	r16,r21,r19
 10060fc:	843ffe04 	addi	r16,r16,-8
 1006100:	9c800a0e 	bge	r19,r18,100612c <__s2b+0xd4>
 1006104:	94e5c83a 	sub	r18,r18,r19
 1006108:	84a5883a 	add	r18,r16,r18
 100610c:	81c00007 	ldb	r7,0(r16)
 1006110:	8809883a 	mov	r4,r17
 1006114:	84000044 	addi	r16,r16,1
 1006118:	100b883a 	mov	r5,r2
 100611c:	01800284 	movi	r6,10
 1006120:	39fff404 	addi	r7,r7,-48
 1006124:	1005f380 	call	1005f38 <__multadd>
 1006128:	84bff81e 	bne	r16,r18,100610c <__s2b+0xb4>
 100612c:	dfc00617 	ldw	ra,24(sp)
 1006130:	dd400517 	ldw	r21,20(sp)
 1006134:	dd000417 	ldw	r20,16(sp)
 1006138:	dcc00317 	ldw	r19,12(sp)
 100613c:	dc800217 	ldw	r18,8(sp)
 1006140:	dc400117 	ldw	r17,4(sp)
 1006144:	dc000017 	ldw	r16,0(sp)
 1006148:	dec00704 	addi	sp,sp,28
 100614c:	f800283a 	ret
 1006150:	84000284 	addi	r16,r16,10
 1006154:	1827883a 	mov	r19,r3
 1006158:	003fe906 	br	1006100 <__s2b+0xa8>

0100615c <__hi0bits>:
 100615c:	20bfffec 	andhi	r2,r4,65535
 1006160:	1000141e 	bne	r2,zero,10061b4 <__hi0bits+0x58>
 1006164:	2008943a 	slli	r4,r4,16
 1006168:	00800404 	movi	r2,16
 100616c:	20ffc02c 	andhi	r3,r4,65280
 1006170:	1800021e 	bne	r3,zero,100617c <__hi0bits+0x20>
 1006174:	2008923a 	slli	r4,r4,8
 1006178:	10800204 	addi	r2,r2,8
 100617c:	20fc002c 	andhi	r3,r4,61440
 1006180:	1800021e 	bne	r3,zero,100618c <__hi0bits+0x30>
 1006184:	2008913a 	slli	r4,r4,4
 1006188:	10800104 	addi	r2,r2,4
 100618c:	20f0002c 	andhi	r3,r4,49152
 1006190:	1800031e 	bne	r3,zero,10061a0 <__hi0bits+0x44>
 1006194:	2109883a 	add	r4,r4,r4
 1006198:	10800084 	addi	r2,r2,2
 100619c:	2109883a 	add	r4,r4,r4
 10061a0:	20000316 	blt	r4,zero,10061b0 <__hi0bits+0x54>
 10061a4:	2110002c 	andhi	r4,r4,16384
 10061a8:	2000041e 	bne	r4,zero,10061bc <__hi0bits+0x60>
 10061ac:	00800804 	movi	r2,32
 10061b0:	f800283a 	ret
 10061b4:	0005883a 	mov	r2,zero
 10061b8:	003fec06 	br	100616c <__hi0bits+0x10>
 10061bc:	10800044 	addi	r2,r2,1
 10061c0:	f800283a 	ret

010061c4 <__lo0bits>:
 10061c4:	20c00017 	ldw	r3,0(r4)
 10061c8:	188001cc 	andi	r2,r3,7
 10061cc:	10000826 	beq	r2,zero,10061f0 <__lo0bits+0x2c>
 10061d0:	1880004c 	andi	r2,r3,1
 10061d4:	1000211e 	bne	r2,zero,100625c <__lo0bits+0x98>
 10061d8:	1880008c 	andi	r2,r3,2
 10061dc:	1000211e 	bne	r2,zero,1006264 <__lo0bits+0xa0>
 10061e0:	1806d0ba 	srli	r3,r3,2
 10061e4:	00800084 	movi	r2,2
 10061e8:	20c00015 	stw	r3,0(r4)
 10061ec:	f800283a 	ret
 10061f0:	18bfffcc 	andi	r2,r3,65535
 10061f4:	10001326 	beq	r2,zero,1006244 <__lo0bits+0x80>
 10061f8:	0005883a 	mov	r2,zero
 10061fc:	19403fcc 	andi	r5,r3,255
 1006200:	2800021e 	bne	r5,zero,100620c <__lo0bits+0x48>
 1006204:	1806d23a 	srli	r3,r3,8
 1006208:	10800204 	addi	r2,r2,8
 100620c:	194003cc 	andi	r5,r3,15
 1006210:	2800021e 	bne	r5,zero,100621c <__lo0bits+0x58>
 1006214:	1806d13a 	srli	r3,r3,4
 1006218:	10800104 	addi	r2,r2,4
 100621c:	194000cc 	andi	r5,r3,3
 1006220:	2800021e 	bne	r5,zero,100622c <__lo0bits+0x68>
 1006224:	1806d0ba 	srli	r3,r3,2
 1006228:	10800084 	addi	r2,r2,2
 100622c:	1940004c 	andi	r5,r3,1
 1006230:	2800081e 	bne	r5,zero,1006254 <__lo0bits+0x90>
 1006234:	1806d07a 	srli	r3,r3,1
 1006238:	1800051e 	bne	r3,zero,1006250 <__lo0bits+0x8c>
 100623c:	00800804 	movi	r2,32
 1006240:	f800283a 	ret
 1006244:	1806d43a 	srli	r3,r3,16
 1006248:	00800404 	movi	r2,16
 100624c:	003feb06 	br	10061fc <__lo0bits+0x38>
 1006250:	10800044 	addi	r2,r2,1
 1006254:	20c00015 	stw	r3,0(r4)
 1006258:	f800283a 	ret
 100625c:	0005883a 	mov	r2,zero
 1006260:	f800283a 	ret
 1006264:	1806d07a 	srli	r3,r3,1
 1006268:	00800044 	movi	r2,1
 100626c:	20c00015 	stw	r3,0(r4)
 1006270:	f800283a 	ret

01006274 <__i2b>:
 1006274:	defffd04 	addi	sp,sp,-12
 1006278:	dc000015 	stw	r16,0(sp)
 100627c:	04000044 	movi	r16,1
 1006280:	dc400115 	stw	r17,4(sp)
 1006284:	2823883a 	mov	r17,r5
 1006288:	800b883a 	mov	r5,r16
 100628c:	dfc00215 	stw	ra,8(sp)
 1006290:	1005e680 	call	1005e68 <_Balloc>
 1006294:	14400515 	stw	r17,20(r2)
 1006298:	14000415 	stw	r16,16(r2)
 100629c:	dfc00217 	ldw	ra,8(sp)
 10062a0:	dc400117 	ldw	r17,4(sp)
 10062a4:	dc000017 	ldw	r16,0(sp)
 10062a8:	dec00304 	addi	sp,sp,12
 10062ac:	f800283a 	ret

010062b0 <__multiply>:
 10062b0:	defffa04 	addi	sp,sp,-24
 10062b4:	dcc00315 	stw	r19,12(sp)
 10062b8:	dc800215 	stw	r18,8(sp)
 10062bc:	2cc00417 	ldw	r19,16(r5)
 10062c0:	34800417 	ldw	r18,16(r6)
 10062c4:	dd000415 	stw	r20,16(sp)
 10062c8:	dc400115 	stw	r17,4(sp)
 10062cc:	dfc00515 	stw	ra,20(sp)
 10062d0:	dc000015 	stw	r16,0(sp)
 10062d4:	2829883a 	mov	r20,r5
 10062d8:	3023883a 	mov	r17,r6
 10062dc:	9c807016 	blt	r19,r18,10064a0 <__multiply+0x1f0>
 10062e0:	9005883a 	mov	r2,r18
 10062e4:	9825883a 	mov	r18,r19
 10062e8:	1027883a 	mov	r19,r2
 10062ec:	a0800217 	ldw	r2,8(r20)
 10062f0:	94e1883a 	add	r16,r18,r19
 10062f4:	a1400117 	ldw	r5,4(r20)
 10062f8:	1400010e 	bge	r2,r16,1006300 <__multiply+0x50>
 10062fc:	29400044 	addi	r5,r5,1
 1006300:	1005e680 	call	1005e68 <_Balloc>
 1006304:	8417883a 	add	r11,r16,r16
 1006308:	13000504 	addi	r12,r2,20
 100630c:	5ad7883a 	add	r11,r11,r11
 1006310:	62d7883a 	add	r11,r12,r11
 1006314:	6007883a 	mov	r3,r12
 1006318:	62c0032e 	bgeu	r12,r11,1006328 <__multiply+0x78>
 100631c:	18000015 	stw	zero,0(r3)
 1006320:	18c00104 	addi	r3,r3,4
 1006324:	1afffd36 	bltu	r3,r11,100631c <__multiply+0x6c>
 1006328:	9ce7883a 	add	r19,r19,r19
 100632c:	94a5883a 	add	r18,r18,r18
 1006330:	89800504 	addi	r6,r17,20
 1006334:	9ce7883a 	add	r19,r19,r19
 1006338:	a3800504 	addi	r14,r20,20
 100633c:	94a5883a 	add	r18,r18,r18
 1006340:	34db883a 	add	r13,r6,r19
 1006344:	7495883a 	add	r10,r14,r18
 1006348:	3340422e 	bgeu	r6,r13,1006454 <__multiply+0x1a4>
 100634c:	34400017 	ldw	r17,0(r6)
 1006350:	8cbfffcc 	andi	r18,r17,65535
 1006354:	90001b26 	beq	r18,zero,10063c4 <__multiply+0x114>
 1006358:	6013883a 	mov	r9,r12
 100635c:	7023883a 	mov	r17,r14
 1006360:	0011883a 	mov	r8,zero
 1006364:	88c00017 	ldw	r3,0(r17)
 1006368:	4bc00017 	ldw	r15,0(r9)
 100636c:	8c400104 	addi	r17,r17,4
 1006370:	19ffffcc 	andi	r7,r3,65535
 1006374:	3c8f383a 	mul	r7,r7,r18
 1006378:	1808d43a 	srli	r4,r3,16
 100637c:	797fffcc 	andi	r5,r15,65535
 1006380:	29cb883a 	add	r5,r5,r7
 1006384:	2a0b883a 	add	r5,r5,r8
 1006388:	2489383a 	mul	r4,r4,r18
 100638c:	7806d43a 	srli	r3,r15,16
 1006390:	2810d43a 	srli	r8,r5,16
 1006394:	297fffcc 	andi	r5,r5,65535
 1006398:	1907883a 	add	r3,r3,r4
 100639c:	1a07883a 	add	r3,r3,r8
 10063a0:	1808943a 	slli	r4,r3,16
 10063a4:	480f883a 	mov	r7,r9
 10063a8:	1810d43a 	srli	r8,r3,16
 10063ac:	214ab03a 	or	r5,r4,r5
 10063b0:	49400015 	stw	r5,0(r9)
 10063b4:	4a400104 	addi	r9,r9,4
 10063b8:	8abfea36 	bltu	r17,r10,1006364 <__multiply+0xb4>
 10063bc:	3a000115 	stw	r8,4(r7)
 10063c0:	34400017 	ldw	r17,0(r6)
 10063c4:	8822d43a 	srli	r17,r17,16
 10063c8:	88001f26 	beq	r17,zero,1006448 <__multiply+0x198>
 10063cc:	60c00017 	ldw	r3,0(r12)
 10063d0:	7013883a 	mov	r9,r14
 10063d4:	601f883a 	mov	r15,r12
 10063d8:	1811883a 	mov	r8,r3
 10063dc:	6027883a 	mov	r19,r12
 10063e0:	000f883a 	mov	r7,zero
 10063e4:	00000106 	br	10063ec <__multiply+0x13c>
 10063e8:	9027883a 	mov	r19,r18
 10063ec:	4940000b 	ldhu	r5,0(r9)
 10063f0:	4010d43a 	srli	r8,r8,16
 10063f4:	193fffcc 	andi	r4,r3,65535
 10063f8:	2c4b383a 	mul	r5,r5,r17
 10063fc:	7bc00104 	addi	r15,r15,4
 1006400:	4a400104 	addi	r9,r9,4
 1006404:	2a0b883a 	add	r5,r5,r8
 1006408:	29cb883a 	add	r5,r5,r7
 100640c:	2806943a 	slli	r3,r5,16
 1006410:	9c800104 	addi	r18,r19,4
 1006414:	280ad43a 	srli	r5,r5,16
 1006418:	1908b03a 	or	r4,r3,r4
 100641c:	793fff15 	stw	r4,-4(r15)
 1006420:	48ffff17 	ldw	r3,-4(r9)
 1006424:	92000017 	ldw	r8,0(r18)
 1006428:	1806d43a 	srli	r3,r3,16
 100642c:	413fffcc 	andi	r4,r8,65535
 1006430:	1c47383a 	mul	r3,r3,r17
 1006434:	1907883a 	add	r3,r3,r4
 1006438:	1947883a 	add	r3,r3,r5
 100643c:	180ed43a 	srli	r7,r3,16
 1006440:	4abfe936 	bltu	r9,r10,10063e8 <__multiply+0x138>
 1006444:	98c00115 	stw	r3,4(r19)
 1006448:	31800104 	addi	r6,r6,4
 100644c:	63000104 	addi	r12,r12,4
 1006450:	337fbe36 	bltu	r6,r13,100634c <__multiply+0x9c>
 1006454:	0400090e 	bge	zero,r16,100647c <__multiply+0x1cc>
 1006458:	58ffff17 	ldw	r3,-4(r11)
 100645c:	5affff04 	addi	r11,r11,-4
 1006460:	18000326 	beq	r3,zero,1006470 <__multiply+0x1c0>
 1006464:	00000506 	br	100647c <__multiply+0x1cc>
 1006468:	58c00017 	ldw	r3,0(r11)
 100646c:	1800031e 	bne	r3,zero,100647c <__multiply+0x1cc>
 1006470:	843fffc4 	addi	r16,r16,-1
 1006474:	5affff04 	addi	r11,r11,-4
 1006478:	803ffb1e 	bne	r16,zero,1006468 <__multiply+0x1b8>
 100647c:	14000415 	stw	r16,16(r2)
 1006480:	dfc00517 	ldw	ra,20(sp)
 1006484:	dd000417 	ldw	r20,16(sp)
 1006488:	dcc00317 	ldw	r19,12(sp)
 100648c:	dc800217 	ldw	r18,8(sp)
 1006490:	dc400117 	ldw	r17,4(sp)
 1006494:	dc000017 	ldw	r16,0(sp)
 1006498:	dec00604 	addi	sp,sp,24
 100649c:	f800283a 	ret
 10064a0:	3029883a 	mov	r20,r6
 10064a4:	2823883a 	mov	r17,r5
 10064a8:	003f9006 	br	10062ec <__multiply+0x3c>

010064ac <__pow5mult>:
 10064ac:	defffa04 	addi	sp,sp,-24
 10064b0:	dcc00315 	stw	r19,12(sp)
 10064b4:	dc800215 	stw	r18,8(sp)
 10064b8:	dc000015 	stw	r16,0(sp)
 10064bc:	dfc00515 	stw	ra,20(sp)
 10064c0:	dd000415 	stw	r20,16(sp)
 10064c4:	dc400115 	stw	r17,4(sp)
 10064c8:	308000cc 	andi	r2,r6,3
 10064cc:	3021883a 	mov	r16,r6
 10064d0:	2027883a 	mov	r19,r4
 10064d4:	2825883a 	mov	r18,r5
 10064d8:	10002e1e 	bne	r2,zero,1006594 <__pow5mult+0xe8>
 10064dc:	8021d0ba 	srai	r16,r16,2
 10064e0:	80001a26 	beq	r16,zero,100654c <__pow5mult+0xa0>
 10064e4:	9c401217 	ldw	r17,72(r19)
 10064e8:	8800061e 	bne	r17,zero,1006504 <__pow5mult+0x58>
 10064ec:	00003406 	br	10065c0 <__pow5mult+0x114>
 10064f0:	8021d07a 	srai	r16,r16,1
 10064f4:	80001526 	beq	r16,zero,100654c <__pow5mult+0xa0>
 10064f8:	88800017 	ldw	r2,0(r17)
 10064fc:	10001c26 	beq	r2,zero,1006570 <__pow5mult+0xc4>
 1006500:	1023883a 	mov	r17,r2
 1006504:	80c0004c 	andi	r3,r16,1
 1006508:	183ff926 	beq	r3,zero,10064f0 <__pow5mult+0x44>
 100650c:	900b883a 	mov	r5,r18
 1006510:	880d883a 	mov	r6,r17
 1006514:	9809883a 	mov	r4,r19
 1006518:	10062b00 	call	10062b0 <__multiply>
 100651c:	90001b26 	beq	r18,zero,100658c <__pow5mult+0xe0>
 1006520:	91c00117 	ldw	r7,4(r18)
 1006524:	98c01317 	ldw	r3,76(r19)
 1006528:	8021d07a 	srai	r16,r16,1
 100652c:	39cf883a 	add	r7,r7,r7
 1006530:	39cf883a 	add	r7,r7,r7
 1006534:	19c7883a 	add	r3,r3,r7
 1006538:	19000017 	ldw	r4,0(r3)
 100653c:	91000015 	stw	r4,0(r18)
 1006540:	1c800015 	stw	r18,0(r3)
 1006544:	1025883a 	mov	r18,r2
 1006548:	803feb1e 	bne	r16,zero,10064f8 <__pow5mult+0x4c>
 100654c:	9005883a 	mov	r2,r18
 1006550:	dfc00517 	ldw	ra,20(sp)
 1006554:	dd000417 	ldw	r20,16(sp)
 1006558:	dcc00317 	ldw	r19,12(sp)
 100655c:	dc800217 	ldw	r18,8(sp)
 1006560:	dc400117 	ldw	r17,4(sp)
 1006564:	dc000017 	ldw	r16,0(sp)
 1006568:	dec00604 	addi	sp,sp,24
 100656c:	f800283a 	ret
 1006570:	9809883a 	mov	r4,r19
 1006574:	880b883a 	mov	r5,r17
 1006578:	880d883a 	mov	r6,r17
 100657c:	10062b00 	call	10062b0 <__multiply>
 1006580:	88800015 	stw	r2,0(r17)
 1006584:	10000015 	stw	zero,0(r2)
 1006588:	003fdd06 	br	1006500 <__pow5mult+0x54>
 100658c:	1025883a 	mov	r18,r2
 1006590:	003fd706 	br	10064f0 <__pow5mult+0x44>
 1006594:	10bfffc4 	addi	r2,r2,-1
 1006598:	1085883a 	add	r2,r2,r2
 100659c:	00c04074 	movhi	r3,257
 10065a0:	18fb7104 	addi	r3,r3,-4668
 10065a4:	1085883a 	add	r2,r2,r2
 10065a8:	1885883a 	add	r2,r3,r2
 10065ac:	11800017 	ldw	r6,0(r2)
 10065b0:	000f883a 	mov	r7,zero
 10065b4:	1005f380 	call	1005f38 <__multadd>
 10065b8:	1025883a 	mov	r18,r2
 10065bc:	003fc706 	br	10064dc <__pow5mult+0x30>
 10065c0:	05000044 	movi	r20,1
 10065c4:	9809883a 	mov	r4,r19
 10065c8:	a00b883a 	mov	r5,r20
 10065cc:	1005e680 	call	1005e68 <_Balloc>
 10065d0:	1023883a 	mov	r17,r2
 10065d4:	00809c44 	movi	r2,625
 10065d8:	88800515 	stw	r2,20(r17)
 10065dc:	8d000415 	stw	r20,16(r17)
 10065e0:	9c401215 	stw	r17,72(r19)
 10065e4:	88000015 	stw	zero,0(r17)
 10065e8:	003fc606 	br	1006504 <__pow5mult+0x58>

010065ec <__lshift>:
 10065ec:	defff904 	addi	sp,sp,-28
 10065f0:	dd000415 	stw	r20,16(sp)
 10065f4:	dcc00315 	stw	r19,12(sp)
 10065f8:	3029d17a 	srai	r20,r6,5
 10065fc:	2cc00417 	ldw	r19,16(r5)
 1006600:	28800217 	ldw	r2,8(r5)
 1006604:	dd400515 	stw	r21,20(sp)
 1006608:	a4e7883a 	add	r19,r20,r19
 100660c:	dc800215 	stw	r18,8(sp)
 1006610:	dc400115 	stw	r17,4(sp)
 1006614:	dc000015 	stw	r16,0(sp)
 1006618:	dfc00615 	stw	ra,24(sp)
 100661c:	9c000044 	addi	r16,r19,1
 1006620:	2823883a 	mov	r17,r5
 1006624:	302b883a 	mov	r21,r6
 1006628:	2025883a 	mov	r18,r4
 100662c:	29400117 	ldw	r5,4(r5)
 1006630:	1400030e 	bge	r2,r16,1006640 <__lshift+0x54>
 1006634:	1085883a 	add	r2,r2,r2
 1006638:	29400044 	addi	r5,r5,1
 100663c:	143ffd16 	blt	r2,r16,1006634 <__lshift+0x48>
 1006640:	9009883a 	mov	r4,r18
 1006644:	1005e680 	call	1005e68 <_Balloc>
 1006648:	11c00504 	addi	r7,r2,20
 100664c:	0500090e 	bge	zero,r20,1006674 <__lshift+0x88>
 1006650:	3811883a 	mov	r8,r7
 1006654:	0007883a 	mov	r3,zero
 1006658:	40000015 	stw	zero,0(r8)
 100665c:	18c00044 	addi	r3,r3,1
 1006660:	42000104 	addi	r8,r8,4
 1006664:	1d3ffc1e 	bne	r3,r20,1006658 <__lshift+0x6c>
 1006668:	18c7883a 	add	r3,r3,r3
 100666c:	18c7883a 	add	r3,r3,r3
 1006670:	38cf883a 	add	r7,r7,r3
 1006674:	89000417 	ldw	r4,16(r17)
 1006678:	88c00504 	addi	r3,r17,20
 100667c:	a98007cc 	andi	r6,r21,31
 1006680:	2109883a 	add	r4,r4,r4
 1006684:	2109883a 	add	r4,r4,r4
 1006688:	1909883a 	add	r4,r3,r4
 100668c:	30002326 	beq	r6,zero,100671c <__lshift+0x130>
 1006690:	01400804 	movi	r5,32
 1006694:	298bc83a 	sub	r5,r5,r6
 1006698:	0013883a 	mov	r9,zero
 100669c:	1a000017 	ldw	r8,0(r3)
 10066a0:	3815883a 	mov	r10,r7
 10066a4:	39c00104 	addi	r7,r7,4
 10066a8:	4190983a 	sll	r8,r8,r6
 10066ac:	18c00104 	addi	r3,r3,4
 10066b0:	4a10b03a 	or	r8,r9,r8
 10066b4:	3a3fff15 	stw	r8,-4(r7)
 10066b8:	1a3fff17 	ldw	r8,-4(r3)
 10066bc:	4152d83a 	srl	r9,r8,r5
 10066c0:	193ff636 	bltu	r3,r4,100669c <__lshift+0xb0>
 10066c4:	52400115 	stw	r9,4(r10)
 10066c8:	48001a1e 	bne	r9,zero,1006734 <__lshift+0x148>
 10066cc:	843fffc4 	addi	r16,r16,-1
 10066d0:	14000415 	stw	r16,16(r2)
 10066d4:	88000826 	beq	r17,zero,10066f8 <__lshift+0x10c>
 10066d8:	89000117 	ldw	r4,4(r17)
 10066dc:	90c01317 	ldw	r3,76(r18)
 10066e0:	2109883a 	add	r4,r4,r4
 10066e4:	2109883a 	add	r4,r4,r4
 10066e8:	1907883a 	add	r3,r3,r4
 10066ec:	19000017 	ldw	r4,0(r3)
 10066f0:	89000015 	stw	r4,0(r17)
 10066f4:	1c400015 	stw	r17,0(r3)
 10066f8:	dfc00617 	ldw	ra,24(sp)
 10066fc:	dd400517 	ldw	r21,20(sp)
 1006700:	dd000417 	ldw	r20,16(sp)
 1006704:	dcc00317 	ldw	r19,12(sp)
 1006708:	dc800217 	ldw	r18,8(sp)
 100670c:	dc400117 	ldw	r17,4(sp)
 1006710:	dc000017 	ldw	r16,0(sp)
 1006714:	dec00704 	addi	sp,sp,28
 1006718:	f800283a 	ret
 100671c:	19400017 	ldw	r5,0(r3)
 1006720:	39c00104 	addi	r7,r7,4
 1006724:	18c00104 	addi	r3,r3,4
 1006728:	397fff15 	stw	r5,-4(r7)
 100672c:	193ffb36 	bltu	r3,r4,100671c <__lshift+0x130>
 1006730:	003fe606 	br	10066cc <__lshift+0xe0>
 1006734:	9c000084 	addi	r16,r19,2
 1006738:	003fe406 	br	10066cc <__lshift+0xe0>

0100673c <__mcmp>:
 100673c:	20800417 	ldw	r2,16(r4)
 1006740:	28c00417 	ldw	r3,16(r5)
 1006744:	10c5c83a 	sub	r2,r2,r3
 1006748:	1000111e 	bne	r2,zero,1006790 <__mcmp+0x54>
 100674c:	18c7883a 	add	r3,r3,r3
 1006750:	18c7883a 	add	r3,r3,r3
 1006754:	21000504 	addi	r4,r4,20
 1006758:	29400504 	addi	r5,r5,20
 100675c:	20c5883a 	add	r2,r4,r3
 1006760:	28cb883a 	add	r5,r5,r3
 1006764:	00000106 	br	100676c <__mcmp+0x30>
 1006768:	20800a2e 	bgeu	r4,r2,1006794 <__mcmp+0x58>
 100676c:	10bfff04 	addi	r2,r2,-4
 1006770:	297fff04 	addi	r5,r5,-4
 1006774:	11800017 	ldw	r6,0(r2)
 1006778:	28c00017 	ldw	r3,0(r5)
 100677c:	30fffa26 	beq	r6,r3,1006768 <__mcmp+0x2c>
 1006780:	30c00236 	bltu	r6,r3,100678c <__mcmp+0x50>
 1006784:	00800044 	movi	r2,1
 1006788:	f800283a 	ret
 100678c:	00bfffc4 	movi	r2,-1
 1006790:	f800283a 	ret
 1006794:	0005883a 	mov	r2,zero
 1006798:	f800283a 	ret

0100679c <__mdiff>:
 100679c:	defffb04 	addi	sp,sp,-20
 10067a0:	dc000015 	stw	r16,0(sp)
 10067a4:	2821883a 	mov	r16,r5
 10067a8:	dcc00315 	stw	r19,12(sp)
 10067ac:	300b883a 	mov	r5,r6
 10067b0:	2027883a 	mov	r19,r4
 10067b4:	8009883a 	mov	r4,r16
 10067b8:	dc800215 	stw	r18,8(sp)
 10067bc:	dfc00415 	stw	ra,16(sp)
 10067c0:	dc400115 	stw	r17,4(sp)
 10067c4:	3025883a 	mov	r18,r6
 10067c8:	100673c0 	call	100673c <__mcmp>
 10067cc:	10005226 	beq	r2,zero,1006918 <__mdiff+0x17c>
 10067d0:	10004c16 	blt	r2,zero,1006904 <__mdiff+0x168>
 10067d4:	0023883a 	mov	r17,zero
 10067d8:	81400117 	ldw	r5,4(r16)
 10067dc:	9809883a 	mov	r4,r19
 10067e0:	1005e680 	call	1005e68 <_Balloc>
 10067e4:	83400417 	ldw	r13,16(r16)
 10067e8:	93800417 	ldw	r14,16(r18)
 10067ec:	81000504 	addi	r4,r16,20
 10067f0:	6b59883a 	add	r12,r13,r13
 10067f4:	739d883a 	add	r14,r14,r14
 10067f8:	6319883a 	add	r12,r12,r12
 10067fc:	91800504 	addi	r6,r18,20
 1006800:	739d883a 	add	r14,r14,r14
 1006804:	14400315 	stw	r17,12(r2)
 1006808:	2319883a 	add	r12,r4,r12
 100680c:	339d883a 	add	r14,r6,r14
 1006810:	12400504 	addi	r9,r2,20
 1006814:	0007883a 	mov	r3,zero
 1006818:	22000017 	ldw	r8,0(r4)
 100681c:	32800017 	ldw	r10,0(r6)
 1006820:	4ac00104 	addi	r11,r9,4
 1006824:	41ffffcc 	andi	r7,r8,65535
 1006828:	38c7883a 	add	r3,r7,r3
 100682c:	51ffffcc 	andi	r7,r10,65535
 1006830:	19cfc83a 	sub	r7,r3,r7
 1006834:	4010d43a 	srli	r8,r8,16
 1006838:	5014d43a 	srli	r10,r10,16
 100683c:	3807d43a 	srai	r3,r7,16
 1006840:	39ffffcc 	andi	r7,r7,65535
 1006844:	4291c83a 	sub	r8,r8,r10
 1006848:	40c7883a 	add	r3,r8,r3
 100684c:	1810943a 	slli	r8,r3,16
 1006850:	31800104 	addi	r6,r6,4
 1006854:	21000104 	addi	r4,r4,4
 1006858:	41ceb03a 	or	r7,r8,r7
 100685c:	49c00015 	stw	r7,0(r9)
 1006860:	1807d43a 	srai	r3,r3,16
 1006864:	580b883a 	mov	r5,r11
 1006868:	5813883a 	mov	r9,r11
 100686c:	33bfea36 	bltu	r6,r14,1006818 <__mdiff+0x7c>
 1006870:	2011883a 	mov	r8,r4
 1006874:	2300152e 	bgeu	r4,r12,10068cc <__mdiff+0x130>
 1006878:	21400017 	ldw	r5,0(r4)
 100687c:	4a400104 	addi	r9,r9,4
 1006880:	21000104 	addi	r4,r4,4
 1006884:	29ffffcc 	andi	r7,r5,65535
 1006888:	38c7883a 	add	r3,r7,r3
 100688c:	280ad43a 	srli	r5,r5,16
 1006890:	180dd43a 	srai	r6,r3,16
 1006894:	19ffffcc 	andi	r7,r3,65535
 1006898:	3147883a 	add	r3,r6,r5
 100689c:	180a943a 	slli	r5,r3,16
 10068a0:	1807d43a 	srai	r3,r3,16
 10068a4:	29ceb03a 	or	r7,r5,r7
 10068a8:	49ffff15 	stw	r7,-4(r9)
 10068ac:	233ff236 	bltu	r4,r12,1006878 <__mdiff+0xdc>
 10068b0:	0206303a 	nor	r3,zero,r8
 10068b4:	1b07883a 	add	r3,r3,r12
 10068b8:	1806d0ba 	srli	r3,r3,2
 10068bc:	18c00044 	addi	r3,r3,1
 10068c0:	18c7883a 	add	r3,r3,r3
 10068c4:	18c7883a 	add	r3,r3,r3
 10068c8:	58cb883a 	add	r5,r11,r3
 10068cc:	28ffff04 	addi	r3,r5,-4
 10068d0:	3800041e 	bne	r7,zero,10068e4 <__mdiff+0x148>
 10068d4:	18ffff04 	addi	r3,r3,-4
 10068d8:	19000017 	ldw	r4,0(r3)
 10068dc:	6b7fffc4 	addi	r13,r13,-1
 10068e0:	203ffc26 	beq	r4,zero,10068d4 <__mdiff+0x138>
 10068e4:	13400415 	stw	r13,16(r2)
 10068e8:	dfc00417 	ldw	ra,16(sp)
 10068ec:	dcc00317 	ldw	r19,12(sp)
 10068f0:	dc800217 	ldw	r18,8(sp)
 10068f4:	dc400117 	ldw	r17,4(sp)
 10068f8:	dc000017 	ldw	r16,0(sp)
 10068fc:	dec00504 	addi	sp,sp,20
 1006900:	f800283a 	ret
 1006904:	8005883a 	mov	r2,r16
 1006908:	04400044 	movi	r17,1
 100690c:	9021883a 	mov	r16,r18
 1006910:	1025883a 	mov	r18,r2
 1006914:	003fb006 	br	10067d8 <__mdiff+0x3c>
 1006918:	9809883a 	mov	r4,r19
 100691c:	000b883a 	mov	r5,zero
 1006920:	1005e680 	call	1005e68 <_Balloc>
 1006924:	00c00044 	movi	r3,1
 1006928:	10c00415 	stw	r3,16(r2)
 100692c:	10000515 	stw	zero,20(r2)
 1006930:	003fed06 	br	10068e8 <__mdiff+0x14c>

01006934 <__ulp>:
 1006934:	295ffc2c 	andhi	r5,r5,32752
 1006938:	00bf3034 	movhi	r2,64704
 100693c:	2887883a 	add	r3,r5,r2
 1006940:	00c0020e 	bge	zero,r3,100694c <__ulp+0x18>
 1006944:	0005883a 	mov	r2,zero
 1006948:	f800283a 	ret
 100694c:	00c7c83a 	sub	r3,zero,r3
 1006950:	180bd53a 	srai	r5,r3,20
 1006954:	008004c4 	movi	r2,19
 1006958:	11400a0e 	bge	r2,r5,1006984 <__ulp+0x50>
 100695c:	00800c84 	movi	r2,50
 1006960:	0007883a 	mov	r3,zero
 1006964:	11400516 	blt	r2,r5,100697c <__ulp+0x48>
 1006968:	00800cc4 	movi	r2,51
 100696c:	114bc83a 	sub	r5,r2,r5
 1006970:	00800044 	movi	r2,1
 1006974:	1144983a 	sll	r2,r2,r5
 1006978:	f800283a 	ret
 100697c:	00800044 	movi	r2,1
 1006980:	f800283a 	ret
 1006984:	00800234 	movhi	r2,8
 1006988:	1147d83a 	sra	r3,r2,r5
 100698c:	0005883a 	mov	r2,zero
 1006990:	f800283a 	ret

01006994 <__b2d>:
 1006994:	defffa04 	addi	sp,sp,-24
 1006998:	dc000015 	stw	r16,0(sp)
 100699c:	24000417 	ldw	r16,16(r4)
 10069a0:	dc400115 	stw	r17,4(sp)
 10069a4:	24400504 	addi	r17,r4,20
 10069a8:	8421883a 	add	r16,r16,r16
 10069ac:	8421883a 	add	r16,r16,r16
 10069b0:	8c21883a 	add	r16,r17,r16
 10069b4:	dc800215 	stw	r18,8(sp)
 10069b8:	84bfff17 	ldw	r18,-4(r16)
 10069bc:	dd000415 	stw	r20,16(sp)
 10069c0:	dcc00315 	stw	r19,12(sp)
 10069c4:	9009883a 	mov	r4,r18
 10069c8:	2829883a 	mov	r20,r5
 10069cc:	dfc00515 	stw	ra,20(sp)
 10069d0:	100615c0 	call	100615c <__hi0bits>
 10069d4:	00c00804 	movi	r3,32
 10069d8:	1887c83a 	sub	r3,r3,r2
 10069dc:	a0c00015 	stw	r3,0(r20)
 10069e0:	00c00284 	movi	r3,10
 10069e4:	84ffff04 	addi	r19,r16,-4
 10069e8:	18801216 	blt	r3,r2,1006a34 <__b2d+0xa0>
 10069ec:	014002c4 	movi	r5,11
 10069f0:	2889c83a 	sub	r4,r5,r2
 10069f4:	9106d83a 	srl	r3,r18,r4
 10069f8:	18cffc34 	orhi	r3,r3,16368
 10069fc:	8cc0282e 	bgeu	r17,r19,1006aa0 <__b2d+0x10c>
 1006a00:	817ffe17 	ldw	r5,-8(r16)
 1006a04:	290ad83a 	srl	r5,r5,r4
 1006a08:	10800544 	addi	r2,r2,21
 1006a0c:	9084983a 	sll	r2,r18,r2
 1006a10:	2884b03a 	or	r2,r5,r2
 1006a14:	dfc00517 	ldw	ra,20(sp)
 1006a18:	dd000417 	ldw	r20,16(sp)
 1006a1c:	dcc00317 	ldw	r19,12(sp)
 1006a20:	dc800217 	ldw	r18,8(sp)
 1006a24:	dc400117 	ldw	r17,4(sp)
 1006a28:	dc000017 	ldw	r16,0(sp)
 1006a2c:	dec00604 	addi	sp,sp,24
 1006a30:	f800283a 	ret
 1006a34:	113ffd44 	addi	r4,r2,-11
 1006a38:	8cc00f2e 	bgeu	r17,r19,1006a78 <__b2d+0xe4>
 1006a3c:	81bffe04 	addi	r6,r16,-8
 1006a40:	817ffe17 	ldw	r5,-8(r16)
 1006a44:	20001326 	beq	r4,zero,1006a94 <__b2d+0x100>
 1006a48:	00c00ac4 	movi	r3,43
 1006a4c:	1885c83a 	sub	r2,r3,r2
 1006a50:	2886d83a 	srl	r3,r5,r2
 1006a54:	9124983a 	sll	r18,r18,r4
 1006a58:	90e4b03a 	or	r18,r18,r3
 1006a5c:	90cffc34 	orhi	r3,r18,16368
 1006a60:	8980112e 	bgeu	r17,r6,1006aa8 <__b2d+0x114>
 1006a64:	81bffd17 	ldw	r6,-12(r16)
 1006a68:	308cd83a 	srl	r6,r6,r2
 1006a6c:	2904983a 	sll	r2,r5,r4
 1006a70:	1184b03a 	or	r2,r2,r6
 1006a74:	003fe706 	br	1006a14 <__b2d+0x80>
 1006a78:	20000526 	beq	r4,zero,1006a90 <__b2d+0xfc>
 1006a7c:	9124983a 	sll	r18,r18,r4
 1006a80:	000d883a 	mov	r6,zero
 1006a84:	000b883a 	mov	r5,zero
 1006a88:	90cffc34 	orhi	r3,r18,16368
 1006a8c:	003ff706 	br	1006a6c <__b2d+0xd8>
 1006a90:	000b883a 	mov	r5,zero
 1006a94:	90cffc34 	orhi	r3,r18,16368
 1006a98:	2805883a 	mov	r2,r5
 1006a9c:	003fdd06 	br	1006a14 <__b2d+0x80>
 1006aa0:	000b883a 	mov	r5,zero
 1006aa4:	003fd806 	br	1006a08 <__b2d+0x74>
 1006aa8:	000d883a 	mov	r6,zero
 1006aac:	003fef06 	br	1006a6c <__b2d+0xd8>

01006ab0 <__d2b>:
 1006ab0:	defff704 	addi	sp,sp,-36
 1006ab4:	dc000215 	stw	r16,8(sp)
 1006ab8:	3021883a 	mov	r16,r6
 1006abc:	dc400315 	stw	r17,12(sp)
 1006ac0:	8022907a 	slli	r17,r16,1
 1006ac4:	dd400715 	stw	r21,28(sp)
 1006ac8:	282b883a 	mov	r21,r5
 1006acc:	01400044 	movi	r5,1
 1006ad0:	dd000615 	stw	r20,24(sp)
 1006ad4:	dcc00515 	stw	r19,20(sp)
 1006ad8:	dc800415 	stw	r18,16(sp)
 1006adc:	dfc00815 	stw	ra,32(sp)
 1006ae0:	3829883a 	mov	r20,r7
 1006ae4:	dc800917 	ldw	r18,36(sp)
 1006ae8:	8822d57a 	srli	r17,r17,21
 1006aec:	1005e680 	call	1005e68 <_Balloc>
 1006af0:	1027883a 	mov	r19,r2
 1006af4:	00800434 	movhi	r2,16
 1006af8:	10bfffc4 	addi	r2,r2,-1
 1006afc:	808c703a 	and	r6,r16,r2
 1006b00:	88000126 	beq	r17,zero,1006b08 <__d2b+0x58>
 1006b04:	31800434 	orhi	r6,r6,16
 1006b08:	d9800015 	stw	r6,0(sp)
 1006b0c:	a8001f26 	beq	r21,zero,1006b8c <__d2b+0xdc>
 1006b10:	d9000104 	addi	r4,sp,4
 1006b14:	dd400115 	stw	r21,4(sp)
 1006b18:	10061c40 	call	10061c4 <__lo0bits>
 1006b1c:	d8c00017 	ldw	r3,0(sp)
 1006b20:	1000291e 	bne	r2,zero,1006bc8 <__d2b+0x118>
 1006b24:	d9000117 	ldw	r4,4(sp)
 1006b28:	99000515 	stw	r4,20(r19)
 1006b2c:	1820c03a 	cmpne	r16,r3,zero
 1006b30:	84000044 	addi	r16,r16,1
 1006b34:	98c00615 	stw	r3,24(r19)
 1006b38:	9c000415 	stw	r16,16(r19)
 1006b3c:	88001b1e 	bne	r17,zero,1006bac <__d2b+0xfc>
 1006b40:	800690ba 	slli	r3,r16,2
 1006b44:	10bef384 	addi	r2,r2,-1074
 1006b48:	a0800015 	stw	r2,0(r20)
 1006b4c:	98c5883a 	add	r2,r19,r3
 1006b50:	11000417 	ldw	r4,16(r2)
 1006b54:	8020917a 	slli	r16,r16,5
 1006b58:	100615c0 	call	100615c <__hi0bits>
 1006b5c:	8085c83a 	sub	r2,r16,r2
 1006b60:	90800015 	stw	r2,0(r18)
 1006b64:	9805883a 	mov	r2,r19
 1006b68:	dfc00817 	ldw	ra,32(sp)
 1006b6c:	dd400717 	ldw	r21,28(sp)
 1006b70:	dd000617 	ldw	r20,24(sp)
 1006b74:	dcc00517 	ldw	r19,20(sp)
 1006b78:	dc800417 	ldw	r18,16(sp)
 1006b7c:	dc400317 	ldw	r17,12(sp)
 1006b80:	dc000217 	ldw	r16,8(sp)
 1006b84:	dec00904 	addi	sp,sp,36
 1006b88:	f800283a 	ret
 1006b8c:	d809883a 	mov	r4,sp
 1006b90:	10061c40 	call	10061c4 <__lo0bits>
 1006b94:	d8c00017 	ldw	r3,0(sp)
 1006b98:	04000044 	movi	r16,1
 1006b9c:	9c000415 	stw	r16,16(r19)
 1006ba0:	98c00515 	stw	r3,20(r19)
 1006ba4:	10800804 	addi	r2,r2,32
 1006ba8:	883fe526 	beq	r17,zero,1006b40 <__d2b+0x90>
 1006bac:	8c7ef344 	addi	r17,r17,-1075
 1006bb0:	88a3883a 	add	r17,r17,r2
 1006bb4:	00c00d44 	movi	r3,53
 1006bb8:	a4400015 	stw	r17,0(r20)
 1006bbc:	1885c83a 	sub	r2,r3,r2
 1006bc0:	90800015 	stw	r2,0(r18)
 1006bc4:	003fe706 	br	1006b64 <__d2b+0xb4>
 1006bc8:	01000804 	movi	r4,32
 1006bcc:	2089c83a 	sub	r4,r4,r2
 1006bd0:	1908983a 	sll	r4,r3,r4
 1006bd4:	d9400117 	ldw	r5,4(sp)
 1006bd8:	1886d83a 	srl	r3,r3,r2
 1006bdc:	2148b03a 	or	r4,r4,r5
 1006be0:	99000515 	stw	r4,20(r19)
 1006be4:	d8c00015 	stw	r3,0(sp)
 1006be8:	003fd006 	br	1006b2c <__d2b+0x7c>

01006bec <__ratio>:
 1006bec:	defff904 	addi	sp,sp,-28
 1006bf0:	dc400315 	stw	r17,12(sp)
 1006bf4:	2823883a 	mov	r17,r5
 1006bf8:	d9400104 	addi	r5,sp,4
 1006bfc:	dfc00615 	stw	ra,24(sp)
 1006c00:	dcc00515 	stw	r19,20(sp)
 1006c04:	dc800415 	stw	r18,16(sp)
 1006c08:	2027883a 	mov	r19,r4
 1006c0c:	dc000215 	stw	r16,8(sp)
 1006c10:	10069940 	call	1006994 <__b2d>
 1006c14:	8809883a 	mov	r4,r17
 1006c18:	d80b883a 	mov	r5,sp
 1006c1c:	1025883a 	mov	r18,r2
 1006c20:	1821883a 	mov	r16,r3
 1006c24:	10069940 	call	1006994 <__b2d>
 1006c28:	8a400417 	ldw	r9,16(r17)
 1006c2c:	9a000417 	ldw	r8,16(r19)
 1006c30:	100d883a 	mov	r6,r2
 1006c34:	d8800017 	ldw	r2,0(sp)
 1006c38:	4251c83a 	sub	r8,r8,r9
 1006c3c:	4012917a 	slli	r9,r8,5
 1006c40:	da000117 	ldw	r8,4(sp)
 1006c44:	4091c83a 	sub	r8,r8,r2
 1006c48:	4251883a 	add	r8,r8,r9
 1006c4c:	02000d0e 	bge	zero,r8,1006c84 <__ratio+0x98>
 1006c50:	4010953a 	slli	r8,r8,20
 1006c54:	4421883a 	add	r16,r8,r16
 1006c58:	9009883a 	mov	r4,r18
 1006c5c:	800b883a 	mov	r5,r16
 1006c60:	180f883a 	mov	r7,r3
 1006c64:	100a8ec0 	call	100a8ec <__divdf3>
 1006c68:	dfc00617 	ldw	ra,24(sp)
 1006c6c:	dcc00517 	ldw	r19,20(sp)
 1006c70:	dc800417 	ldw	r18,16(sp)
 1006c74:	dc400317 	ldw	r17,12(sp)
 1006c78:	dc000217 	ldw	r16,8(sp)
 1006c7c:	dec00704 	addi	sp,sp,28
 1006c80:	f800283a 	ret
 1006c84:	4010953a 	slli	r8,r8,20
 1006c88:	1a07c83a 	sub	r3,r3,r8
 1006c8c:	003ff206 	br	1006c58 <__ratio+0x6c>

01006c90 <_mprec_log10>:
 1006c90:	defffe04 	addi	sp,sp,-8
 1006c94:	dc000015 	stw	r16,0(sp)
 1006c98:	dfc00115 	stw	ra,4(sp)
 1006c9c:	008005c4 	movi	r2,23
 1006ca0:	2021883a 	mov	r16,r4
 1006ca4:	11000d0e 	bge	r2,r4,1006cdc <_mprec_log10+0x4c>
 1006ca8:	0005883a 	mov	r2,zero
 1006cac:	00cffc34 	movhi	r3,16368
 1006cb0:	843fffc4 	addi	r16,r16,-1
 1006cb4:	1009883a 	mov	r4,r2
 1006cb8:	180b883a 	mov	r5,r3
 1006cbc:	000d883a 	mov	r6,zero
 1006cc0:	01d00934 	movhi	r7,16420
 1006cc4:	100b3fc0 	call	100b3fc <__muldf3>
 1006cc8:	803ff91e 	bne	r16,zero,1006cb0 <_mprec_log10+0x20>
 1006ccc:	dfc00117 	ldw	ra,4(sp)
 1006cd0:	dc000017 	ldw	r16,0(sp)
 1006cd4:	dec00204 	addi	sp,sp,8
 1006cd8:	f800283a 	ret
 1006cdc:	202090fa 	slli	r16,r4,3
 1006ce0:	00804074 	movhi	r2,257
 1006ce4:	10bb8804 	addi	r2,r2,-4576
 1006ce8:	1421883a 	add	r16,r2,r16
 1006cec:	80800017 	ldw	r2,0(r16)
 1006cf0:	80c00117 	ldw	r3,4(r16)
 1006cf4:	dfc00117 	ldw	ra,4(sp)
 1006cf8:	dc000017 	ldw	r16,0(sp)
 1006cfc:	dec00204 	addi	sp,sp,8
 1006d00:	f800283a 	ret

01006d04 <__copybits>:
 1006d04:	297fffc4 	addi	r5,r5,-1
 1006d08:	280fd17a 	srai	r7,r5,5
 1006d0c:	30c00417 	ldw	r3,16(r6)
 1006d10:	30800504 	addi	r2,r6,20
 1006d14:	39c00044 	addi	r7,r7,1
 1006d18:	18c7883a 	add	r3,r3,r3
 1006d1c:	39cf883a 	add	r7,r7,r7
 1006d20:	18c7883a 	add	r3,r3,r3
 1006d24:	39cf883a 	add	r7,r7,r7
 1006d28:	10c7883a 	add	r3,r2,r3
 1006d2c:	21cf883a 	add	r7,r4,r7
 1006d30:	10c00d2e 	bgeu	r2,r3,1006d68 <__copybits+0x64>
 1006d34:	200b883a 	mov	r5,r4
 1006d38:	12000017 	ldw	r8,0(r2)
 1006d3c:	29400104 	addi	r5,r5,4
 1006d40:	10800104 	addi	r2,r2,4
 1006d44:	2a3fff15 	stw	r8,-4(r5)
 1006d48:	10fffb36 	bltu	r2,r3,1006d38 <__copybits+0x34>
 1006d4c:	1985c83a 	sub	r2,r3,r6
 1006d50:	10bffac4 	addi	r2,r2,-21
 1006d54:	1004d0ba 	srli	r2,r2,2
 1006d58:	10800044 	addi	r2,r2,1
 1006d5c:	1085883a 	add	r2,r2,r2
 1006d60:	1085883a 	add	r2,r2,r2
 1006d64:	2089883a 	add	r4,r4,r2
 1006d68:	21c0032e 	bgeu	r4,r7,1006d78 <__copybits+0x74>
 1006d6c:	20000015 	stw	zero,0(r4)
 1006d70:	21000104 	addi	r4,r4,4
 1006d74:	21fffd36 	bltu	r4,r7,1006d6c <__copybits+0x68>
 1006d78:	f800283a 	ret

01006d7c <__any_on>:
 1006d7c:	20c00417 	ldw	r3,16(r4)
 1006d80:	2805d17a 	srai	r2,r5,5
 1006d84:	21000504 	addi	r4,r4,20
 1006d88:	18800d0e 	bge	r3,r2,1006dc0 <__any_on+0x44>
 1006d8c:	18c7883a 	add	r3,r3,r3
 1006d90:	18c7883a 	add	r3,r3,r3
 1006d94:	20c7883a 	add	r3,r4,r3
 1006d98:	20c0192e 	bgeu	r4,r3,1006e00 <__any_on+0x84>
 1006d9c:	18bfff17 	ldw	r2,-4(r3)
 1006da0:	18ffff04 	addi	r3,r3,-4
 1006da4:	1000041e 	bne	r2,zero,1006db8 <__any_on+0x3c>
 1006da8:	20c0142e 	bgeu	r4,r3,1006dfc <__any_on+0x80>
 1006dac:	18ffff04 	addi	r3,r3,-4
 1006db0:	19400017 	ldw	r5,0(r3)
 1006db4:	283ffc26 	beq	r5,zero,1006da8 <__any_on+0x2c>
 1006db8:	00800044 	movi	r2,1
 1006dbc:	f800283a 	ret
 1006dc0:	10c00a0e 	bge	r2,r3,1006dec <__any_on+0x70>
 1006dc4:	1085883a 	add	r2,r2,r2
 1006dc8:	1085883a 	add	r2,r2,r2
 1006dcc:	294007cc 	andi	r5,r5,31
 1006dd0:	2087883a 	add	r3,r4,r2
 1006dd4:	283ff026 	beq	r5,zero,1006d98 <__any_on+0x1c>
 1006dd8:	19800017 	ldw	r6,0(r3)
 1006ddc:	3144d83a 	srl	r2,r6,r5
 1006de0:	114a983a 	sll	r5,r2,r5
 1006de4:	29bff41e 	bne	r5,r6,1006db8 <__any_on+0x3c>
 1006de8:	003feb06 	br	1006d98 <__any_on+0x1c>
 1006dec:	1085883a 	add	r2,r2,r2
 1006df0:	1085883a 	add	r2,r2,r2
 1006df4:	2087883a 	add	r3,r4,r2
 1006df8:	003fe706 	br	1006d98 <__any_on+0x1c>
 1006dfc:	f800283a 	ret
 1006e00:	0005883a 	mov	r2,zero
 1006e04:	f800283a 	ret

01006e08 <_realloc_r>:
 1006e08:	defff604 	addi	sp,sp,-40
 1006e0c:	dd000415 	stw	r20,16(sp)
 1006e10:	dc400115 	stw	r17,4(sp)
 1006e14:	dfc00915 	stw	ra,36(sp)
 1006e18:	df000815 	stw	fp,32(sp)
 1006e1c:	ddc00715 	stw	r23,28(sp)
 1006e20:	dd800615 	stw	r22,24(sp)
 1006e24:	dd400515 	stw	r21,20(sp)
 1006e28:	dcc00315 	stw	r19,12(sp)
 1006e2c:	dc800215 	stw	r18,8(sp)
 1006e30:	dc000015 	stw	r16,0(sp)
 1006e34:	2829883a 	mov	r20,r5
 1006e38:	3023883a 	mov	r17,r6
 1006e3c:	2800ad26 	beq	r5,zero,10070f4 <_realloc_r+0x2ec>
 1006e40:	2025883a 	mov	r18,r4
 1006e44:	100cc100 	call	100cc10 <__malloc_lock>
 1006e48:	a0ffff17 	ldw	r3,-4(r20)
 1006e4c:	043fff04 	movi	r16,-4
 1006e50:	890002c4 	addi	r4,r17,11
 1006e54:	01c00584 	movi	r7,22
 1006e58:	a57ffe04 	addi	r21,r20,-8
 1006e5c:	1c20703a 	and	r16,r3,r16
 1006e60:	39001d2e 	bgeu	r7,r4,1006ed8 <_realloc_r+0xd0>
 1006e64:	05bffe04 	movi	r22,-8
 1006e68:	25ac703a 	and	r22,r4,r22
 1006e6c:	b00f883a 	mov	r7,r22
 1006e70:	b0006516 	blt	r22,zero,1007008 <_realloc_r+0x200>
 1006e74:	b4406436 	bltu	r22,r17,1007008 <_realloc_r+0x200>
 1006e78:	81c01a0e 	bge	r16,r7,1006ee4 <_realloc_r+0xdc>
 1006e7c:	07004074 	movhi	fp,257
 1006e80:	e73d3404 	addi	fp,fp,-2864
 1006e84:	e1400217 	ldw	r5,8(fp)
 1006e88:	ac11883a 	add	r8,r21,r16
 1006e8c:	2a006226 	beq	r5,r8,1007018 <_realloc_r+0x210>
 1006e90:	41800117 	ldw	r6,4(r8)
 1006e94:	027fff84 	movi	r9,-2
 1006e98:	3252703a 	and	r9,r6,r9
 1006e9c:	4253883a 	add	r9,r8,r9
 1006ea0:	49000117 	ldw	r4,4(r9)
 1006ea4:	2100004c 	andi	r4,r4,1
 1006ea8:	2000281e 	bne	r4,zero,1006f4c <_realloc_r+0x144>
 1006eac:	00bfff04 	movi	r2,-4
 1006eb0:	3084703a 	and	r2,r6,r2
 1006eb4:	1409883a 	add	r4,r2,r16
 1006eb8:	21c05e16 	blt	r4,r7,1007034 <_realloc_r+0x22c>
 1006ebc:	40800317 	ldw	r2,12(r8)
 1006ec0:	41400217 	ldw	r5,8(r8)
 1006ec4:	a023883a 	mov	r17,r20
 1006ec8:	2021883a 	mov	r16,r4
 1006ecc:	28800315 	stw	r2,12(r5)
 1006ed0:	11400215 	stw	r5,8(r2)
 1006ed4:	00000406 	br	1006ee8 <_realloc_r+0xe0>
 1006ed8:	01c00404 	movi	r7,16
 1006edc:	382d883a 	mov	r22,r7
 1006ee0:	003fe406 	br	1006e74 <_realloc_r+0x6c>
 1006ee4:	a023883a 	mov	r17,r20
 1006ee8:	858fc83a 	sub	r7,r16,r22
 1006eec:	008003c4 	movi	r2,15
 1006ef0:	18c0004c 	andi	r3,r3,1
 1006ef4:	11c07236 	bltu	r2,r7,10070c0 <_realloc_r+0x2b8>
 1006ef8:	1c06b03a 	or	r3,r3,r16
 1006efc:	a8c00115 	stw	r3,4(r21)
 1006f00:	ac21883a 	add	r16,r21,r16
 1006f04:	80800117 	ldw	r2,4(r16)
 1006f08:	10800054 	ori	r2,r2,1
 1006f0c:	80800115 	stw	r2,4(r16)
 1006f10:	9009883a 	mov	r4,r18
 1006f14:	100cc300 	call	100cc30 <__malloc_unlock>
 1006f18:	8805883a 	mov	r2,r17
 1006f1c:	dfc00917 	ldw	ra,36(sp)
 1006f20:	df000817 	ldw	fp,32(sp)
 1006f24:	ddc00717 	ldw	r23,28(sp)
 1006f28:	dd800617 	ldw	r22,24(sp)
 1006f2c:	dd400517 	ldw	r21,20(sp)
 1006f30:	dd000417 	ldw	r20,16(sp)
 1006f34:	dcc00317 	ldw	r19,12(sp)
 1006f38:	dc800217 	ldw	r18,8(sp)
 1006f3c:	dc400117 	ldw	r17,4(sp)
 1006f40:	dc000017 	ldw	r16,0(sp)
 1006f44:	dec00a04 	addi	sp,sp,40
 1006f48:	f800283a 	ret
 1006f4c:	18c0004c 	andi	r3,r3,1
 1006f50:	1800081e 	bne	r3,zero,1006f74 <_realloc_r+0x16c>
 1006f54:	a4fffe17 	ldw	r19,-8(r20)
 1006f58:	00bfff04 	movi	r2,-4
 1006f5c:	ace7c83a 	sub	r19,r21,r19
 1006f60:	98c00117 	ldw	r3,4(r19)
 1006f64:	1886703a 	and	r3,r3,r2
 1006f68:	98000226 	beq	r19,zero,1006f74 <_realloc_r+0x16c>
 1006f6c:	1c2f883a 	add	r23,r3,r16
 1006f70:	b9c06d0e 	bge	r23,r7,1007128 <_realloc_r+0x320>
 1006f74:	880b883a 	mov	r5,r17
 1006f78:	9009883a 	mov	r4,r18
 1006f7c:	10052200 	call	1005220 <_malloc_r>
 1006f80:	1023883a 	mov	r17,r2
 1006f84:	1000ef26 	beq	r2,zero,1007344 <_realloc_r+0x53c>
 1006f88:	a0ffff17 	ldw	r3,-4(r20)
 1006f8c:	113ffe04 	addi	r4,r2,-8
 1006f90:	00bfff84 	movi	r2,-2
 1006f94:	1884703a 	and	r2,r3,r2
 1006f98:	a885883a 	add	r2,r21,r2
 1006f9c:	2080bf26 	beq	r4,r2,100729c <_realloc_r+0x494>
 1006fa0:	81bfff04 	addi	r6,r16,-4
 1006fa4:	00800904 	movi	r2,36
 1006fa8:	11808936 	bltu	r2,r6,10071d0 <_realloc_r+0x3c8>
 1006fac:	00c004c4 	movi	r3,19
 1006fb0:	19806c2e 	bgeu	r3,r6,1007164 <_realloc_r+0x35c>
 1006fb4:	a0c00017 	ldw	r3,0(r20)
 1006fb8:	88c00015 	stw	r3,0(r17)
 1006fbc:	a0c00117 	ldw	r3,4(r20)
 1006fc0:	88c00115 	stw	r3,4(r17)
 1006fc4:	00c006c4 	movi	r3,27
 1006fc8:	1980ac36 	bltu	r3,r6,100727c <_realloc_r+0x474>
 1006fcc:	88800204 	addi	r2,r17,8
 1006fd0:	a0c00204 	addi	r3,r20,8
 1006fd4:	19000017 	ldw	r4,0(r3)
 1006fd8:	11000015 	stw	r4,0(r2)
 1006fdc:	19000117 	ldw	r4,4(r3)
 1006fe0:	11000115 	stw	r4,4(r2)
 1006fe4:	18c00217 	ldw	r3,8(r3)
 1006fe8:	10c00215 	stw	r3,8(r2)
 1006fec:	a00b883a 	mov	r5,r20
 1006ff0:	9009883a 	mov	r4,r18
 1006ff4:	10046500 	call	1004650 <_free_r>
 1006ff8:	9009883a 	mov	r4,r18
 1006ffc:	100cc300 	call	100cc30 <__malloc_unlock>
 1007000:	8805883a 	mov	r2,r17
 1007004:	003fc506 	br	1006f1c <_realloc_r+0x114>
 1007008:	00800304 	movi	r2,12
 100700c:	90800015 	stw	r2,0(r18)
 1007010:	0005883a 	mov	r2,zero
 1007014:	003fc106 	br	1006f1c <_realloc_r+0x114>
 1007018:	29800117 	ldw	r6,4(r5)
 100701c:	00bfff04 	movi	r2,-4
 1007020:	b1000404 	addi	r4,r22,16
 1007024:	3084703a 	and	r2,r6,r2
 1007028:	140d883a 	add	r6,r2,r16
 100702c:	31005b0e 	bge	r6,r4,100719c <_realloc_r+0x394>
 1007030:	2811883a 	mov	r8,r5
 1007034:	18c0004c 	andi	r3,r3,1
 1007038:	183fce1e 	bne	r3,zero,1006f74 <_realloc_r+0x16c>
 100703c:	a4fffe17 	ldw	r19,-8(r20)
 1007040:	00ffff04 	movi	r3,-4
 1007044:	ace7c83a 	sub	r19,r21,r19
 1007048:	99000117 	ldw	r4,4(r19)
 100704c:	20c6703a 	and	r3,r4,r3
 1007050:	403fc526 	beq	r8,zero,1006f68 <_realloc_r+0x160>
 1007054:	1c2f883a 	add	r23,r3,r16
 1007058:	b8af883a 	add	r23,r23,r2
 100705c:	41406026 	beq	r8,r5,10071e0 <_realloc_r+0x3d8>
 1007060:	b9ffc116 	blt	r23,r7,1006f68 <_realloc_r+0x160>
 1007064:	40c00217 	ldw	r3,8(r8)
 1007068:	40800317 	ldw	r2,12(r8)
 100706c:	81bfff04 	addi	r6,r16,-4
 1007070:	01000904 	movi	r4,36
 1007074:	18800315 	stw	r2,12(r3)
 1007078:	10c00215 	stw	r3,8(r2)
 100707c:	99400217 	ldw	r5,8(r19)
 1007080:	98c00317 	ldw	r3,12(r19)
 1007084:	9c400204 	addi	r17,r19,8
 1007088:	28c00315 	stw	r3,12(r5)
 100708c:	19400215 	stw	r5,8(r3)
 1007090:	21802d36 	bltu	r4,r6,1007148 <_realloc_r+0x340>
 1007094:	008004c4 	movi	r2,19
 1007098:	1180352e 	bgeu	r2,r6,1007170 <_realloc_r+0x368>
 100709c:	a0800017 	ldw	r2,0(r20)
 10070a0:	98800215 	stw	r2,8(r19)
 10070a4:	a0800117 	ldw	r2,4(r20)
 10070a8:	98800315 	stw	r2,12(r19)
 10070ac:	008006c4 	movi	r2,27
 10070b0:	11808036 	bltu	r2,r6,10072b4 <_realloc_r+0x4ac>
 10070b4:	98c00404 	addi	r3,r19,16
 10070b8:	a5000204 	addi	r20,r20,8
 10070bc:	00002d06 	br	1007174 <_realloc_r+0x36c>
 10070c0:	1d86b03a 	or	r3,r3,r22
 10070c4:	ad8b883a 	add	r5,r21,r22
 10070c8:	a8c00115 	stw	r3,4(r21)
 10070cc:	38800054 	ori	r2,r7,1
 10070d0:	28800115 	stw	r2,4(r5)
 10070d4:	29cf883a 	add	r7,r5,r7
 10070d8:	38800117 	ldw	r2,4(r7)
 10070dc:	9009883a 	mov	r4,r18
 10070e0:	29400204 	addi	r5,r5,8
 10070e4:	10800054 	ori	r2,r2,1
 10070e8:	38800115 	stw	r2,4(r7)
 10070ec:	10046500 	call	1004650 <_free_r>
 10070f0:	003f8706 	br	1006f10 <_realloc_r+0x108>
 10070f4:	300b883a 	mov	r5,r6
 10070f8:	dfc00917 	ldw	ra,36(sp)
 10070fc:	df000817 	ldw	fp,32(sp)
 1007100:	ddc00717 	ldw	r23,28(sp)
 1007104:	dd800617 	ldw	r22,24(sp)
 1007108:	dd400517 	ldw	r21,20(sp)
 100710c:	dd000417 	ldw	r20,16(sp)
 1007110:	dcc00317 	ldw	r19,12(sp)
 1007114:	dc800217 	ldw	r18,8(sp)
 1007118:	dc400117 	ldw	r17,4(sp)
 100711c:	dc000017 	ldw	r16,0(sp)
 1007120:	dec00a04 	addi	sp,sp,40
 1007124:	10052201 	jmpi	1005220 <_malloc_r>
 1007128:	98800317 	ldw	r2,12(r19)
 100712c:	98c00217 	ldw	r3,8(r19)
 1007130:	81bfff04 	addi	r6,r16,-4
 1007134:	01000904 	movi	r4,36
 1007138:	18800315 	stw	r2,12(r3)
 100713c:	10c00215 	stw	r3,8(r2)
 1007140:	9c400204 	addi	r17,r19,8
 1007144:	21bfd32e 	bgeu	r4,r6,1007094 <_realloc_r+0x28c>
 1007148:	8809883a 	mov	r4,r17
 100714c:	a00b883a 	mov	r5,r20
 1007150:	1005be80 	call	1005be8 <memmove>
 1007154:	98c00117 	ldw	r3,4(r19)
 1007158:	b821883a 	mov	r16,r23
 100715c:	982b883a 	mov	r21,r19
 1007160:	003f6106 	br	1006ee8 <_realloc_r+0xe0>
 1007164:	8805883a 	mov	r2,r17
 1007168:	a007883a 	mov	r3,r20
 100716c:	003f9906 	br	1006fd4 <_realloc_r+0x1cc>
 1007170:	8807883a 	mov	r3,r17
 1007174:	a0800017 	ldw	r2,0(r20)
 1007178:	b821883a 	mov	r16,r23
 100717c:	982b883a 	mov	r21,r19
 1007180:	18800015 	stw	r2,0(r3)
 1007184:	a0800117 	ldw	r2,4(r20)
 1007188:	18800115 	stw	r2,4(r3)
 100718c:	a0800217 	ldw	r2,8(r20)
 1007190:	18800215 	stw	r2,8(r3)
 1007194:	98c00117 	ldw	r3,4(r19)
 1007198:	003f5306 	br	1006ee8 <_realloc_r+0xe0>
 100719c:	adab883a 	add	r21,r21,r22
 10071a0:	3585c83a 	sub	r2,r6,r22
 10071a4:	e5400215 	stw	r21,8(fp)
 10071a8:	10800054 	ori	r2,r2,1
 10071ac:	a8800115 	stw	r2,4(r21)
 10071b0:	a0bfff17 	ldw	r2,-4(r20)
 10071b4:	9009883a 	mov	r4,r18
 10071b8:	1080004c 	andi	r2,r2,1
 10071bc:	b0acb03a 	or	r22,r22,r2
 10071c0:	a5bfff15 	stw	r22,-4(r20)
 10071c4:	100cc300 	call	100cc30 <__malloc_unlock>
 10071c8:	a005883a 	mov	r2,r20
 10071cc:	003f5306 	br	1006f1c <_realloc_r+0x114>
 10071d0:	8809883a 	mov	r4,r17
 10071d4:	a00b883a 	mov	r5,r20
 10071d8:	1005be80 	call	1005be8 <memmove>
 10071dc:	003f8306 	br	1006fec <_realloc_r+0x1e4>
 10071e0:	b0800404 	addi	r2,r22,16
 10071e4:	b8bf6016 	blt	r23,r2,1006f68 <_realloc_r+0x160>
 10071e8:	98800317 	ldw	r2,12(r19)
 10071ec:	98c00217 	ldw	r3,8(r19)
 10071f0:	81bfff04 	addi	r6,r16,-4
 10071f4:	01000904 	movi	r4,36
 10071f8:	18800315 	stw	r2,12(r3)
 10071fc:	10c00215 	stw	r3,8(r2)
 1007200:	9c400204 	addi	r17,r19,8
 1007204:	21804336 	bltu	r4,r6,1007314 <_realloc_r+0x50c>
 1007208:	008004c4 	movi	r2,19
 100720c:	11803f2e 	bgeu	r2,r6,100730c <_realloc_r+0x504>
 1007210:	a0800017 	ldw	r2,0(r20)
 1007214:	98800215 	stw	r2,8(r19)
 1007218:	a0800117 	ldw	r2,4(r20)
 100721c:	98800315 	stw	r2,12(r19)
 1007220:	008006c4 	movi	r2,27
 1007224:	11803f36 	bltu	r2,r6,1007324 <_realloc_r+0x51c>
 1007228:	98800404 	addi	r2,r19,16
 100722c:	a5000204 	addi	r20,r20,8
 1007230:	a0c00017 	ldw	r3,0(r20)
 1007234:	10c00015 	stw	r3,0(r2)
 1007238:	a0c00117 	ldw	r3,4(r20)
 100723c:	10c00115 	stw	r3,4(r2)
 1007240:	a0c00217 	ldw	r3,8(r20)
 1007244:	10c00215 	stw	r3,8(r2)
 1007248:	9d87883a 	add	r3,r19,r22
 100724c:	bd85c83a 	sub	r2,r23,r22
 1007250:	e0c00215 	stw	r3,8(fp)
 1007254:	10800054 	ori	r2,r2,1
 1007258:	18800115 	stw	r2,4(r3)
 100725c:	98800117 	ldw	r2,4(r19)
 1007260:	9009883a 	mov	r4,r18
 1007264:	1080004c 	andi	r2,r2,1
 1007268:	b0acb03a 	or	r22,r22,r2
 100726c:	9d800115 	stw	r22,4(r19)
 1007270:	100cc300 	call	100cc30 <__malloc_unlock>
 1007274:	8805883a 	mov	r2,r17
 1007278:	003f2806 	br	1006f1c <_realloc_r+0x114>
 100727c:	a0c00217 	ldw	r3,8(r20)
 1007280:	88c00215 	stw	r3,8(r17)
 1007284:	a0c00317 	ldw	r3,12(r20)
 1007288:	88c00315 	stw	r3,12(r17)
 100728c:	30801126 	beq	r6,r2,10072d4 <_realloc_r+0x4cc>
 1007290:	88800404 	addi	r2,r17,16
 1007294:	a0c00404 	addi	r3,r20,16
 1007298:	003f4e06 	br	1006fd4 <_realloc_r+0x1cc>
 100729c:	893fff17 	ldw	r4,-4(r17)
 10072a0:	00bfff04 	movi	r2,-4
 10072a4:	a023883a 	mov	r17,r20
 10072a8:	2084703a 	and	r2,r4,r2
 10072ac:	80a1883a 	add	r16,r16,r2
 10072b0:	003f0d06 	br	1006ee8 <_realloc_r+0xe0>
 10072b4:	a0800217 	ldw	r2,8(r20)
 10072b8:	98800415 	stw	r2,16(r19)
 10072bc:	a0800317 	ldw	r2,12(r20)
 10072c0:	98800515 	stw	r2,20(r19)
 10072c4:	31000a26 	beq	r6,r4,10072f0 <_realloc_r+0x4e8>
 10072c8:	98c00604 	addi	r3,r19,24
 10072cc:	a5000404 	addi	r20,r20,16
 10072d0:	003fa806 	br	1007174 <_realloc_r+0x36c>
 10072d4:	a1000417 	ldw	r4,16(r20)
 10072d8:	88800604 	addi	r2,r17,24
 10072dc:	a0c00604 	addi	r3,r20,24
 10072e0:	89000415 	stw	r4,16(r17)
 10072e4:	a1000517 	ldw	r4,20(r20)
 10072e8:	89000515 	stw	r4,20(r17)
 10072ec:	003f3906 	br	1006fd4 <_realloc_r+0x1cc>
 10072f0:	a0800417 	ldw	r2,16(r20)
 10072f4:	a5000604 	addi	r20,r20,24
 10072f8:	98c00804 	addi	r3,r19,32
 10072fc:	98800615 	stw	r2,24(r19)
 1007300:	a0bfff17 	ldw	r2,-4(r20)
 1007304:	98800715 	stw	r2,28(r19)
 1007308:	003f9a06 	br	1007174 <_realloc_r+0x36c>
 100730c:	8805883a 	mov	r2,r17
 1007310:	003fc706 	br	1007230 <_realloc_r+0x428>
 1007314:	8809883a 	mov	r4,r17
 1007318:	a00b883a 	mov	r5,r20
 100731c:	1005be80 	call	1005be8 <memmove>
 1007320:	003fc906 	br	1007248 <_realloc_r+0x440>
 1007324:	a0800217 	ldw	r2,8(r20)
 1007328:	98800415 	stw	r2,16(r19)
 100732c:	a0800317 	ldw	r2,12(r20)
 1007330:	98800515 	stw	r2,20(r19)
 1007334:	31000726 	beq	r6,r4,1007354 <_realloc_r+0x54c>
 1007338:	98800604 	addi	r2,r19,24
 100733c:	a5000404 	addi	r20,r20,16
 1007340:	003fbb06 	br	1007230 <_realloc_r+0x428>
 1007344:	9009883a 	mov	r4,r18
 1007348:	100cc300 	call	100cc30 <__malloc_unlock>
 100734c:	0005883a 	mov	r2,zero
 1007350:	003ef206 	br	1006f1c <_realloc_r+0x114>
 1007354:	a0c00417 	ldw	r3,16(r20)
 1007358:	a5000604 	addi	r20,r20,24
 100735c:	98800804 	addi	r2,r19,32
 1007360:	98c00615 	stw	r3,24(r19)
 1007364:	a0ffff17 	ldw	r3,-4(r20)
 1007368:	98c00715 	stw	r3,28(r19)
 100736c:	003fb006 	br	1007230 <_realloc_r+0x428>

01007370 <__fpclassifyd>:
 1007370:	00a00034 	movhi	r2,32768
 1007374:	10bfffc4 	addi	r2,r2,-1
 1007378:	2884703a 	and	r2,r5,r2
 100737c:	10000726 	beq	r2,zero,100739c <__fpclassifyd+0x2c>
 1007380:	00fffc34 	movhi	r3,65520
 1007384:	019ff834 	movhi	r6,32736
 1007388:	28c7883a 	add	r3,r5,r3
 100738c:	31bfffc4 	addi	r6,r6,-1
 1007390:	30c00536 	bltu	r6,r3,10073a8 <__fpclassifyd+0x38>
 1007394:	00800104 	movi	r2,4
 1007398:	f800283a 	ret
 100739c:	2000021e 	bne	r4,zero,10073a8 <__fpclassifyd+0x38>
 10073a0:	00800084 	movi	r2,2
 10073a4:	f800283a 	ret
 10073a8:	00dffc34 	movhi	r3,32752
 10073ac:	019ff834 	movhi	r6,32736
 10073b0:	28cb883a 	add	r5,r5,r3
 10073b4:	31bfffc4 	addi	r6,r6,-1
 10073b8:	317ff62e 	bgeu	r6,r5,1007394 <__fpclassifyd+0x24>
 10073bc:	01400434 	movhi	r5,16
 10073c0:	297fffc4 	addi	r5,r5,-1
 10073c4:	28800236 	bltu	r5,r2,10073d0 <__fpclassifyd+0x60>
 10073c8:	008000c4 	movi	r2,3
 10073cc:	f800283a 	ret
 10073d0:	10c00226 	beq	r2,r3,10073dc <__fpclassifyd+0x6c>
 10073d4:	0005883a 	mov	r2,zero
 10073d8:	f800283a 	ret
 10073dc:	2005003a 	cmpeq	r2,r4,zero
 10073e0:	f800283a 	ret

010073e4 <_sbrk_r>:
 10073e4:	defffd04 	addi	sp,sp,-12
 10073e8:	dc000015 	stw	r16,0(sp)
 10073ec:	04004074 	movhi	r16,257
 10073f0:	dc400115 	stw	r17,4(sp)
 10073f4:	84098904 	addi	r16,r16,9764
 10073f8:	2023883a 	mov	r17,r4
 10073fc:	2809883a 	mov	r4,r5
 1007400:	dfc00215 	stw	ra,8(sp)
 1007404:	80000015 	stw	zero,0(r16)
 1007408:	100cdfc0 	call	100cdfc <sbrk>
 100740c:	00ffffc4 	movi	r3,-1
 1007410:	10c00526 	beq	r2,r3,1007428 <_sbrk_r+0x44>
 1007414:	dfc00217 	ldw	ra,8(sp)
 1007418:	dc400117 	ldw	r17,4(sp)
 100741c:	dc000017 	ldw	r16,0(sp)
 1007420:	dec00304 	addi	sp,sp,12
 1007424:	f800283a 	ret
 1007428:	80c00017 	ldw	r3,0(r16)
 100742c:	183ff926 	beq	r3,zero,1007414 <_sbrk_r+0x30>
 1007430:	88c00015 	stw	r3,0(r17)
 1007434:	003ff706 	br	1007414 <_sbrk_r+0x30>

01007438 <__sread>:
 1007438:	defffe04 	addi	sp,sp,-8
 100743c:	dc000015 	stw	r16,0(sp)
 1007440:	2821883a 	mov	r16,r5
 1007444:	2940038f 	ldh	r5,14(r5)
 1007448:	dfc00115 	stw	ra,4(sp)
 100744c:	100903c0 	call	100903c <_read_r>
 1007450:	10000716 	blt	r2,zero,1007470 <__sread+0x38>
 1007454:	80c01417 	ldw	r3,80(r16)
 1007458:	1887883a 	add	r3,r3,r2
 100745c:	80c01415 	stw	r3,80(r16)
 1007460:	dfc00117 	ldw	ra,4(sp)
 1007464:	dc000017 	ldw	r16,0(sp)
 1007468:	dec00204 	addi	sp,sp,8
 100746c:	f800283a 	ret
 1007470:	80c0030b 	ldhu	r3,12(r16)
 1007474:	18fbffcc 	andi	r3,r3,61439
 1007478:	80c0030d 	sth	r3,12(r16)
 100747c:	dfc00117 	ldw	ra,4(sp)
 1007480:	dc000017 	ldw	r16,0(sp)
 1007484:	dec00204 	addi	sp,sp,8
 1007488:	f800283a 	ret

0100748c <__seofread>:
 100748c:	0005883a 	mov	r2,zero
 1007490:	f800283a 	ret

01007494 <__swrite>:
 1007494:	2880030b 	ldhu	r2,12(r5)
 1007498:	defffb04 	addi	sp,sp,-20
 100749c:	dcc00315 	stw	r19,12(sp)
 10074a0:	dc800215 	stw	r18,8(sp)
 10074a4:	dc400115 	stw	r17,4(sp)
 10074a8:	dc000015 	stw	r16,0(sp)
 10074ac:	dfc00415 	stw	ra,16(sp)
 10074b0:	10c0400c 	andi	r3,r2,256
 10074b4:	2821883a 	mov	r16,r5
 10074b8:	2027883a 	mov	r19,r4
 10074bc:	3025883a 	mov	r18,r6
 10074c0:	3823883a 	mov	r17,r7
 10074c4:	18000526 	beq	r3,zero,10074dc <__swrite+0x48>
 10074c8:	2940038f 	ldh	r5,14(r5)
 10074cc:	000d883a 	mov	r6,zero
 10074d0:	01c00084 	movi	r7,2
 10074d4:	1008fe00 	call	1008fe0 <_lseek_r>
 10074d8:	8080030b 	ldhu	r2,12(r16)
 10074dc:	8140038f 	ldh	r5,14(r16)
 10074e0:	10bbffcc 	andi	r2,r2,61439
 10074e4:	9809883a 	mov	r4,r19
 10074e8:	900d883a 	mov	r6,r18
 10074ec:	880f883a 	mov	r7,r17
 10074f0:	8080030d 	sth	r2,12(r16)
 10074f4:	dfc00417 	ldw	ra,16(sp)
 10074f8:	dcc00317 	ldw	r19,12(sp)
 10074fc:	dc800217 	ldw	r18,8(sp)
 1007500:	dc400117 	ldw	r17,4(sp)
 1007504:	dc000017 	ldw	r16,0(sp)
 1007508:	dec00504 	addi	sp,sp,20
 100750c:	1008adc1 	jmpi	1008adc <_write_r>

01007510 <__sseek>:
 1007510:	defffe04 	addi	sp,sp,-8
 1007514:	dc000015 	stw	r16,0(sp)
 1007518:	2821883a 	mov	r16,r5
 100751c:	2940038f 	ldh	r5,14(r5)
 1007520:	dfc00115 	stw	ra,4(sp)
 1007524:	1008fe00 	call	1008fe0 <_lseek_r>
 1007528:	00ffffc4 	movi	r3,-1
 100752c:	10c00826 	beq	r2,r3,1007550 <__sseek+0x40>
 1007530:	80c0030b 	ldhu	r3,12(r16)
 1007534:	80801415 	stw	r2,80(r16)
 1007538:	18c40014 	ori	r3,r3,4096
 100753c:	80c0030d 	sth	r3,12(r16)
 1007540:	dfc00117 	ldw	ra,4(sp)
 1007544:	dc000017 	ldw	r16,0(sp)
 1007548:	dec00204 	addi	sp,sp,8
 100754c:	f800283a 	ret
 1007550:	80c0030b 	ldhu	r3,12(r16)
 1007554:	18fbffcc 	andi	r3,r3,61439
 1007558:	80c0030d 	sth	r3,12(r16)
 100755c:	dfc00117 	ldw	ra,4(sp)
 1007560:	dc000017 	ldw	r16,0(sp)
 1007564:	dec00204 	addi	sp,sp,8
 1007568:	f800283a 	ret

0100756c <__sclose>:
 100756c:	2940038f 	ldh	r5,14(r5)
 1007570:	1008b381 	jmpi	1008b38 <_close_r>

01007574 <strcmp>:
 1007574:	2144b03a 	or	r2,r4,r5
 1007578:	108000cc 	andi	r2,r2,3
 100757c:	1000171e 	bne	r2,zero,10075dc <strcmp+0x68>
 1007580:	20800017 	ldw	r2,0(r4)
 1007584:	28c00017 	ldw	r3,0(r5)
 1007588:	10c0141e 	bne	r2,r3,10075dc <strcmp+0x68>
 100758c:	027fbff4 	movhi	r9,65279
 1007590:	4a7fbfc4 	addi	r9,r9,-257
 1007594:	0086303a 	nor	r3,zero,r2
 1007598:	02202074 	movhi	r8,32897
 100759c:	1245883a 	add	r2,r2,r9
 10075a0:	42202004 	addi	r8,r8,-32640
 10075a4:	10c4703a 	and	r2,r2,r3
 10075a8:	1204703a 	and	r2,r2,r8
 10075ac:	10000226 	beq	r2,zero,10075b8 <strcmp+0x44>
 10075b0:	00001706 	br	1007610 <strcmp+0x9c>
 10075b4:	1000161e 	bne	r2,zero,1007610 <strcmp+0x9c>
 10075b8:	21000104 	addi	r4,r4,4
 10075bc:	20c00017 	ldw	r3,0(r4)
 10075c0:	29400104 	addi	r5,r5,4
 10075c4:	29800017 	ldw	r6,0(r5)
 10075c8:	1a4f883a 	add	r7,r3,r9
 10075cc:	00c4303a 	nor	r2,zero,r3
 10075d0:	3884703a 	and	r2,r7,r2
 10075d4:	1204703a 	and	r2,r2,r8
 10075d8:	19bff626 	beq	r3,r6,10075b4 <strcmp+0x40>
 10075dc:	20800007 	ldb	r2,0(r4)
 10075e0:	1000051e 	bne	r2,zero,10075f8 <strcmp+0x84>
 10075e4:	00000606 	br	1007600 <strcmp+0x8c>
 10075e8:	21000044 	addi	r4,r4,1
 10075ec:	20800007 	ldb	r2,0(r4)
 10075f0:	29400044 	addi	r5,r5,1
 10075f4:	10000226 	beq	r2,zero,1007600 <strcmp+0x8c>
 10075f8:	28c00007 	ldb	r3,0(r5)
 10075fc:	10fffa26 	beq	r2,r3,10075e8 <strcmp+0x74>
 1007600:	20800003 	ldbu	r2,0(r4)
 1007604:	28c00003 	ldbu	r3,0(r5)
 1007608:	10c5c83a 	sub	r2,r2,r3
 100760c:	f800283a 	ret
 1007610:	0005883a 	mov	r2,zero
 1007614:	f800283a 	ret

01007618 <__sprint_r.part.0>:
 1007618:	28801917 	ldw	r2,100(r5)
 100761c:	defff604 	addi	sp,sp,-40
 1007620:	dd400515 	stw	r21,20(sp)
 1007624:	dcc00315 	stw	r19,12(sp)
 1007628:	dfc00915 	stw	ra,36(sp)
 100762c:	df000815 	stw	fp,32(sp)
 1007630:	ddc00715 	stw	r23,28(sp)
 1007634:	dd800615 	stw	r22,24(sp)
 1007638:	dd000415 	stw	r20,16(sp)
 100763c:	dc800215 	stw	r18,8(sp)
 1007640:	dc400115 	stw	r17,4(sp)
 1007644:	dc000015 	stw	r16,0(sp)
 1007648:	1088000c 	andi	r2,r2,8192
 100764c:	2827883a 	mov	r19,r5
 1007650:	302b883a 	mov	r21,r6
 1007654:	10002d26 	beq	r2,zero,100770c <__sprint_r.part.0+0xf4>
 1007658:	30800217 	ldw	r2,8(r6)
 100765c:	35800017 	ldw	r22,0(r6)
 1007660:	10002826 	beq	r2,zero,1007704 <__sprint_r.part.0+0xec>
 1007664:	2029883a 	mov	r20,r4
 1007668:	b5c00104 	addi	r23,r22,4
 100766c:	04bfffc4 	movi	r18,-1
 1007670:	bc400017 	ldw	r17,0(r23)
 1007674:	b4000017 	ldw	r16,0(r22)
 1007678:	0039883a 	mov	fp,zero
 100767c:	8822d0ba 	srli	r17,r17,2
 1007680:	04400316 	blt	zero,r17,1007690 <__sprint_r.part.0+0x78>
 1007684:	00001806 	br	10076e8 <__sprint_r.part.0+0xd0>
 1007688:	84000104 	addi	r16,r16,4
 100768c:	8f001526 	beq	r17,fp,10076e4 <__sprint_r.part.0+0xcc>
 1007690:	81400017 	ldw	r5,0(r16)
 1007694:	a009883a 	mov	r4,r20
 1007698:	980d883a 	mov	r6,r19
 100769c:	1008d540 	call	1008d54 <_fputwc_r>
 10076a0:	e7000044 	addi	fp,fp,1
 10076a4:	14bff81e 	bne	r2,r18,1007688 <__sprint_r.part.0+0x70>
 10076a8:	9005883a 	mov	r2,r18
 10076ac:	a8000215 	stw	zero,8(r21)
 10076b0:	a8000115 	stw	zero,4(r21)
 10076b4:	dfc00917 	ldw	ra,36(sp)
 10076b8:	df000817 	ldw	fp,32(sp)
 10076bc:	ddc00717 	ldw	r23,28(sp)
 10076c0:	dd800617 	ldw	r22,24(sp)
 10076c4:	dd400517 	ldw	r21,20(sp)
 10076c8:	dd000417 	ldw	r20,16(sp)
 10076cc:	dcc00317 	ldw	r19,12(sp)
 10076d0:	dc800217 	ldw	r18,8(sp)
 10076d4:	dc400117 	ldw	r17,4(sp)
 10076d8:	dc000017 	ldw	r16,0(sp)
 10076dc:	dec00a04 	addi	sp,sp,40
 10076e0:	f800283a 	ret
 10076e4:	a8800217 	ldw	r2,8(r21)
 10076e8:	8c63883a 	add	r17,r17,r17
 10076ec:	8c63883a 	add	r17,r17,r17
 10076f0:	1445c83a 	sub	r2,r2,r17
 10076f4:	a8800215 	stw	r2,8(r21)
 10076f8:	b5800204 	addi	r22,r22,8
 10076fc:	bdc00204 	addi	r23,r23,8
 1007700:	103fdb1e 	bne	r2,zero,1007670 <__sprint_r.part.0+0x58>
 1007704:	0005883a 	mov	r2,zero
 1007708:	003fe806 	br	10076ac <__sprint_r.part.0+0x94>
 100770c:	10049400 	call	1004940 <__sfvwrite_r>
 1007710:	003fe606 	br	10076ac <__sprint_r.part.0+0x94>

01007714 <__sprint_r>:
 1007714:	30c00217 	ldw	r3,8(r6)
 1007718:	18000126 	beq	r3,zero,1007720 <__sprint_r+0xc>
 100771c:	10076181 	jmpi	1007618 <__sprint_r.part.0>
 1007720:	30000115 	stw	zero,4(r6)
 1007724:	0005883a 	mov	r2,zero
 1007728:	f800283a 	ret

0100772c <___vfiprintf_internal_r>:
 100772c:	deffca04 	addi	sp,sp,-216
 1007730:	dd803215 	stw	r22,200(sp)
 1007734:	dd403115 	stw	r21,196(sp)
 1007738:	dfc03515 	stw	ra,212(sp)
 100773c:	df003415 	stw	fp,208(sp)
 1007740:	ddc03315 	stw	r23,204(sp)
 1007744:	dd003015 	stw	r20,192(sp)
 1007748:	dcc02f15 	stw	r19,188(sp)
 100774c:	dc802e15 	stw	r18,184(sp)
 1007750:	dc402d15 	stw	r17,180(sp)
 1007754:	dc002c15 	stw	r16,176(sp)
 1007758:	d9002015 	stw	r4,128(sp)
 100775c:	d9c02215 	stw	r7,136(sp)
 1007760:	282b883a 	mov	r21,r5
 1007764:	302d883a 	mov	r22,r6
 1007768:	20000226 	beq	r4,zero,1007774 <___vfiprintf_internal_r+0x48>
 100776c:	20800e17 	ldw	r2,56(r4)
 1007770:	1001b126 	beq	r2,zero,1007e38 <___vfiprintf_internal_r+0x70c>
 1007774:	a880030b 	ldhu	r2,12(r21)
 1007778:	10c8000c 	andi	r3,r2,8192
 100777c:	1800061e 	bne	r3,zero,1007798 <___vfiprintf_internal_r+0x6c>
 1007780:	a9001917 	ldw	r4,100(r21)
 1007784:	00f7ffc4 	movi	r3,-8193
 1007788:	10880014 	ori	r2,r2,8192
 100778c:	20c6703a 	and	r3,r4,r3
 1007790:	a880030d 	sth	r2,12(r21)
 1007794:	a8c01915 	stw	r3,100(r21)
 1007798:	10c0020c 	andi	r3,r2,8
 100779c:	18018926 	beq	r3,zero,1007dc4 <___vfiprintf_internal_r+0x698>
 10077a0:	a8c00417 	ldw	r3,16(r21)
 10077a4:	18018726 	beq	r3,zero,1007dc4 <___vfiprintf_internal_r+0x698>
 10077a8:	1080068c 	andi	r2,r2,26
 10077ac:	00c00284 	movi	r3,10
 10077b0:	10c18c26 	beq	r2,r3,1007de4 <___vfiprintf_internal_r+0x6b8>
 10077b4:	d8801a04 	addi	r2,sp,104
 10077b8:	d8c019c4 	addi	r3,sp,103
 10077bc:	07004074 	movhi	fp,257
 10077c0:	05c04074 	movhi	r23,257
 10077c4:	10c9c83a 	sub	r4,r2,r3
 10077c8:	e73bbe04 	addi	fp,fp,-4360
 10077cc:	bdfbba04 	addi	r23,r23,-4376
 10077d0:	d8801e15 	stw	r2,120(sp)
 10077d4:	d8c01f15 	stw	r3,124(sp)
 10077d8:	dec01a15 	stw	sp,104(sp)
 10077dc:	d8001c15 	stw	zero,112(sp)
 10077e0:	d8001b15 	stw	zero,108(sp)
 10077e4:	d8002615 	stw	zero,152(sp)
 10077e8:	d8002315 	stw	zero,140(sp)
 10077ec:	d9002715 	stw	r4,156(sp)
 10077f0:	d811883a 	mov	r8,sp
 10077f4:	dd402115 	stw	r21,132(sp)
 10077f8:	b021883a 	mov	r16,r22
 10077fc:	80800007 	ldb	r2,0(r16)
 1007800:	10037226 	beq	r2,zero,10085cc <___vfiprintf_internal_r+0xea0>
 1007804:	01000944 	movi	r4,37
 1007808:	11037026 	beq	r2,r4,10085cc <___vfiprintf_internal_r+0xea0>
 100780c:	8005883a 	mov	r2,r16
 1007810:	00000106 	br	1007818 <___vfiprintf_internal_r+0xec>
 1007814:	19000326 	beq	r3,r4,1007824 <___vfiprintf_internal_r+0xf8>
 1007818:	10800044 	addi	r2,r2,1
 100781c:	10c00007 	ldb	r3,0(r2)
 1007820:	183ffc1e 	bne	r3,zero,1007814 <___vfiprintf_internal_r+0xe8>
 1007824:	1425c83a 	sub	r18,r2,r16
 1007828:	1023883a 	mov	r17,r2
 100782c:	90001026 	beq	r18,zero,1007870 <___vfiprintf_internal_r+0x144>
 1007830:	d8c01c17 	ldw	r3,112(sp)
 1007834:	d8801b17 	ldw	r2,108(sp)
 1007838:	44000015 	stw	r16,0(r8)
 100783c:	90c7883a 	add	r3,r18,r3
 1007840:	10800044 	addi	r2,r2,1
 1007844:	44800115 	stw	r18,4(r8)
 1007848:	d8c01c15 	stw	r3,112(sp)
 100784c:	d8801b15 	stw	r2,108(sp)
 1007850:	010001c4 	movi	r4,7
 1007854:	2080750e 	bge	r4,r2,1007a2c <___vfiprintf_internal_r+0x300>
 1007858:	18036f1e 	bne	r3,zero,1008618 <___vfiprintf_internal_r+0xeec>
 100785c:	d8802317 	ldw	r2,140(sp)
 1007860:	d8001b15 	stw	zero,108(sp)
 1007864:	d811883a 	mov	r8,sp
 1007868:	1485883a 	add	r2,r2,r18
 100786c:	d8802315 	stw	r2,140(sp)
 1007870:	88800007 	ldb	r2,0(r17)
 1007874:	10041026 	beq	r2,zero,10088b8 <___vfiprintf_internal_r+0x118c>
 1007878:	88c00047 	ldb	r3,1(r17)
 100787c:	88800044 	addi	r2,r17,1
 1007880:	d8001d85 	stb	zero,118(sp)
 1007884:	000f883a 	mov	r7,zero
 1007888:	027fffc4 	movi	r9,-1
 100788c:	0025883a 	mov	r18,zero
 1007890:	002b883a 	mov	r21,zero
 1007894:	01401604 	movi	r5,88
 1007898:	01800244 	movi	r6,9
 100789c:	03400a84 	movi	r13,42
 10078a0:	03001b04 	movi	r12,108
 10078a4:	14000044 	addi	r16,r2,1
 10078a8:	18bff804 	addi	r2,r3,-32
 10078ac:	28825536 	bltu	r5,r2,1008204 <___vfiprintf_internal_r+0xad8>
 10078b0:	100490ba 	slli	r2,r2,2
 10078b4:	01004034 	movhi	r4,256
 10078b8:	211e3204 	addi	r4,r4,30920
 10078bc:	1105883a 	add	r2,r2,r4
 10078c0:	10800017 	ldw	r2,0(r2)
 10078c4:	1000683a 	jmp	r2
 10078c8:	01007fc8 	cmpgei	r4,zero,511
 10078cc:	01008204 	movi	r4,520
 10078d0:	01008204 	movi	r4,520
 10078d4:	01007fe8 	cmpgeui	r4,zero,511
 10078d8:	01008204 	movi	r4,520
 10078dc:	01008204 	movi	r4,520
 10078e0:	01008204 	movi	r4,520
 10078e4:	01008204 	movi	r4,520
 10078e8:	01008204 	movi	r4,520
 10078ec:	01008204 	movi	r4,520
 10078f0:	01007ff8 	rdprs	r4,zero,511
 10078f4:	01008018 	cmpnei	r4,zero,512
 10078f8:	01008204 	movi	r4,520
 10078fc:	01007e40 	call	1007e4 <__alt_mem_SDRAM_ctrl-0xeff81c>
 1007900:	01007f2c 	andhi	r4,zero,508
 1007904:	01008204 	movi	r4,520
 1007908:	01007eac 	andhi	r4,zero,506
 100790c:	01007ebc 	xorhi	r4,zero,506
 1007910:	01007ebc 	xorhi	r4,zero,506
 1007914:	01007ebc 	xorhi	r4,zero,506
 1007918:	01007ebc 	xorhi	r4,zero,506
 100791c:	01007ebc 	xorhi	r4,zero,506
 1007920:	01007ebc 	xorhi	r4,zero,506
 1007924:	01007ebc 	xorhi	r4,zero,506
 1007928:	01007ebc 	xorhi	r4,zero,506
 100792c:	01007ebc 	xorhi	r4,zero,506
 1007930:	01008204 	movi	r4,520
 1007934:	01008204 	movi	r4,520
 1007938:	01008204 	movi	r4,520
 100793c:	01008204 	movi	r4,520
 1007940:	01008204 	movi	r4,520
 1007944:	01008204 	movi	r4,520
 1007948:	01008204 	movi	r4,520
 100794c:	01008204 	movi	r4,520
 1007950:	01008204 	movi	r4,520
 1007954:	01008204 	movi	r4,520
 1007958:	01007ee8 	cmpgeui	r4,zero,507
 100795c:	01008204 	movi	r4,520
 1007960:	01008204 	movi	r4,520
 1007964:	01008204 	movi	r4,520
 1007968:	01008204 	movi	r4,520
 100796c:	01008204 	movi	r4,520
 1007970:	01008204 	movi	r4,520
 1007974:	01008204 	movi	r4,520
 1007978:	01008204 	movi	r4,520
 100797c:	01008204 	movi	r4,520
 1007980:	01008204 	movi	r4,520
 1007984:	01007a74 	movhi	r4,489
 1007988:	01008204 	movi	r4,520
 100798c:	01008204 	movi	r4,520
 1007990:	01008204 	movi	r4,520
 1007994:	01008204 	movi	r4,520
 1007998:	01008204 	movi	r4,520
 100799c:	01007a40 	call	1007a4 <__alt_mem_SDRAM_ctrl-0xeff85c>
 10079a0:	01008204 	movi	r4,520
 10079a4:	01008204 	movi	r4,520
 10079a8:	01008088 	cmpgei	r4,zero,514
 10079ac:	01008204 	movi	r4,520
 10079b0:	01008204 	movi	r4,520
 10079b4:	01008204 	movi	r4,520
 10079b8:	01008204 	movi	r4,520
 10079bc:	01008204 	movi	r4,520
 10079c0:	01008204 	movi	r4,520
 10079c4:	01008204 	movi	r4,520
 10079c8:	01008204 	movi	r4,520
 10079cc:	01008204 	movi	r4,520
 10079d0:	01008204 	movi	r4,520
 10079d4:	01008028 	cmpgeui	r4,zero,512
 10079d8:	01008054 	movui	r4,513
 10079dc:	01008204 	movi	r4,520
 10079e0:	01008204 	movi	r4,520
 10079e4:	01008204 	movi	r4,520
 10079e8:	01008130 	cmpltui	r4,zero,516
 10079ec:	01008054 	movui	r4,513
 10079f0:	01008204 	movi	r4,520
 10079f4:	01008204 	movi	r4,520
 10079f8:	01008140 	call	100814 <__alt_mem_SDRAM_ctrl-0xeff7ec>
 10079fc:	01008204 	movi	r4,520
 1007a00:	01007f6c 	andhi	r4,zero,509
 1007a04:	01007a78 	rdprs	r4,zero,489
 1007a08:	01008154 	movui	r4,517
 1007a0c:	01008194 	movui	r4,518
 1007a10:	01008204 	movi	r4,520
 1007a14:	010080dc 	xori	r4,zero,515
 1007a18:	01008204 	movi	r4,520
 1007a1c:	01007a44 	movi	r4,489
 1007a20:	01008204 	movi	r4,520
 1007a24:	01008204 	movi	r4,520
 1007a28:	010081a4 	muli	r4,zero,518
 1007a2c:	42000204 	addi	r8,r8,8
 1007a30:	d8802317 	ldw	r2,140(sp)
 1007a34:	1485883a 	add	r2,r2,r18
 1007a38:	d8802315 	stw	r2,140(sp)
 1007a3c:	003f8c06 	br	1007870 <___vfiprintf_internal_r+0x144>
 1007a40:	ad400414 	ori	r21,r21,16
 1007a44:	a880080c 	andi	r2,r21,32
 1007a48:	1001e61e 	bne	r2,zero,10081e4 <___vfiprintf_internal_r+0xab8>
 1007a4c:	a880040c 	andi	r2,r21,16
 1007a50:	10034726 	beq	r2,zero,1008770 <___vfiprintf_internal_r+0x1044>
 1007a54:	d8802217 	ldw	r2,136(sp)
 1007a58:	001b883a 	mov	r13,zero
 1007a5c:	15800017 	ldw	r22,0(r2)
 1007a60:	10800104 	addi	r2,r2,4
 1007a64:	d8802215 	stw	r2,136(sp)
 1007a68:	b009883a 	mov	r4,r22
 1007a6c:	00800044 	movi	r2,1
 1007a70:	00000c06 	br	1007aa4 <___vfiprintf_internal_r+0x378>
 1007a74:	ad400414 	ori	r21,r21,16
 1007a78:	a880080c 	andi	r2,r21,32
 1007a7c:	1001491e 	bne	r2,zero,1007fa4 <___vfiprintf_internal_r+0x878>
 1007a80:	a880040c 	andi	r2,r21,16
 1007a84:	10032d26 	beq	r2,zero,100873c <___vfiprintf_internal_r+0x1010>
 1007a88:	d9002217 	ldw	r4,136(sp)
 1007a8c:	001b883a 	mov	r13,zero
 1007a90:	0005883a 	mov	r2,zero
 1007a94:	25800017 	ldw	r22,0(r4)
 1007a98:	21000104 	addi	r4,r4,4
 1007a9c:	d9002215 	stw	r4,136(sp)
 1007aa0:	b009883a 	mov	r4,r22
 1007aa4:	d8001d85 	stb	zero,118(sp)
 1007aa8:	4827883a 	mov	r19,r9
 1007aac:	001d883a 	mov	r14,zero
 1007ab0:	48000216 	blt	r9,zero,1007abc <___vfiprintf_internal_r+0x390>
 1007ab4:	00ffdfc4 	movi	r3,-129
 1007ab8:	a8ea703a 	and	r21,r21,r3
 1007abc:	2002071e 	bne	r4,zero,10082dc <___vfiprintf_internal_r+0xbb0>
 1007ac0:	4802ad26 	beq	r9,zero,1008578 <___vfiprintf_internal_r+0xe4c>
 1007ac4:	10803fcc 	andi	r2,r2,255
 1007ac8:	00c00044 	movi	r3,1
 1007acc:	10c22b26 	beq	r2,r3,100837c <___vfiprintf_internal_r+0xc50>
 1007ad0:	00c00084 	movi	r3,2
 1007ad4:	dd001a04 	addi	r20,sp,104
 1007ad8:	10c0dd1e 	bne	r2,r3,1007e50 <___vfiprintf_internal_r+0x724>
 1007adc:	d9002617 	ldw	r4,152(sp)
 1007ae0:	b08003cc 	andi	r2,r22,15
 1007ae4:	6806973a 	slli	r3,r13,28
 1007ae8:	2085883a 	add	r2,r4,r2
 1007aec:	b02cd13a 	srli	r22,r22,4
 1007af0:	10800003 	ldbu	r2,0(r2)
 1007af4:	681ad13a 	srli	r13,r13,4
 1007af8:	a53fffc4 	addi	r20,r20,-1
 1007afc:	1dacb03a 	or	r22,r3,r22
 1007b00:	a0800005 	stb	r2,0(r20)
 1007b04:	b344b03a 	or	r2,r22,r13
 1007b08:	103ff51e 	bne	r2,zero,1007ae0 <___vfiprintf_internal_r+0x3b4>
 1007b0c:	d9001e17 	ldw	r4,120(sp)
 1007b10:	2527c83a 	sub	r19,r4,r20
 1007b14:	9823883a 	mov	r17,r19
 1007b18:	9a40010e 	bge	r19,r9,1007b20 <___vfiprintf_internal_r+0x3f4>
 1007b1c:	4823883a 	mov	r17,r9
 1007b20:	73803fcc 	andi	r14,r14,255
 1007b24:	7380201c 	xori	r14,r14,128
 1007b28:	73bfe004 	addi	r14,r14,-128
 1007b2c:	70000126 	beq	r14,zero,1007b34 <___vfiprintf_internal_r+0x408>
 1007b30:	8c400044 	addi	r17,r17,1
 1007b34:	ab40008c 	andi	r13,r21,2
 1007b38:	68000126 	beq	r13,zero,1007b40 <___vfiprintf_internal_r+0x414>
 1007b3c:	8c400084 	addi	r17,r17,2
 1007b40:	ad80210c 	andi	r22,r21,132
 1007b44:	b001c51e 	bne	r22,zero,100825c <___vfiprintf_internal_r+0xb30>
 1007b48:	9447c83a 	sub	r3,r18,r17
 1007b4c:	00c1c30e 	bge	zero,r3,100825c <___vfiprintf_internal_r+0xb30>
 1007b50:	01c00404 	movi	r7,16
 1007b54:	d8801c17 	ldw	r2,112(sp)
 1007b58:	38c37b0e 	bge	r7,r3,1008948 <___vfiprintf_internal_r+0x121c>
 1007b5c:	01004074 	movhi	r4,257
 1007b60:	213bbe04 	addi	r4,r4,-4360
 1007b64:	dc002915 	stw	r16,164(sp)
 1007b68:	d9801b17 	ldw	r6,108(sp)
 1007b6c:	d9002415 	stw	r4,144(sp)
 1007b70:	03c001c4 	movi	r15,7
 1007b74:	da402515 	stw	r9,148(sp)
 1007b78:	db402815 	stw	r13,160(sp)
 1007b7c:	1821883a 	mov	r16,r3
 1007b80:	00000506 	br	1007b98 <___vfiprintf_internal_r+0x46c>
 1007b84:	31400084 	addi	r5,r6,2
 1007b88:	42000204 	addi	r8,r8,8
 1007b8c:	200d883a 	mov	r6,r4
 1007b90:	843ffc04 	addi	r16,r16,-16
 1007b94:	3c000d0e 	bge	r7,r16,1007bcc <___vfiprintf_internal_r+0x4a0>
 1007b98:	10800404 	addi	r2,r2,16
 1007b9c:	31000044 	addi	r4,r6,1
 1007ba0:	47000015 	stw	fp,0(r8)
 1007ba4:	41c00115 	stw	r7,4(r8)
 1007ba8:	d8801c15 	stw	r2,112(sp)
 1007bac:	d9001b15 	stw	r4,108(sp)
 1007bb0:	793ff40e 	bge	r15,r4,1007b84 <___vfiprintf_internal_r+0x458>
 1007bb4:	10019b1e 	bne	r2,zero,1008224 <___vfiprintf_internal_r+0xaf8>
 1007bb8:	843ffc04 	addi	r16,r16,-16
 1007bbc:	000d883a 	mov	r6,zero
 1007bc0:	01400044 	movi	r5,1
 1007bc4:	d811883a 	mov	r8,sp
 1007bc8:	3c3ff316 	blt	r7,r16,1007b98 <___vfiprintf_internal_r+0x46c>
 1007bcc:	8007883a 	mov	r3,r16
 1007bd0:	da402517 	ldw	r9,148(sp)
 1007bd4:	db402817 	ldw	r13,160(sp)
 1007bd8:	dc002917 	ldw	r16,164(sp)
 1007bdc:	d9002417 	ldw	r4,144(sp)
 1007be0:	1885883a 	add	r2,r3,r2
 1007be4:	40c00115 	stw	r3,4(r8)
 1007be8:	41000015 	stw	r4,0(r8)
 1007bec:	d8801c15 	stw	r2,112(sp)
 1007bf0:	d9401b15 	stw	r5,108(sp)
 1007bf4:	00c001c4 	movi	r3,7
 1007bf8:	19426a16 	blt	r3,r5,10085a4 <___vfiprintf_internal_r+0xe78>
 1007bfc:	d8c01d87 	ldb	r3,118(sp)
 1007c00:	42000204 	addi	r8,r8,8
 1007c04:	29000044 	addi	r4,r5,1
 1007c08:	1801991e 	bne	r3,zero,1008270 <___vfiprintf_internal_r+0xb44>
 1007c0c:	68000c26 	beq	r13,zero,1007c40 <___vfiprintf_internal_r+0x514>
 1007c10:	d8c01d04 	addi	r3,sp,116
 1007c14:	10800084 	addi	r2,r2,2
 1007c18:	40c00015 	stw	r3,0(r8)
 1007c1c:	00c00084 	movi	r3,2
 1007c20:	40c00115 	stw	r3,4(r8)
 1007c24:	d8801c15 	stw	r2,112(sp)
 1007c28:	d9001b15 	stw	r4,108(sp)
 1007c2c:	00c001c4 	movi	r3,7
 1007c30:	19024c16 	blt	r3,r4,1008564 <___vfiprintf_internal_r+0xe38>
 1007c34:	200b883a 	mov	r5,r4
 1007c38:	42000204 	addi	r8,r8,8
 1007c3c:	21000044 	addi	r4,r4,1
 1007c40:	00c02004 	movi	r3,128
 1007c44:	b0c20126 	beq	r22,r3,100844c <___vfiprintf_internal_r+0xd20>
 1007c48:	4cedc83a 	sub	r22,r9,r19
 1007c4c:	0580230e 	bge	zero,r22,1007cdc <___vfiprintf_internal_r+0x5b0>
 1007c50:	01c00404 	movi	r7,16
 1007c54:	3d83140e 	bge	r7,r22,10088a8 <___vfiprintf_internal_r+0x117c>
 1007c58:	01004074 	movhi	r4,257
 1007c5c:	213bba04 	addi	r4,r4,-4376
 1007c60:	d9002415 	stw	r4,144(sp)
 1007c64:	034001c4 	movi	r13,7
 1007c68:	00000506 	br	1007c80 <___vfiprintf_internal_r+0x554>
 1007c6c:	29000084 	addi	r4,r5,2
 1007c70:	42000204 	addi	r8,r8,8
 1007c74:	180b883a 	mov	r5,r3
 1007c78:	b5bffc04 	addi	r22,r22,-16
 1007c7c:	3d800d0e 	bge	r7,r22,1007cb4 <___vfiprintf_internal_r+0x588>
 1007c80:	10800404 	addi	r2,r2,16
 1007c84:	28c00044 	addi	r3,r5,1
 1007c88:	45c00015 	stw	r23,0(r8)
 1007c8c:	41c00115 	stw	r7,4(r8)
 1007c90:	d8801c15 	stw	r2,112(sp)
 1007c94:	d8c01b15 	stw	r3,108(sp)
 1007c98:	68fff40e 	bge	r13,r3,1007c6c <___vfiprintf_internal_r+0x540>
 1007c9c:	1001811e 	bne	r2,zero,10082a4 <___vfiprintf_internal_r+0xb78>
 1007ca0:	b5bffc04 	addi	r22,r22,-16
 1007ca4:	01000044 	movi	r4,1
 1007ca8:	000b883a 	mov	r5,zero
 1007cac:	d811883a 	mov	r8,sp
 1007cb0:	3dbff316 	blt	r7,r22,1007c80 <___vfiprintf_internal_r+0x554>
 1007cb4:	d8c02417 	ldw	r3,144(sp)
 1007cb8:	1585883a 	add	r2,r2,r22
 1007cbc:	45800115 	stw	r22,4(r8)
 1007cc0:	40c00015 	stw	r3,0(r8)
 1007cc4:	d8801c15 	stw	r2,112(sp)
 1007cc8:	d9001b15 	stw	r4,108(sp)
 1007ccc:	00c001c4 	movi	r3,7
 1007cd0:	1901d016 	blt	r3,r4,1008414 <___vfiprintf_internal_r+0xce8>
 1007cd4:	42000204 	addi	r8,r8,8
 1007cd8:	21000044 	addi	r4,r4,1
 1007cdc:	14c5883a 	add	r2,r2,r19
 1007ce0:	45000015 	stw	r20,0(r8)
 1007ce4:	44c00115 	stw	r19,4(r8)
 1007ce8:	d8801c15 	stw	r2,112(sp)
 1007cec:	d9001b15 	stw	r4,108(sp)
 1007cf0:	00c001c4 	movi	r3,7
 1007cf4:	1901cf0e 	bge	r3,r4,1008434 <___vfiprintf_internal_r+0xd08>
 1007cf8:	1002361e 	bne	r2,zero,10085d4 <___vfiprintf_internal_r+0xea8>
 1007cfc:	d8001b15 	stw	zero,108(sp)
 1007d00:	aac0010c 	andi	r11,r21,4
 1007d04:	58002826 	beq	r11,zero,1007da8 <___vfiprintf_internal_r+0x67c>
 1007d08:	9467c83a 	sub	r19,r18,r17
 1007d0c:	d811883a 	mov	r8,sp
 1007d10:	04c3340e 	bge	zero,r19,10089e4 <___vfiprintf_internal_r+0x12b8>
 1007d14:	01c00404 	movi	r7,16
 1007d18:	3cc31b0e 	bge	r7,r19,1008988 <___vfiprintf_internal_r+0x125c>
 1007d1c:	00c04074 	movhi	r3,257
 1007d20:	18fbbe04 	addi	r3,r3,-4360
 1007d24:	d9001b17 	ldw	r4,108(sp)
 1007d28:	d8c02415 	stw	r3,144(sp)
 1007d2c:	382b883a 	mov	r21,r7
 1007d30:	050001c4 	movi	r20,7
 1007d34:	dd802017 	ldw	r22,128(sp)
 1007d38:	00000506 	br	1007d50 <___vfiprintf_internal_r+0x624>
 1007d3c:	21400084 	addi	r5,r4,2
 1007d40:	42000204 	addi	r8,r8,8
 1007d44:	1809883a 	mov	r4,r3
 1007d48:	9cfffc04 	addi	r19,r19,-16
 1007d4c:	acc00d0e 	bge	r21,r19,1007d84 <___vfiprintf_internal_r+0x658>
 1007d50:	10800404 	addi	r2,r2,16
 1007d54:	20c00044 	addi	r3,r4,1
 1007d58:	47000015 	stw	fp,0(r8)
 1007d5c:	45400115 	stw	r21,4(r8)
 1007d60:	d8801c15 	stw	r2,112(sp)
 1007d64:	d8c01b15 	stw	r3,108(sp)
 1007d68:	a0fff40e 	bge	r20,r3,1007d3c <___vfiprintf_internal_r+0x610>
 1007d6c:	10019f1e 	bne	r2,zero,10083ec <___vfiprintf_internal_r+0xcc0>
 1007d70:	9cfffc04 	addi	r19,r19,-16
 1007d74:	01400044 	movi	r5,1
 1007d78:	0009883a 	mov	r4,zero
 1007d7c:	d811883a 	mov	r8,sp
 1007d80:	acfff316 	blt	r21,r19,1007d50 <___vfiprintf_internal_r+0x624>
 1007d84:	d8c02417 	ldw	r3,144(sp)
 1007d88:	14c5883a 	add	r2,r2,r19
 1007d8c:	44c00115 	stw	r19,4(r8)
 1007d90:	40c00015 	stw	r3,0(r8)
 1007d94:	d8801c15 	stw	r2,112(sp)
 1007d98:	d9401b15 	stw	r5,108(sp)
 1007d9c:	00c001c4 	movi	r3,7
 1007da0:	1941810e 	bge	r3,r5,10083a8 <___vfiprintf_internal_r+0xc7c>
 1007da4:	10017a1e 	bne	r2,zero,1008390 <___vfiprintf_internal_r+0xc64>
 1007da8:	8c82a416 	blt	r17,r18,100883c <___vfiprintf_internal_r+0x1110>
 1007dac:	d9002317 	ldw	r4,140(sp)
 1007db0:	2449883a 	add	r4,r4,r17
 1007db4:	d9002315 	stw	r4,140(sp)
 1007db8:	d8001b15 	stw	zero,108(sp)
 1007dbc:	d811883a 	mov	r8,sp
 1007dc0:	003e8e06 	br	10077fc <___vfiprintf_internal_r+0xd0>
 1007dc4:	d9002017 	ldw	r4,128(sp)
 1007dc8:	a80b883a 	mov	r5,r21
 1007dcc:	100247c0 	call	100247c <__swsetup_r>
 1007dd0:	10000c1e 	bne	r2,zero,1007e04 <___vfiprintf_internal_r+0x6d8>
 1007dd4:	a880030b 	ldhu	r2,12(r21)
 1007dd8:	00c00284 	movi	r3,10
 1007ddc:	1080068c 	andi	r2,r2,26
 1007de0:	10fe741e 	bne	r2,r3,10077b4 <___vfiprintf_internal_r+0x88>
 1007de4:	a880038f 	ldh	r2,14(r21)
 1007de8:	103e7216 	blt	r2,zero,10077b4 <___vfiprintf_internal_r+0x88>
 1007dec:	d9002017 	ldw	r4,128(sp)
 1007df0:	d9c02217 	ldw	r7,136(sp)
 1007df4:	a80b883a 	mov	r5,r21
 1007df8:	b00d883a 	mov	r6,r22
 1007dfc:	1008a200 	call	1008a20 <__sbprintf>
 1007e00:	00000106 	br	1007e08 <___vfiprintf_internal_r+0x6dc>
 1007e04:	00bfffc4 	movi	r2,-1
 1007e08:	dfc03517 	ldw	ra,212(sp)
 1007e0c:	df003417 	ldw	fp,208(sp)
 1007e10:	ddc03317 	ldw	r23,204(sp)
 1007e14:	dd803217 	ldw	r22,200(sp)
 1007e18:	dd403117 	ldw	r21,196(sp)
 1007e1c:	dd003017 	ldw	r20,192(sp)
 1007e20:	dcc02f17 	ldw	r19,188(sp)
 1007e24:	dc802e17 	ldw	r18,184(sp)
 1007e28:	dc402d17 	ldw	r17,180(sp)
 1007e2c:	dc002c17 	ldw	r16,176(sp)
 1007e30:	dec03604 	addi	sp,sp,216
 1007e34:	f800283a 	ret
 1007e38:	10044dc0 	call	10044dc <__sinit>
 1007e3c:	003e4d06 	br	1007774 <___vfiprintf_internal_r+0x48>
 1007e40:	8005883a 	mov	r2,r16
 1007e44:	ad400114 	ori	r21,r21,4
 1007e48:	80c00007 	ldb	r3,0(r16)
 1007e4c:	003e9506 	br	10078a4 <___vfiprintf_internal_r+0x178>
 1007e50:	b006d0fa 	srli	r3,r22,3
 1007e54:	6808977a 	slli	r4,r13,29
 1007e58:	681ad0fa 	srli	r13,r13,3
 1007e5c:	b58001cc 	andi	r22,r22,7
 1007e60:	b0800c04 	addi	r2,r22,48
 1007e64:	a53fffc4 	addi	r20,r20,-1
 1007e68:	20ecb03a 	or	r22,r4,r3
 1007e6c:	a0800005 	stb	r2,0(r20)
 1007e70:	b346b03a 	or	r3,r22,r13
 1007e74:	183ff61e 	bne	r3,zero,1007e50 <___vfiprintf_internal_r+0x724>
 1007e78:	a8c0004c 	andi	r3,r21,1
 1007e7c:	a009883a 	mov	r4,r20
 1007e80:	18013b26 	beq	r3,zero,1008370 <___vfiprintf_internal_r+0xc44>
 1007e84:	10803fcc 	andi	r2,r2,255
 1007e88:	1080201c 	xori	r2,r2,128
 1007e8c:	10bfe004 	addi	r2,r2,-128
 1007e90:	00c00c04 	movi	r3,48
 1007e94:	10ff1d26 	beq	r2,r3,1007b0c <___vfiprintf_internal_r+0x3e0>
 1007e98:	d8801e17 	ldw	r2,120(sp)
 1007e9c:	a53fffc4 	addi	r20,r20,-1
 1007ea0:	20ffffc5 	stb	r3,-1(r4)
 1007ea4:	1527c83a 	sub	r19,r2,r20
 1007ea8:	003f1a06 	br	1007b14 <___vfiprintf_internal_r+0x3e8>
 1007eac:	ad402014 	ori	r21,r21,128
 1007eb0:	8005883a 	mov	r2,r16
 1007eb4:	80c00007 	ldb	r3,0(r16)
 1007eb8:	003e7a06 	br	10078a4 <___vfiprintf_internal_r+0x178>
 1007ebc:	8005883a 	mov	r2,r16
 1007ec0:	0025883a 	mov	r18,zero
 1007ec4:	193ff404 	addi	r4,r3,-48
 1007ec8:	10c00007 	ldb	r3,0(r2)
 1007ecc:	948002a4 	muli	r18,r18,10
 1007ed0:	84000044 	addi	r16,r16,1
 1007ed4:	8005883a 	mov	r2,r16
 1007ed8:	9125883a 	add	r18,r18,r4
 1007edc:	193ff404 	addi	r4,r3,-48
 1007ee0:	313ff92e 	bgeu	r6,r4,1007ec8 <___vfiprintf_internal_r+0x79c>
 1007ee4:	003e7006 	br	10078a8 <___vfiprintf_internal_r+0x17c>
 1007ee8:	ad400414 	ori	r21,r21,16
 1007eec:	d9c01d85 	stb	r7,118(sp)
 1007ef0:	a880080c 	andi	r2,r21,32
 1007ef4:	d8c02217 	ldw	r3,136(sp)
 1007ef8:	10005a26 	beq	r2,zero,1008064 <___vfiprintf_internal_r+0x938>
 1007efc:	d9002217 	ldw	r4,136(sp)
 1007f00:	18800117 	ldw	r2,4(r3)
 1007f04:	1d800017 	ldw	r22,0(r3)
 1007f08:	21000204 	addi	r4,r4,8
 1007f0c:	d9002215 	stw	r4,136(sp)
 1007f10:	101b883a 	mov	r13,r2
 1007f14:	1001f416 	blt	r2,zero,10086e8 <___vfiprintf_internal_r+0xfbc>
 1007f18:	db801d83 	ldbu	r14,118(sp)
 1007f1c:	4827883a 	mov	r19,r9
 1007f20:	00800044 	movi	r2,1
 1007f24:	b348b03a 	or	r4,r22,r13
 1007f28:	003ee106 	br	1007ab0 <___vfiprintf_internal_r+0x384>
 1007f2c:	80c00007 	ldb	r3,0(r16)
 1007f30:	80800044 	addi	r2,r16,1
 1007f34:	1b42a326 	beq	r3,r13,10089c4 <___vfiprintf_internal_r+0x1298>
 1007f38:	193ff404 	addi	r4,r3,-48
 1007f3c:	1021883a 	mov	r16,r2
 1007f40:	0013883a 	mov	r9,zero
 1007f44:	313e5836 	bltu	r6,r4,10078a8 <___vfiprintf_internal_r+0x17c>
 1007f48:	80c00007 	ldb	r3,0(r16)
 1007f4c:	4a4002a4 	muli	r9,r9,10
 1007f50:	84000044 	addi	r16,r16,1
 1007f54:	2253883a 	add	r9,r4,r9
 1007f58:	193ff404 	addi	r4,r3,-48
 1007f5c:	313ffa2e 	bgeu	r6,r4,1007f48 <___vfiprintf_internal_r+0x81c>
 1007f60:	483e510e 	bge	r9,zero,10078a8 <___vfiprintf_internal_r+0x17c>
 1007f64:	027fffc4 	movi	r9,-1
 1007f68:	003e4f06 	br	10078a8 <___vfiprintf_internal_r+0x17c>
 1007f6c:	d9c01d85 	stb	r7,118(sp)
 1007f70:	a880080c 	andi	r2,r21,32
 1007f74:	10020826 	beq	r2,zero,1008798 <___vfiprintf_internal_r+0x106c>
 1007f78:	d8c02217 	ldw	r3,136(sp)
 1007f7c:	d9002317 	ldw	r4,140(sp)
 1007f80:	18800017 	ldw	r2,0(r3)
 1007f84:	2007d7fa 	srai	r3,r4,31
 1007f88:	d9002217 	ldw	r4,136(sp)
 1007f8c:	10c00115 	stw	r3,4(r2)
 1007f90:	21000104 	addi	r4,r4,4
 1007f94:	d9002215 	stw	r4,136(sp)
 1007f98:	d9002317 	ldw	r4,140(sp)
 1007f9c:	11000015 	stw	r4,0(r2)
 1007fa0:	003e1606 	br	10077fc <___vfiprintf_internal_r+0xd0>
 1007fa4:	d8802217 	ldw	r2,136(sp)
 1007fa8:	d8c02217 	ldw	r3,136(sp)
 1007fac:	15800017 	ldw	r22,0(r2)
 1007fb0:	13400117 	ldw	r13,4(r2)
 1007fb4:	18c00204 	addi	r3,r3,8
 1007fb8:	0005883a 	mov	r2,zero
 1007fbc:	d8c02215 	stw	r3,136(sp)
 1007fc0:	b348b03a 	or	r4,r22,r13
 1007fc4:	003eb706 	br	1007aa4 <___vfiprintf_internal_r+0x378>
 1007fc8:	38803fcc 	andi	r2,r7,255
 1007fcc:	1080201c 	xori	r2,r2,128
 1007fd0:	10bfe004 	addi	r2,r2,-128
 1007fd4:	1001e31e 	bne	r2,zero,1008764 <___vfiprintf_internal_r+0x1038>
 1007fd8:	8005883a 	mov	r2,r16
 1007fdc:	01c00804 	movi	r7,32
 1007fe0:	80c00007 	ldb	r3,0(r16)
 1007fe4:	003e2f06 	br	10078a4 <___vfiprintf_internal_r+0x178>
 1007fe8:	ad400054 	ori	r21,r21,1
 1007fec:	8005883a 	mov	r2,r16
 1007ff0:	80c00007 	ldb	r3,0(r16)
 1007ff4:	003e2b06 	br	10078a4 <___vfiprintf_internal_r+0x178>
 1007ff8:	d8c02217 	ldw	r3,136(sp)
 1007ffc:	1c800017 	ldw	r18,0(r3)
 1008000:	18c00104 	addi	r3,r3,4
 1008004:	90023816 	blt	r18,zero,10088e8 <___vfiprintf_internal_r+0x11bc>
 1008008:	d8c02215 	stw	r3,136(sp)
 100800c:	8005883a 	mov	r2,r16
 1008010:	80c00007 	ldb	r3,0(r16)
 1008014:	003e2306 	br	10078a4 <___vfiprintf_internal_r+0x178>
 1008018:	8005883a 	mov	r2,r16
 100801c:	01c00ac4 	movi	r7,43
 1008020:	80c00007 	ldb	r3,0(r16)
 1008024:	003e1f06 	br	10078a4 <___vfiprintf_internal_r+0x178>
 1008028:	d8c02217 	ldw	r3,136(sp)
 100802c:	04400044 	movi	r17,1
 1008030:	d8001d85 	stb	zero,118(sp)
 1008034:	18800017 	ldw	r2,0(r3)
 1008038:	18c00104 	addi	r3,r3,4
 100803c:	d8c02215 	stw	r3,136(sp)
 1008040:	d8801005 	stb	r2,64(sp)
 1008044:	8827883a 	mov	r19,r17
 1008048:	dd001004 	addi	r20,sp,64
 100804c:	0013883a 	mov	r9,zero
 1008050:	003eb806 	br	1007b34 <___vfiprintf_internal_r+0x408>
 1008054:	d9c01d85 	stb	r7,118(sp)
 1008058:	a880080c 	andi	r2,r21,32
 100805c:	d8c02217 	ldw	r3,136(sp)
 1008060:	103fa61e 	bne	r2,zero,1007efc <___vfiprintf_internal_r+0x7d0>
 1008064:	a880040c 	andi	r2,r21,16
 1008068:	1001dd26 	beq	r2,zero,10087e0 <___vfiprintf_internal_r+0x10b4>
 100806c:	1d800017 	ldw	r22,0(r3)
 1008070:	d8802217 	ldw	r2,136(sp)
 1008074:	b01bd7fa 	srai	r13,r22,31
 1008078:	10800104 	addi	r2,r2,4
 100807c:	d8802215 	stw	r2,136(sp)
 1008080:	6805883a 	mov	r2,r13
 1008084:	003fa306 	br	1007f14 <___vfiprintf_internal_r+0x7e8>
 1008088:	00804074 	movhi	r2,257
 100808c:	10bb5404 	addi	r2,r2,-4784
 1008090:	d8802615 	stw	r2,152(sp)
 1008094:	d9c01d85 	stb	r7,118(sp)
 1008098:	a880080c 	andi	r2,r21,32
 100809c:	10004726 	beq	r2,zero,10081bc <___vfiprintf_internal_r+0xa90>
 10080a0:	d9002217 	ldw	r4,136(sp)
 10080a4:	25800017 	ldw	r22,0(r4)
 10080a8:	23400117 	ldw	r13,4(r4)
 10080ac:	21000204 	addi	r4,r4,8
 10080b0:	d9002215 	stw	r4,136(sp)
 10080b4:	a880004c 	andi	r2,r21,1
 10080b8:	10014e26 	beq	r2,zero,10085f4 <___vfiprintf_internal_r+0xec8>
 10080bc:	b348b03a 	or	r4,r22,r13
 10080c0:	20019c26 	beq	r4,zero,1008734 <___vfiprintf_internal_r+0x1008>
 10080c4:	00800c04 	movi	r2,48
 10080c8:	d8801d05 	stb	r2,116(sp)
 10080cc:	d8c01d45 	stb	r3,117(sp)
 10080d0:	ad400094 	ori	r21,r21,2
 10080d4:	00800084 	movi	r2,2
 10080d8:	003e7206 	br	1007aa4 <___vfiprintf_internal_r+0x378>
 10080dc:	d8c02217 	ldw	r3,136(sp)
 10080e0:	d8001d85 	stb	zero,118(sp)
 10080e4:	1d000017 	ldw	r20,0(r3)
 10080e8:	1d800104 	addi	r22,r3,4
 10080ec:	a0021c26 	beq	r20,zero,1008960 <___vfiprintf_internal_r+0x1234>
 10080f0:	a009883a 	mov	r4,r20
 10080f4:	48020016 	blt	r9,zero,10088f8 <___vfiprintf_internal_r+0x11cc>
 10080f8:	480d883a 	mov	r6,r9
 10080fc:	000b883a 	mov	r5,zero
 1008100:	da002a15 	stw	r8,168(sp)
 1008104:	da402b15 	stw	r9,172(sp)
 1008108:	10059c80 	call	10059c8 <memchr>
 100810c:	da002a17 	ldw	r8,168(sp)
 1008110:	da402b17 	ldw	r9,172(sp)
 1008114:	10022226 	beq	r2,zero,10089a0 <___vfiprintf_internal_r+0x1274>
 1008118:	1527c83a 	sub	r19,r2,r20
 100811c:	4cc1c916 	blt	r9,r19,1008844 <___vfiprintf_internal_r+0x1118>
 1008120:	db801d83 	ldbu	r14,118(sp)
 1008124:	dd802215 	stw	r22,136(sp)
 1008128:	0013883a 	mov	r9,zero
 100812c:	003e7906 	br	1007b14 <___vfiprintf_internal_r+0x3e8>
 1008130:	ad401014 	ori	r21,r21,64
 1008134:	8005883a 	mov	r2,r16
 1008138:	80c00007 	ldb	r3,0(r16)
 100813c:	003dd906 	br	10078a4 <___vfiprintf_internal_r+0x178>
 1008140:	80c00007 	ldb	r3,0(r16)
 1008144:	8005883a 	mov	r2,r16
 1008148:	1b01e326 	beq	r3,r12,10088d8 <___vfiprintf_internal_r+0x11ac>
 100814c:	ad400414 	ori	r21,r21,16
 1008150:	003dd406 	br	10078a4 <___vfiprintf_internal_r+0x178>
 1008154:	d9002217 	ldw	r4,136(sp)
 1008158:	00800c04 	movi	r2,48
 100815c:	d8801d05 	stb	r2,116(sp)
 1008160:	25800017 	ldw	r22,0(r4)
 1008164:	00801e04 	movi	r2,120
 1008168:	d8801d45 	stb	r2,117(sp)
 100816c:	00804074 	movhi	r2,257
 1008170:	21000104 	addi	r4,r4,4
 1008174:	10bb5904 	addi	r2,r2,-4764
 1008178:	d9002215 	stw	r4,136(sp)
 100817c:	d8802615 	stw	r2,152(sp)
 1008180:	001b883a 	mov	r13,zero
 1008184:	ad400094 	ori	r21,r21,2
 1008188:	00800084 	movi	r2,2
 100818c:	b009883a 	mov	r4,r22
 1008190:	003e4406 	br	1007aa4 <___vfiprintf_internal_r+0x378>
 1008194:	ad400814 	ori	r21,r21,32
 1008198:	8005883a 	mov	r2,r16
 100819c:	80c00007 	ldb	r3,0(r16)
 10081a0:	003dc006 	br	10078a4 <___vfiprintf_internal_r+0x178>
 10081a4:	00804074 	movhi	r2,257
 10081a8:	10bb5904 	addi	r2,r2,-4764
 10081ac:	d8802615 	stw	r2,152(sp)
 10081b0:	d9c01d85 	stb	r7,118(sp)
 10081b4:	a880080c 	andi	r2,r21,32
 10081b8:	103fb91e 	bne	r2,zero,10080a0 <___vfiprintf_internal_r+0x974>
 10081bc:	a880040c 	andi	r2,r21,16
 10081c0:	10010f1e 	bne	r2,zero,1008600 <___vfiprintf_internal_r+0xed4>
 10081c4:	a880100c 	andi	r2,r21,64
 10081c8:	10010d26 	beq	r2,zero,1008600 <___vfiprintf_internal_r+0xed4>
 10081cc:	d9002217 	ldw	r4,136(sp)
 10081d0:	001b883a 	mov	r13,zero
 10081d4:	2580000b 	ldhu	r22,0(r4)
 10081d8:	21000104 	addi	r4,r4,4
 10081dc:	d9002215 	stw	r4,136(sp)
 10081e0:	003fb406 	br	10080b4 <___vfiprintf_internal_r+0x988>
 10081e4:	d9002217 	ldw	r4,136(sp)
 10081e8:	00800044 	movi	r2,1
 10081ec:	25800017 	ldw	r22,0(r4)
 10081f0:	23400117 	ldw	r13,4(r4)
 10081f4:	21000204 	addi	r4,r4,8
 10081f8:	d9002215 	stw	r4,136(sp)
 10081fc:	b348b03a 	or	r4,r22,r13
 1008200:	003e2806 	br	1007aa4 <___vfiprintf_internal_r+0x378>
 1008204:	d9c01d85 	stb	r7,118(sp)
 1008208:	1801ab26 	beq	r3,zero,10088b8 <___vfiprintf_internal_r+0x118c>
 100820c:	04400044 	movi	r17,1
 1008210:	d8c01005 	stb	r3,64(sp)
 1008214:	d8001d85 	stb	zero,118(sp)
 1008218:	8827883a 	mov	r19,r17
 100821c:	dd001004 	addi	r20,sp,64
 1008220:	003f8a06 	br	100804c <___vfiprintf_internal_r+0x920>
 1008224:	d9002017 	ldw	r4,128(sp)
 1008228:	d9402117 	ldw	r5,132(sp)
 100822c:	d9801a04 	addi	r6,sp,104
 1008230:	d9c02b15 	stw	r7,172(sp)
 1008234:	dbc02a15 	stw	r15,168(sp)
 1008238:	10076180 	call	1007618 <__sprint_r.part.0>
 100823c:	d9c02b17 	ldw	r7,172(sp)
 1008240:	dbc02a17 	ldw	r15,168(sp)
 1008244:	1000631e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 1008248:	d9801b17 	ldw	r6,108(sp)
 100824c:	d8801c17 	ldw	r2,112(sp)
 1008250:	d811883a 	mov	r8,sp
 1008254:	31400044 	addi	r5,r6,1
 1008258:	003e4d06 	br	1007b90 <___vfiprintf_internal_r+0x464>
 100825c:	d9401b17 	ldw	r5,108(sp)
 1008260:	d8801c17 	ldw	r2,112(sp)
 1008264:	29000044 	addi	r4,r5,1
 1008268:	d8c01d87 	ldb	r3,118(sp)
 100826c:	183e6726 	beq	r3,zero,1007c0c <___vfiprintf_internal_r+0x4e0>
 1008270:	00c00044 	movi	r3,1
 1008274:	d9401d84 	addi	r5,sp,118
 1008278:	10c5883a 	add	r2,r2,r3
 100827c:	41400015 	stw	r5,0(r8)
 1008280:	40c00115 	stw	r3,4(r8)
 1008284:	d8801c15 	stw	r2,112(sp)
 1008288:	d9001b15 	stw	r4,108(sp)
 100828c:	014001c4 	movi	r5,7
 1008290:	2900ab16 	blt	r5,r4,1008540 <___vfiprintf_internal_r+0xe14>
 1008294:	200b883a 	mov	r5,r4
 1008298:	42000204 	addi	r8,r8,8
 100829c:	21000044 	addi	r4,r4,1
 10082a0:	003e5a06 	br	1007c0c <___vfiprintf_internal_r+0x4e0>
 10082a4:	d9002017 	ldw	r4,128(sp)
 10082a8:	d9402117 	ldw	r5,132(sp)
 10082ac:	d9801a04 	addi	r6,sp,104
 10082b0:	d9c02b15 	stw	r7,172(sp)
 10082b4:	db402a15 	stw	r13,168(sp)
 10082b8:	10076180 	call	1007618 <__sprint_r.part.0>
 10082bc:	d9c02b17 	ldw	r7,172(sp)
 10082c0:	db402a17 	ldw	r13,168(sp)
 10082c4:	1000431e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 10082c8:	d9401b17 	ldw	r5,108(sp)
 10082cc:	d8801c17 	ldw	r2,112(sp)
 10082d0:	d811883a 	mov	r8,sp
 10082d4:	29000044 	addi	r4,r5,1
 10082d8:	003e6706 	br	1007c78 <___vfiprintf_internal_r+0x54c>
 10082dc:	10803fcc 	andi	r2,r2,255
 10082e0:	00c00044 	movi	r3,1
 10082e4:	10fdfa1e 	bne	r2,r3,1007ad0 <___vfiprintf_internal_r+0x3a4>
 10082e8:	6800021e 	bne	r13,zero,10082f4 <___vfiprintf_internal_r+0xbc8>
 10082ec:	00800244 	movi	r2,9
 10082f0:	1580222e 	bgeu	r2,r22,100837c <___vfiprintf_internal_r+0xc50>
 10082f4:	dc802415 	stw	r18,144(sp)
 10082f8:	dc002515 	stw	r16,148(sp)
 10082fc:	dc401a04 	addi	r17,sp,104
 1008300:	b021883a 	mov	r16,r22
 1008304:	4827883a 	mov	r19,r9
 1008308:	4029883a 	mov	r20,r8
 100830c:	702d883a 	mov	r22,r14
 1008310:	6825883a 	mov	r18,r13
 1008314:	8009883a 	mov	r4,r16
 1008318:	900b883a 	mov	r5,r18
 100831c:	01800284 	movi	r6,10
 1008320:	000f883a 	mov	r7,zero
 1008324:	10099940 	call	1009994 <__umoddi3>
 1008328:	10800c04 	addi	r2,r2,48
 100832c:	8c7fffc4 	addi	r17,r17,-1
 1008330:	8009883a 	mov	r4,r16
 1008334:	900b883a 	mov	r5,r18
 1008338:	01800284 	movi	r6,10
 100833c:	000f883a 	mov	r7,zero
 1008340:	88800005 	stb	r2,0(r17)
 1008344:	10093d40 	call	10093d4 <__udivdi3>
 1008348:	1021883a 	mov	r16,r2
 100834c:	10c4b03a 	or	r2,r2,r3
 1008350:	1825883a 	mov	r18,r3
 1008354:	103fef1e 	bne	r2,zero,1008314 <___vfiprintf_internal_r+0xbe8>
 1008358:	dc802417 	ldw	r18,144(sp)
 100835c:	dc002517 	ldw	r16,148(sp)
 1008360:	a011883a 	mov	r8,r20
 1008364:	9813883a 	mov	r9,r19
 1008368:	b01d883a 	mov	r14,r22
 100836c:	8829883a 	mov	r20,r17
 1008370:	d8c01e17 	ldw	r3,120(sp)
 1008374:	1d27c83a 	sub	r19,r3,r20
 1008378:	003de606 	br	1007b14 <___vfiprintf_internal_r+0x3e8>
 100837c:	b5800c04 	addi	r22,r22,48
 1008380:	dd8019c5 	stb	r22,103(sp)
 1008384:	dcc02717 	ldw	r19,156(sp)
 1008388:	dd0019c4 	addi	r20,sp,103
 100838c:	003de106 	br	1007b14 <___vfiprintf_internal_r+0x3e8>
 1008390:	d9002017 	ldw	r4,128(sp)
 1008394:	d9402117 	ldw	r5,132(sp)
 1008398:	d9801a04 	addi	r6,sp,104
 100839c:	10076180 	call	1007618 <__sprint_r.part.0>
 10083a0:	10000c1e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 10083a4:	d8801c17 	ldw	r2,112(sp)
 10083a8:	8c80010e 	bge	r17,r18,10083b0 <___vfiprintf_internal_r+0xc84>
 10083ac:	9023883a 	mov	r17,r18
 10083b0:	d8c02317 	ldw	r3,140(sp)
 10083b4:	1c47883a 	add	r3,r3,r17
 10083b8:	d8c02315 	stw	r3,140(sp)
 10083bc:	103e7e26 	beq	r2,zero,1007db8 <___vfiprintf_internal_r+0x68c>
 10083c0:	d9002017 	ldw	r4,128(sp)
 10083c4:	d9402117 	ldw	r5,132(sp)
 10083c8:	d9801a04 	addi	r6,sp,104
 10083cc:	10076180 	call	1007618 <__sprint_r.part.0>
 10083d0:	103e7926 	beq	r2,zero,1007db8 <___vfiprintf_internal_r+0x68c>
 10083d4:	dd402117 	ldw	r21,132(sp)
 10083d8:	a880030b 	ldhu	r2,12(r21)
 10083dc:	1080100c 	andi	r2,r2,64
 10083e0:	103e881e 	bne	r2,zero,1007e04 <___vfiprintf_internal_r+0x6d8>
 10083e4:	d8802317 	ldw	r2,140(sp)
 10083e8:	003e8706 	br	1007e08 <___vfiprintf_internal_r+0x6dc>
 10083ec:	d9402117 	ldw	r5,132(sp)
 10083f0:	b009883a 	mov	r4,r22
 10083f4:	d9801a04 	addi	r6,sp,104
 10083f8:	10076180 	call	1007618 <__sprint_r.part.0>
 10083fc:	103ff51e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 1008400:	d9001b17 	ldw	r4,108(sp)
 1008404:	d8801c17 	ldw	r2,112(sp)
 1008408:	d811883a 	mov	r8,sp
 100840c:	21400044 	addi	r5,r4,1
 1008410:	003e4d06 	br	1007d48 <___vfiprintf_internal_r+0x61c>
 1008414:	1000aa1e 	bne	r2,zero,10086c0 <___vfiprintf_internal_r+0xf94>
 1008418:	00c00044 	movi	r3,1
 100841c:	9805883a 	mov	r2,r19
 1008420:	dd000015 	stw	r20,0(sp)
 1008424:	dcc00115 	stw	r19,4(sp)
 1008428:	dcc01c15 	stw	r19,112(sp)
 100842c:	d8c01b15 	stw	r3,108(sp)
 1008430:	d811883a 	mov	r8,sp
 1008434:	42000204 	addi	r8,r8,8
 1008438:	aac0010c 	andi	r11,r21,4
 100843c:	583fda26 	beq	r11,zero,10083a8 <___vfiprintf_internal_r+0xc7c>
 1008440:	9467c83a 	sub	r19,r18,r17
 1008444:	04fe3316 	blt	zero,r19,1007d14 <___vfiprintf_internal_r+0x5e8>
 1008448:	003fd706 	br	10083a8 <___vfiprintf_internal_r+0xc7c>
 100844c:	946dc83a 	sub	r22,r18,r17
 1008450:	05bdfd0e 	bge	zero,r22,1007c48 <___vfiprintf_internal_r+0x51c>
 1008454:	00c04074 	movhi	r3,257
 1008458:	18fbba04 	addi	r3,r3,-4376
 100845c:	01c00404 	movi	r7,16
 1008460:	d8c02415 	stw	r3,144(sp)
 1008464:	3d81530e 	bge	r7,r22,10089b4 <___vfiprintf_internal_r+0x1288>
 1008468:	8007883a 	mov	r3,r16
 100846c:	034001c4 	movi	r13,7
 1008470:	b021883a 	mov	r16,r22
 1008474:	da402515 	stw	r9,148(sp)
 1008478:	182d883a 	mov	r22,r3
 100847c:	00000506 	br	1008494 <___vfiprintf_internal_r+0xd68>
 1008480:	29800084 	addi	r6,r5,2
 1008484:	42000204 	addi	r8,r8,8
 1008488:	180b883a 	mov	r5,r3
 100848c:	843ffc04 	addi	r16,r16,-16
 1008490:	3c000d0e 	bge	r7,r16,10084c8 <___vfiprintf_internal_r+0xd9c>
 1008494:	10800404 	addi	r2,r2,16
 1008498:	28c00044 	addi	r3,r5,1
 100849c:	45c00015 	stw	r23,0(r8)
 10084a0:	41c00115 	stw	r7,4(r8)
 10084a4:	d8801c15 	stw	r2,112(sp)
 10084a8:	d8c01b15 	stw	r3,108(sp)
 10084ac:	68fff40e 	bge	r13,r3,1008480 <___vfiprintf_internal_r+0xd54>
 10084b0:	1000151e 	bne	r2,zero,1008508 <___vfiprintf_internal_r+0xddc>
 10084b4:	843ffc04 	addi	r16,r16,-16
 10084b8:	01800044 	movi	r6,1
 10084bc:	000b883a 	mov	r5,zero
 10084c0:	d811883a 	mov	r8,sp
 10084c4:	3c3ff316 	blt	r7,r16,1008494 <___vfiprintf_internal_r+0xd68>
 10084c8:	da402517 	ldw	r9,148(sp)
 10084cc:	b007883a 	mov	r3,r22
 10084d0:	802d883a 	mov	r22,r16
 10084d4:	1821883a 	mov	r16,r3
 10084d8:	d8c02417 	ldw	r3,144(sp)
 10084dc:	1585883a 	add	r2,r2,r22
 10084e0:	45800115 	stw	r22,4(r8)
 10084e4:	40c00015 	stw	r3,0(r8)
 10084e8:	d8801c15 	stw	r2,112(sp)
 10084ec:	d9801b15 	stw	r6,108(sp)
 10084f0:	00c001c4 	movi	r3,7
 10084f4:	19806d16 	blt	r3,r6,10086ac <___vfiprintf_internal_r+0xf80>
 10084f8:	42000204 	addi	r8,r8,8
 10084fc:	31000044 	addi	r4,r6,1
 1008500:	300b883a 	mov	r5,r6
 1008504:	003dd006 	br	1007c48 <___vfiprintf_internal_r+0x51c>
 1008508:	d9002017 	ldw	r4,128(sp)
 100850c:	d9402117 	ldw	r5,132(sp)
 1008510:	d9801a04 	addi	r6,sp,104
 1008514:	d9c02b15 	stw	r7,172(sp)
 1008518:	db402a15 	stw	r13,168(sp)
 100851c:	10076180 	call	1007618 <__sprint_r.part.0>
 1008520:	d9c02b17 	ldw	r7,172(sp)
 1008524:	db402a17 	ldw	r13,168(sp)
 1008528:	103faa1e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 100852c:	d9401b17 	ldw	r5,108(sp)
 1008530:	d8801c17 	ldw	r2,112(sp)
 1008534:	d811883a 	mov	r8,sp
 1008538:	29800044 	addi	r6,r5,1
 100853c:	003fd306 	br	100848c <___vfiprintf_internal_r+0xd60>
 1008540:	1000401e 	bne	r2,zero,1008644 <___vfiprintf_internal_r+0xf18>
 1008544:	68003b26 	beq	r13,zero,1008634 <___vfiprintf_internal_r+0xf08>
 1008548:	d9001d04 	addi	r4,sp,116
 100854c:	00800084 	movi	r2,2
 1008550:	d9000015 	stw	r4,0(sp)
 1008554:	d8800115 	stw	r2,4(sp)
 1008558:	1809883a 	mov	r4,r3
 100855c:	d811883a 	mov	r8,sp
 1008560:	003db406 	br	1007c34 <___vfiprintf_internal_r+0x508>
 1008564:	1000451e 	bne	r2,zero,100867c <___vfiprintf_internal_r+0xf50>
 1008568:	01000044 	movi	r4,1
 100856c:	000b883a 	mov	r5,zero
 1008570:	d811883a 	mov	r8,sp
 1008574:	003db206 	br	1007c40 <___vfiprintf_internal_r+0x514>
 1008578:	10803fcc 	andi	r2,r2,255
 100857c:	1000071e 	bne	r2,zero,100859c <___vfiprintf_internal_r+0xe70>
 1008580:	a880004c 	andi	r2,r21,1
 1008584:	10000526 	beq	r2,zero,100859c <___vfiprintf_internal_r+0xe70>
 1008588:	00800c04 	movi	r2,48
 100858c:	d88019c5 	stb	r2,103(sp)
 1008590:	dcc02717 	ldw	r19,156(sp)
 1008594:	dd0019c4 	addi	r20,sp,103
 1008598:	003d5e06 	br	1007b14 <___vfiprintf_internal_r+0x3e8>
 100859c:	dd001a04 	addi	r20,sp,104
 10085a0:	003d5c06 	br	1007b14 <___vfiprintf_internal_r+0x3e8>
 10085a4:	1000971e 	bne	r2,zero,1008804 <___vfiprintf_internal_r+0x10d8>
 10085a8:	d8c01d87 	ldb	r3,118(sp)
 10085ac:	18005826 	beq	r3,zero,1008710 <___vfiprintf_internal_r+0xfe4>
 10085b0:	00800044 	movi	r2,1
 10085b4:	d8c01d84 	addi	r3,sp,118
 10085b8:	1009883a 	mov	r4,r2
 10085bc:	d8c00015 	stw	r3,0(sp)
 10085c0:	d8800115 	stw	r2,4(sp)
 10085c4:	d811883a 	mov	r8,sp
 10085c8:	003f3206 	br	1008294 <___vfiprintf_internal_r+0xb68>
 10085cc:	8023883a 	mov	r17,r16
 10085d0:	003ca706 	br	1007870 <___vfiprintf_internal_r+0x144>
 10085d4:	d9002017 	ldw	r4,128(sp)
 10085d8:	d9402117 	ldw	r5,132(sp)
 10085dc:	d9801a04 	addi	r6,sp,104
 10085e0:	10076180 	call	1007618 <__sprint_r.part.0>
 10085e4:	103f7b1e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 10085e8:	d8801c17 	ldw	r2,112(sp)
 10085ec:	d811883a 	mov	r8,sp
 10085f0:	003f9106 	br	1008438 <___vfiprintf_internal_r+0xd0c>
 10085f4:	00800084 	movi	r2,2
 10085f8:	b348b03a 	or	r4,r22,r13
 10085fc:	003d2906 	br	1007aa4 <___vfiprintf_internal_r+0x378>
 1008600:	d8802217 	ldw	r2,136(sp)
 1008604:	001b883a 	mov	r13,zero
 1008608:	15800017 	ldw	r22,0(r2)
 100860c:	10800104 	addi	r2,r2,4
 1008610:	d8802215 	stw	r2,136(sp)
 1008614:	003ea706 	br	10080b4 <___vfiprintf_internal_r+0x988>
 1008618:	d9002017 	ldw	r4,128(sp)
 100861c:	d9402117 	ldw	r5,132(sp)
 1008620:	d9801a04 	addi	r6,sp,104
 1008624:	10076180 	call	1007618 <__sprint_r.part.0>
 1008628:	103f6a1e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 100862c:	d811883a 	mov	r8,sp
 1008630:	003cff06 	br	1007a30 <___vfiprintf_internal_r+0x304>
 1008634:	000b883a 	mov	r5,zero
 1008638:	1809883a 	mov	r4,r3
 100863c:	d811883a 	mov	r8,sp
 1008640:	003d7f06 	br	1007c40 <___vfiprintf_internal_r+0x514>
 1008644:	d9002017 	ldw	r4,128(sp)
 1008648:	d9402117 	ldw	r5,132(sp)
 100864c:	d9801a04 	addi	r6,sp,104
 1008650:	da402b15 	stw	r9,172(sp)
 1008654:	db402a15 	stw	r13,168(sp)
 1008658:	10076180 	call	1007618 <__sprint_r.part.0>
 100865c:	da402b17 	ldw	r9,172(sp)
 1008660:	db402a17 	ldw	r13,168(sp)
 1008664:	103f5b1e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 1008668:	d9401b17 	ldw	r5,108(sp)
 100866c:	d8801c17 	ldw	r2,112(sp)
 1008670:	d811883a 	mov	r8,sp
 1008674:	29000044 	addi	r4,r5,1
 1008678:	003d6406 	br	1007c0c <___vfiprintf_internal_r+0x4e0>
 100867c:	d9002017 	ldw	r4,128(sp)
 1008680:	d9402117 	ldw	r5,132(sp)
 1008684:	d9801a04 	addi	r6,sp,104
 1008688:	da402b15 	stw	r9,172(sp)
 100868c:	10076180 	call	1007618 <__sprint_r.part.0>
 1008690:	da402b17 	ldw	r9,172(sp)
 1008694:	103f4f1e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 1008698:	d9401b17 	ldw	r5,108(sp)
 100869c:	d8801c17 	ldw	r2,112(sp)
 10086a0:	d811883a 	mov	r8,sp
 10086a4:	29000044 	addi	r4,r5,1
 10086a8:	003d6506 	br	1007c40 <___vfiprintf_internal_r+0x514>
 10086ac:	10009a1e 	bne	r2,zero,1008918 <___vfiprintf_internal_r+0x11ec>
 10086b0:	01000044 	movi	r4,1
 10086b4:	000b883a 	mov	r5,zero
 10086b8:	d811883a 	mov	r8,sp
 10086bc:	003d6206 	br	1007c48 <___vfiprintf_internal_r+0x51c>
 10086c0:	d9002017 	ldw	r4,128(sp)
 10086c4:	d9402117 	ldw	r5,132(sp)
 10086c8:	d9801a04 	addi	r6,sp,104
 10086cc:	10076180 	call	1007618 <__sprint_r.part.0>
 10086d0:	103f401e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 10086d4:	d9001b17 	ldw	r4,108(sp)
 10086d8:	d8801c17 	ldw	r2,112(sp)
 10086dc:	d811883a 	mov	r8,sp
 10086e0:	21000044 	addi	r4,r4,1
 10086e4:	003d7d06 	br	1007cdc <___vfiprintf_internal_r+0x5b0>
 10086e8:	05adc83a 	sub	r22,zero,r22
 10086ec:	b004c03a 	cmpne	r2,r22,zero
 10086f0:	035bc83a 	sub	r13,zero,r13
 10086f4:	689bc83a 	sub	r13,r13,r2
 10086f8:	03800b44 	movi	r14,45
 10086fc:	db801d85 	stb	r14,118(sp)
 1008700:	4827883a 	mov	r19,r9
 1008704:	00800044 	movi	r2,1
 1008708:	b348b03a 	or	r4,r22,r13
 100870c:	003ce806 	br	1007ab0 <___vfiprintf_internal_r+0x384>
 1008710:	000b883a 	mov	r5,zero
 1008714:	01000044 	movi	r4,1
 1008718:	d811883a 	mov	r8,sp
 100871c:	683d4826 	beq	r13,zero,1007c40 <___vfiprintf_internal_r+0x514>
 1008720:	00800084 	movi	r2,2
 1008724:	d8c01d04 	addi	r3,sp,116
 1008728:	d8c00015 	stw	r3,0(sp)
 100872c:	d8800115 	stw	r2,4(sp)
 1008730:	003d4006 	br	1007c34 <___vfiprintf_internal_r+0x508>
 1008734:	00800084 	movi	r2,2
 1008738:	003cda06 	br	1007aa4 <___vfiprintf_internal_r+0x378>
 100873c:	a880100c 	andi	r2,r21,64
 1008740:	10004226 	beq	r2,zero,100884c <___vfiprintf_internal_r+0x1120>
 1008744:	d8802217 	ldw	r2,136(sp)
 1008748:	001b883a 	mov	r13,zero
 100874c:	1580000b 	ldhu	r22,0(r2)
 1008750:	10800104 	addi	r2,r2,4
 1008754:	d8802215 	stw	r2,136(sp)
 1008758:	b009883a 	mov	r4,r22
 100875c:	0005883a 	mov	r2,zero
 1008760:	003cd006 	br	1007aa4 <___vfiprintf_internal_r+0x378>
 1008764:	80c00007 	ldb	r3,0(r16)
 1008768:	8005883a 	mov	r2,r16
 100876c:	003c4d06 	br	10078a4 <___vfiprintf_internal_r+0x178>
 1008770:	a880100c 	andi	r2,r21,64
 1008774:	10004426 	beq	r2,zero,1008888 <___vfiprintf_internal_r+0x115c>
 1008778:	d8c02217 	ldw	r3,136(sp)
 100877c:	001b883a 	mov	r13,zero
 1008780:	00800044 	movi	r2,1
 1008784:	1d80000b 	ldhu	r22,0(r3)
 1008788:	18c00104 	addi	r3,r3,4
 100878c:	d8c02215 	stw	r3,136(sp)
 1008790:	b009883a 	mov	r4,r22
 1008794:	003cc306 	br	1007aa4 <___vfiprintf_internal_r+0x378>
 1008798:	a880040c 	andi	r2,r21,16
 100879c:	1000091e 	bne	r2,zero,10087c4 <___vfiprintf_internal_r+0x1098>
 10087a0:	aac0100c 	andi	r11,r21,64
 10087a4:	58000726 	beq	r11,zero,10087c4 <___vfiprintf_internal_r+0x1098>
 10087a8:	d8c02217 	ldw	r3,136(sp)
 10087ac:	d9002317 	ldw	r4,140(sp)
 10087b0:	18800017 	ldw	r2,0(r3)
 10087b4:	18c00104 	addi	r3,r3,4
 10087b8:	d8c02215 	stw	r3,136(sp)
 10087bc:	1100000d 	sth	r4,0(r2)
 10087c0:	003c0e06 	br	10077fc <___vfiprintf_internal_r+0xd0>
 10087c4:	d8c02217 	ldw	r3,136(sp)
 10087c8:	d9002317 	ldw	r4,140(sp)
 10087cc:	18800017 	ldw	r2,0(r3)
 10087d0:	18c00104 	addi	r3,r3,4
 10087d4:	d8c02215 	stw	r3,136(sp)
 10087d8:	11000015 	stw	r4,0(r2)
 10087dc:	003c0706 	br	10077fc <___vfiprintf_internal_r+0xd0>
 10087e0:	a880100c 	andi	r2,r21,64
 10087e4:	10002126 	beq	r2,zero,100886c <___vfiprintf_internal_r+0x1140>
 10087e8:	1d80000f 	ldh	r22,0(r3)
 10087ec:	d8c02217 	ldw	r3,136(sp)
 10087f0:	b01bd7fa 	srai	r13,r22,31
 10087f4:	18c00104 	addi	r3,r3,4
 10087f8:	d8c02215 	stw	r3,136(sp)
 10087fc:	6805883a 	mov	r2,r13
 1008800:	003dc406 	br	1007f14 <___vfiprintf_internal_r+0x7e8>
 1008804:	d9002017 	ldw	r4,128(sp)
 1008808:	d9402117 	ldw	r5,132(sp)
 100880c:	d9801a04 	addi	r6,sp,104
 1008810:	da402b15 	stw	r9,172(sp)
 1008814:	db402a15 	stw	r13,168(sp)
 1008818:	10076180 	call	1007618 <__sprint_r.part.0>
 100881c:	da402b17 	ldw	r9,172(sp)
 1008820:	db402a17 	ldw	r13,168(sp)
 1008824:	103eeb1e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 1008828:	d9401b17 	ldw	r5,108(sp)
 100882c:	d8801c17 	ldw	r2,112(sp)
 1008830:	d811883a 	mov	r8,sp
 1008834:	29000044 	addi	r4,r5,1
 1008838:	003e8b06 	br	1008268 <___vfiprintf_internal_r+0xb3c>
 100883c:	9023883a 	mov	r17,r18
 1008840:	003d5a06 	br	1007dac <___vfiprintf_internal_r+0x680>
 1008844:	4827883a 	mov	r19,r9
 1008848:	003e3506 	br	1008120 <___vfiprintf_internal_r+0x9f4>
 100884c:	d8c02217 	ldw	r3,136(sp)
 1008850:	001b883a 	mov	r13,zero
 1008854:	0005883a 	mov	r2,zero
 1008858:	1d800017 	ldw	r22,0(r3)
 100885c:	18c00104 	addi	r3,r3,4
 1008860:	d8c02215 	stw	r3,136(sp)
 1008864:	b009883a 	mov	r4,r22
 1008868:	003c8e06 	br	1007aa4 <___vfiprintf_internal_r+0x378>
 100886c:	1d800017 	ldw	r22,0(r3)
 1008870:	d9002217 	ldw	r4,136(sp)
 1008874:	b01bd7fa 	srai	r13,r22,31
 1008878:	21000104 	addi	r4,r4,4
 100887c:	d9002215 	stw	r4,136(sp)
 1008880:	6805883a 	mov	r2,r13
 1008884:	003da306 	br	1007f14 <___vfiprintf_internal_r+0x7e8>
 1008888:	d9002217 	ldw	r4,136(sp)
 100888c:	001b883a 	mov	r13,zero
 1008890:	00800044 	movi	r2,1
 1008894:	25800017 	ldw	r22,0(r4)
 1008898:	21000104 	addi	r4,r4,4
 100889c:	d9002215 	stw	r4,136(sp)
 10088a0:	b009883a 	mov	r4,r22
 10088a4:	003c7f06 	br	1007aa4 <___vfiprintf_internal_r+0x378>
 10088a8:	00c04074 	movhi	r3,257
 10088ac:	18fbba04 	addi	r3,r3,-4376
 10088b0:	d8c02415 	stw	r3,144(sp)
 10088b4:	003cff06 	br	1007cb4 <___vfiprintf_internal_r+0x588>
 10088b8:	d8801c17 	ldw	r2,112(sp)
 10088bc:	dd402117 	ldw	r21,132(sp)
 10088c0:	103ec526 	beq	r2,zero,10083d8 <___vfiprintf_internal_r+0xcac>
 10088c4:	d9002017 	ldw	r4,128(sp)
 10088c8:	a80b883a 	mov	r5,r21
 10088cc:	d9801a04 	addi	r6,sp,104
 10088d0:	10076180 	call	1007618 <__sprint_r.part.0>
 10088d4:	003ec006 	br	10083d8 <___vfiprintf_internal_r+0xcac>
 10088d8:	80800044 	addi	r2,r16,1
 10088dc:	ad400814 	ori	r21,r21,32
 10088e0:	80c00047 	ldb	r3,1(r16)
 10088e4:	003bef06 	br	10078a4 <___vfiprintf_internal_r+0x178>
 10088e8:	04a5c83a 	sub	r18,zero,r18
 10088ec:	8005883a 	mov	r2,r16
 10088f0:	d8c02215 	stw	r3,136(sp)
 10088f4:	003d5306 	br	1007e44 <___vfiprintf_internal_r+0x718>
 10088f8:	da002a15 	stw	r8,168(sp)
 10088fc:	10003b40 	call	10003b4 <strlen>
 1008900:	1027883a 	mov	r19,r2
 1008904:	db801d83 	ldbu	r14,118(sp)
 1008908:	dd802215 	stw	r22,136(sp)
 100890c:	0013883a 	mov	r9,zero
 1008910:	da002a17 	ldw	r8,168(sp)
 1008914:	003c7f06 	br	1007b14 <___vfiprintf_internal_r+0x3e8>
 1008918:	d9002017 	ldw	r4,128(sp)
 100891c:	d9402117 	ldw	r5,132(sp)
 1008920:	d9801a04 	addi	r6,sp,104
 1008924:	da402b15 	stw	r9,172(sp)
 1008928:	10076180 	call	1007618 <__sprint_r.part.0>
 100892c:	da402b17 	ldw	r9,172(sp)
 1008930:	103ea81e 	bne	r2,zero,10083d4 <___vfiprintf_internal_r+0xca8>
 1008934:	d9401b17 	ldw	r5,108(sp)
 1008938:	d8801c17 	ldw	r2,112(sp)
 100893c:	d811883a 	mov	r8,sp
 1008940:	29000044 	addi	r4,r5,1
 1008944:	003cc006 	br	1007c48 <___vfiprintf_internal_r+0x51c>
 1008948:	d9401b17 	ldw	r5,108(sp)
 100894c:	01004074 	movhi	r4,257
 1008950:	213bbe04 	addi	r4,r4,-4360
 1008954:	d9002415 	stw	r4,144(sp)
 1008958:	29400044 	addi	r5,r5,1
 100895c:	003c9f06 	br	1007bdc <___vfiprintf_internal_r+0x4b0>
 1008960:	00800184 	movi	r2,6
 1008964:	1240012e 	bgeu	r2,r9,100896c <___vfiprintf_internal_r+0x1240>
 1008968:	1013883a 	mov	r9,r2
 100896c:	4827883a 	mov	r19,r9
 1008970:	4823883a 	mov	r17,r9
 1008974:	48001116 	blt	r9,zero,10089bc <___vfiprintf_internal_r+0x1290>
 1008978:	05004074 	movhi	r20,257
 100897c:	dd802215 	stw	r22,136(sp)
 1008980:	a53b5e04 	addi	r20,r20,-4744
 1008984:	003db106 	br	100804c <___vfiprintf_internal_r+0x920>
 1008988:	d9401b17 	ldw	r5,108(sp)
 100898c:	01004074 	movhi	r4,257
 1008990:	213bbe04 	addi	r4,r4,-4360
 1008994:	d9002415 	stw	r4,144(sp)
 1008998:	29400044 	addi	r5,r5,1
 100899c:	003cf906 	br	1007d84 <___vfiprintf_internal_r+0x658>
 10089a0:	4827883a 	mov	r19,r9
 10089a4:	db801d83 	ldbu	r14,118(sp)
 10089a8:	dd802215 	stw	r22,136(sp)
 10089ac:	0013883a 	mov	r9,zero
 10089b0:	003c5806 	br	1007b14 <___vfiprintf_internal_r+0x3e8>
 10089b4:	200d883a 	mov	r6,r4
 10089b8:	003ec706 	br	10084d8 <___vfiprintf_internal_r+0xdac>
 10089bc:	0023883a 	mov	r17,zero
 10089c0:	003fed06 	br	1008978 <___vfiprintf_internal_r+0x124c>
 10089c4:	d9002217 	ldw	r4,136(sp)
 10089c8:	22400017 	ldw	r9,0(r4)
 10089cc:	20c00104 	addi	r3,r4,4
 10089d0:	d8c02215 	stw	r3,136(sp)
 10089d4:	483fc20e 	bge	r9,zero,10088e0 <___vfiprintf_internal_r+0x11b4>
 10089d8:	027fffc4 	movi	r9,-1
 10089dc:	80c00047 	ldb	r3,1(r16)
 10089e0:	003bb006 	br	10078a4 <___vfiprintf_internal_r+0x178>
 10089e4:	8c80010e 	bge	r17,r18,10089ec <___vfiprintf_internal_r+0x12c0>
 10089e8:	9023883a 	mov	r17,r18
 10089ec:	d8802317 	ldw	r2,140(sp)
 10089f0:	1445883a 	add	r2,r2,r17
 10089f4:	d8802315 	stw	r2,140(sp)
 10089f8:	003cef06 	br	1007db8 <___vfiprintf_internal_r+0x68c>

010089fc <__vfiprintf_internal>:
 10089fc:	2007883a 	mov	r3,r4
 1008a00:	01004074 	movhi	r4,257
 1008a04:	2102b904 	addi	r4,r4,2788
 1008a08:	21000017 	ldw	r4,0(r4)
 1008a0c:	2805883a 	mov	r2,r5
 1008a10:	300f883a 	mov	r7,r6
 1008a14:	180b883a 	mov	r5,r3
 1008a18:	100d883a 	mov	r6,r2
 1008a1c:	100772c1 	jmpi	100772c <___vfiprintf_internal_r>

01008a20 <__sbprintf>:
 1008a20:	2880030b 	ldhu	r2,12(r5)
 1008a24:	2ac01917 	ldw	r11,100(r5)
 1008a28:	2a80038b 	ldhu	r10,14(r5)
 1008a2c:	2a400717 	ldw	r9,28(r5)
 1008a30:	2a000917 	ldw	r8,36(r5)
 1008a34:	defee204 	addi	sp,sp,-1144
 1008a38:	00c10004 	movi	r3,1024
 1008a3c:	dc011a15 	stw	r16,1128(sp)
 1008a40:	10bfff4c 	andi	r2,r2,65533
 1008a44:	2821883a 	mov	r16,r5
 1008a48:	d8cb883a 	add	r5,sp,r3
 1008a4c:	dc811c15 	stw	r18,1136(sp)
 1008a50:	dc411b15 	stw	r17,1132(sp)
 1008a54:	dfc11d15 	stw	ra,1140(sp)
 1008a58:	2025883a 	mov	r18,r4
 1008a5c:	d881030d 	sth	r2,1036(sp)
 1008a60:	dac11915 	stw	r11,1124(sp)
 1008a64:	da81038d 	sth	r10,1038(sp)
 1008a68:	da410715 	stw	r9,1052(sp)
 1008a6c:	da010915 	stw	r8,1060(sp)
 1008a70:	dec10015 	stw	sp,1024(sp)
 1008a74:	dec10415 	stw	sp,1040(sp)
 1008a78:	d8c10215 	stw	r3,1032(sp)
 1008a7c:	d8c10515 	stw	r3,1044(sp)
 1008a80:	d8010615 	stw	zero,1048(sp)
 1008a84:	100772c0 	call	100772c <___vfiprintf_internal_r>
 1008a88:	1023883a 	mov	r17,r2
 1008a8c:	10000416 	blt	r2,zero,1008aa0 <__sbprintf+0x80>
 1008a90:	9009883a 	mov	r4,r18
 1008a94:	d9410004 	addi	r5,sp,1024
 1008a98:	10041000 	call	1004100 <_fflush_r>
 1008a9c:	10000d1e 	bne	r2,zero,1008ad4 <__sbprintf+0xb4>
 1008aa0:	d8c1030b 	ldhu	r3,1036(sp)
 1008aa4:	18c0100c 	andi	r3,r3,64
 1008aa8:	18000326 	beq	r3,zero,1008ab8 <__sbprintf+0x98>
 1008aac:	8080030b 	ldhu	r2,12(r16)
 1008ab0:	10801014 	ori	r2,r2,64
 1008ab4:	8080030d 	sth	r2,12(r16)
 1008ab8:	8805883a 	mov	r2,r17
 1008abc:	dfc11d17 	ldw	ra,1140(sp)
 1008ac0:	dc811c17 	ldw	r18,1136(sp)
 1008ac4:	dc411b17 	ldw	r17,1132(sp)
 1008ac8:	dc011a17 	ldw	r16,1128(sp)
 1008acc:	dec11e04 	addi	sp,sp,1144
 1008ad0:	f800283a 	ret
 1008ad4:	047fffc4 	movi	r17,-1
 1008ad8:	003ff106 	br	1008aa0 <__sbprintf+0x80>

01008adc <_write_r>:
 1008adc:	defffd04 	addi	sp,sp,-12
 1008ae0:	dc000015 	stw	r16,0(sp)
 1008ae4:	04004074 	movhi	r16,257
 1008ae8:	dc400115 	stw	r17,4(sp)
 1008aec:	84098904 	addi	r16,r16,9764
 1008af0:	2023883a 	mov	r17,r4
 1008af4:	2809883a 	mov	r4,r5
 1008af8:	300b883a 	mov	r5,r6
 1008afc:	380d883a 	mov	r6,r7
 1008b00:	dfc00215 	stw	ra,8(sp)
 1008b04:	80000015 	stw	zero,0(r16)
 1008b08:	100cefc0 	call	100cefc <write>
 1008b0c:	00ffffc4 	movi	r3,-1
 1008b10:	10c00526 	beq	r2,r3,1008b28 <_write_r+0x4c>
 1008b14:	dfc00217 	ldw	ra,8(sp)
 1008b18:	dc400117 	ldw	r17,4(sp)
 1008b1c:	dc000017 	ldw	r16,0(sp)
 1008b20:	dec00304 	addi	sp,sp,12
 1008b24:	f800283a 	ret
 1008b28:	80c00017 	ldw	r3,0(r16)
 1008b2c:	183ff926 	beq	r3,zero,1008b14 <_write_r+0x38>
 1008b30:	88c00015 	stw	r3,0(r17)
 1008b34:	003ff706 	br	1008b14 <_write_r+0x38>

01008b38 <_close_r>:
 1008b38:	defffd04 	addi	sp,sp,-12
 1008b3c:	dc000015 	stw	r16,0(sp)
 1008b40:	04004074 	movhi	r16,257
 1008b44:	dc400115 	stw	r17,4(sp)
 1008b48:	84098904 	addi	r16,r16,9764
 1008b4c:	2023883a 	mov	r17,r4
 1008b50:	2809883a 	mov	r4,r5
 1008b54:	dfc00215 	stw	ra,8(sp)
 1008b58:	80000015 	stw	zero,0(r16)
 1008b5c:	100c6a00 	call	100c6a0 <close>
 1008b60:	00ffffc4 	movi	r3,-1
 1008b64:	10c00526 	beq	r2,r3,1008b7c <_close_r+0x44>
 1008b68:	dfc00217 	ldw	ra,8(sp)
 1008b6c:	dc400117 	ldw	r17,4(sp)
 1008b70:	dc000017 	ldw	r16,0(sp)
 1008b74:	dec00304 	addi	sp,sp,12
 1008b78:	f800283a 	ret
 1008b7c:	80c00017 	ldw	r3,0(r16)
 1008b80:	183ff926 	beq	r3,zero,1008b68 <_close_r+0x30>
 1008b84:	88c00015 	stw	r3,0(r17)
 1008b88:	003ff706 	br	1008b68 <_close_r+0x30>

01008b8c <_calloc_r>:
 1008b8c:	298b383a 	mul	r5,r5,r6
 1008b90:	defffe04 	addi	sp,sp,-8
 1008b94:	dc000015 	stw	r16,0(sp)
 1008b98:	dfc00115 	stw	ra,4(sp)
 1008b9c:	10052200 	call	1005220 <_malloc_r>
 1008ba0:	1021883a 	mov	r16,r2
 1008ba4:	10002826 	beq	r2,zero,1008c48 <_calloc_r+0xbc>
 1008ba8:	11bfff17 	ldw	r6,-4(r2)
 1008bac:	00bfff04 	movi	r2,-4
 1008bb0:	00c00904 	movi	r3,36
 1008bb4:	308c703a 	and	r6,r6,r2
 1008bb8:	308d883a 	add	r6,r6,r2
 1008bbc:	19801436 	bltu	r3,r6,1008c10 <_calloc_r+0x84>
 1008bc0:	008004c4 	movi	r2,19
 1008bc4:	11800936 	bltu	r2,r6,1008bec <_calloc_r+0x60>
 1008bc8:	8005883a 	mov	r2,r16
 1008bcc:	10000015 	stw	zero,0(r2)
 1008bd0:	10000115 	stw	zero,4(r2)
 1008bd4:	10000215 	stw	zero,8(r2)
 1008bd8:	8005883a 	mov	r2,r16
 1008bdc:	dfc00117 	ldw	ra,4(sp)
 1008be0:	dc000017 	ldw	r16,0(sp)
 1008be4:	dec00204 	addi	sp,sp,8
 1008be8:	f800283a 	ret
 1008bec:	80000015 	stw	zero,0(r16)
 1008bf0:	80000115 	stw	zero,4(r16)
 1008bf4:	008006c4 	movi	r2,27
 1008bf8:	11800d2e 	bgeu	r2,r6,1008c30 <_calloc_r+0xa4>
 1008bfc:	80000215 	stw	zero,8(r16)
 1008c00:	80000315 	stw	zero,12(r16)
 1008c04:	30c00c26 	beq	r6,r3,1008c38 <_calloc_r+0xac>
 1008c08:	80800404 	addi	r2,r16,16
 1008c0c:	003fef06 	br	1008bcc <_calloc_r+0x40>
 1008c10:	8009883a 	mov	r4,r16
 1008c14:	000b883a 	mov	r5,zero
 1008c18:	1005d440 	call	1005d44 <memset>
 1008c1c:	8005883a 	mov	r2,r16
 1008c20:	dfc00117 	ldw	ra,4(sp)
 1008c24:	dc000017 	ldw	r16,0(sp)
 1008c28:	dec00204 	addi	sp,sp,8
 1008c2c:	f800283a 	ret
 1008c30:	80800204 	addi	r2,r16,8
 1008c34:	003fe506 	br	1008bcc <_calloc_r+0x40>
 1008c38:	80000415 	stw	zero,16(r16)
 1008c3c:	80800604 	addi	r2,r16,24
 1008c40:	80000515 	stw	zero,20(r16)
 1008c44:	003fe106 	br	1008bcc <_calloc_r+0x40>
 1008c48:	0005883a 	mov	r2,zero
 1008c4c:	003fe306 	br	1008bdc <_calloc_r+0x50>

01008c50 <_fclose_r>:
 1008c50:	28003926 	beq	r5,zero,1008d38 <_fclose_r+0xe8>
 1008c54:	defffc04 	addi	sp,sp,-16
 1008c58:	dc400115 	stw	r17,4(sp)
 1008c5c:	dc000015 	stw	r16,0(sp)
 1008c60:	dfc00315 	stw	ra,12(sp)
 1008c64:	dc800215 	stw	r18,8(sp)
 1008c68:	2023883a 	mov	r17,r4
 1008c6c:	2821883a 	mov	r16,r5
 1008c70:	20000226 	beq	r4,zero,1008c7c <_fclose_r+0x2c>
 1008c74:	20800e17 	ldw	r2,56(r4)
 1008c78:	10002726 	beq	r2,zero,1008d18 <_fclose_r+0xc8>
 1008c7c:	8080030f 	ldh	r2,12(r16)
 1008c80:	1000071e 	bne	r2,zero,1008ca0 <_fclose_r+0x50>
 1008c84:	0005883a 	mov	r2,zero
 1008c88:	dfc00317 	ldw	ra,12(sp)
 1008c8c:	dc800217 	ldw	r18,8(sp)
 1008c90:	dc400117 	ldw	r17,4(sp)
 1008c94:	dc000017 	ldw	r16,0(sp)
 1008c98:	dec00404 	addi	sp,sp,16
 1008c9c:	f800283a 	ret
 1008ca0:	8809883a 	mov	r4,r17
 1008ca4:	800b883a 	mov	r5,r16
 1008ca8:	1003ef80 	call	1003ef8 <__sflush_r>
 1008cac:	1025883a 	mov	r18,r2
 1008cb0:	80800b17 	ldw	r2,44(r16)
 1008cb4:	10000426 	beq	r2,zero,1008cc8 <_fclose_r+0x78>
 1008cb8:	81400717 	ldw	r5,28(r16)
 1008cbc:	8809883a 	mov	r4,r17
 1008cc0:	103ee83a 	callr	r2
 1008cc4:	10001616 	blt	r2,zero,1008d20 <_fclose_r+0xd0>
 1008cc8:	8080030b 	ldhu	r2,12(r16)
 1008ccc:	1080200c 	andi	r2,r2,128
 1008cd0:	1000151e 	bne	r2,zero,1008d28 <_fclose_r+0xd8>
 1008cd4:	81400c17 	ldw	r5,48(r16)
 1008cd8:	28000526 	beq	r5,zero,1008cf0 <_fclose_r+0xa0>
 1008cdc:	80801004 	addi	r2,r16,64
 1008ce0:	28800226 	beq	r5,r2,1008cec <_fclose_r+0x9c>
 1008ce4:	8809883a 	mov	r4,r17
 1008ce8:	10046500 	call	1004650 <_free_r>
 1008cec:	80000c15 	stw	zero,48(r16)
 1008cf0:	81401117 	ldw	r5,68(r16)
 1008cf4:	28000326 	beq	r5,zero,1008d04 <_fclose_r+0xb4>
 1008cf8:	8809883a 	mov	r4,r17
 1008cfc:	10046500 	call	1004650 <_free_r>
 1008d00:	80001115 	stw	zero,68(r16)
 1008d04:	10044ec0 	call	10044ec <__sfp_lock_acquire>
 1008d08:	8000030d 	sth	zero,12(r16)
 1008d0c:	10044f00 	call	10044f0 <__sfp_lock_release>
 1008d10:	9005883a 	mov	r2,r18
 1008d14:	003fdc06 	br	1008c88 <_fclose_r+0x38>
 1008d18:	10044dc0 	call	10044dc <__sinit>
 1008d1c:	003fd706 	br	1008c7c <_fclose_r+0x2c>
 1008d20:	04bfffc4 	movi	r18,-1
 1008d24:	003fe806 	br	1008cc8 <_fclose_r+0x78>
 1008d28:	81400417 	ldw	r5,16(r16)
 1008d2c:	8809883a 	mov	r4,r17
 1008d30:	10046500 	call	1004650 <_free_r>
 1008d34:	003fe706 	br	1008cd4 <_fclose_r+0x84>
 1008d38:	0005883a 	mov	r2,zero
 1008d3c:	f800283a 	ret

01008d40 <fclose>:
 1008d40:	00804074 	movhi	r2,257
 1008d44:	1082b904 	addi	r2,r2,2788
 1008d48:	200b883a 	mov	r5,r4
 1008d4c:	11000017 	ldw	r4,0(r2)
 1008d50:	1008c501 	jmpi	1008c50 <_fclose_r>

01008d54 <_fputwc_r>:
 1008d54:	3080030b 	ldhu	r2,12(r6)
 1008d58:	defff804 	addi	sp,sp,-32
 1008d5c:	dcc00415 	stw	r19,16(sp)
 1008d60:	dc800315 	stw	r18,12(sp)
 1008d64:	dc000115 	stw	r16,4(sp)
 1008d68:	dfc00715 	stw	ra,28(sp)
 1008d6c:	dd400615 	stw	r21,24(sp)
 1008d70:	dd000515 	stw	r20,20(sp)
 1008d74:	dc400215 	stw	r17,8(sp)
 1008d78:	10c8000c 	andi	r3,r2,8192
 1008d7c:	3021883a 	mov	r16,r6
 1008d80:	2027883a 	mov	r19,r4
 1008d84:	2825883a 	mov	r18,r5
 1008d88:	1800051e 	bne	r3,zero,1008da0 <_fputwc_r+0x4c>
 1008d8c:	30c01917 	ldw	r3,100(r6)
 1008d90:	10880014 	ori	r2,r2,8192
 1008d94:	3080030d 	sth	r2,12(r6)
 1008d98:	18880014 	ori	r2,r3,8192
 1008d9c:	30801915 	stw	r2,100(r6)
 1008da0:	10050100 	call	1005010 <__locale_mb_cur_max>
 1008da4:	00c00044 	movi	r3,1
 1008da8:	10c03e26 	beq	r2,r3,1008ea4 <_fputwc_r+0x150>
 1008dac:	9809883a 	mov	r4,r19
 1008db0:	d80b883a 	mov	r5,sp
 1008db4:	900d883a 	mov	r6,r18
 1008db8:	81c01704 	addi	r7,r16,92
 1008dbc:	10091ec0 	call	10091ec <_wcrtomb_r>
 1008dc0:	1029883a 	mov	r20,r2
 1008dc4:	00bfffc4 	movi	r2,-1
 1008dc8:	a0802026 	beq	r20,r2,1008e4c <_fputwc_r+0xf8>
 1008dcc:	d9400003 	ldbu	r5,0(sp)
 1008dd0:	a0001c26 	beq	r20,zero,1008e44 <_fputwc_r+0xf0>
 1008dd4:	0023883a 	mov	r17,zero
 1008dd8:	05400284 	movi	r21,10
 1008ddc:	00000906 	br	1008e04 <_fputwc_r+0xb0>
 1008de0:	80800017 	ldw	r2,0(r16)
 1008de4:	11400005 	stb	r5,0(r2)
 1008de8:	80c00017 	ldw	r3,0(r16)
 1008dec:	18c00044 	addi	r3,r3,1
 1008df0:	80c00015 	stw	r3,0(r16)
 1008df4:	8c400044 	addi	r17,r17,1
 1008df8:	dc45883a 	add	r2,sp,r17
 1008dfc:	8d00112e 	bgeu	r17,r20,1008e44 <_fputwc_r+0xf0>
 1008e00:	11400003 	ldbu	r5,0(r2)
 1008e04:	80c00217 	ldw	r3,8(r16)
 1008e08:	18ffffc4 	addi	r3,r3,-1
 1008e0c:	80c00215 	stw	r3,8(r16)
 1008e10:	183ff30e 	bge	r3,zero,1008de0 <_fputwc_r+0x8c>
 1008e14:	80800617 	ldw	r2,24(r16)
 1008e18:	18801916 	blt	r3,r2,1008e80 <_fputwc_r+0x12c>
 1008e1c:	80800017 	ldw	r2,0(r16)
 1008e20:	11400005 	stb	r5,0(r2)
 1008e24:	80800017 	ldw	r2,0(r16)
 1008e28:	10c00003 	ldbu	r3,0(r2)
 1008e2c:	10800044 	addi	r2,r2,1
 1008e30:	1d402326 	beq	r3,r21,1008ec0 <_fputwc_r+0x16c>
 1008e34:	80800015 	stw	r2,0(r16)
 1008e38:	8c400044 	addi	r17,r17,1
 1008e3c:	dc45883a 	add	r2,sp,r17
 1008e40:	8d3fef36 	bltu	r17,r20,1008e00 <_fputwc_r+0xac>
 1008e44:	9005883a 	mov	r2,r18
 1008e48:	00000406 	br	1008e5c <_fputwc_r+0x108>
 1008e4c:	80c0030b 	ldhu	r3,12(r16)
 1008e50:	a005883a 	mov	r2,r20
 1008e54:	18c01014 	ori	r3,r3,64
 1008e58:	80c0030d 	sth	r3,12(r16)
 1008e5c:	dfc00717 	ldw	ra,28(sp)
 1008e60:	dd400617 	ldw	r21,24(sp)
 1008e64:	dd000517 	ldw	r20,20(sp)
 1008e68:	dcc00417 	ldw	r19,16(sp)
 1008e6c:	dc800317 	ldw	r18,12(sp)
 1008e70:	dc400217 	ldw	r17,8(sp)
 1008e74:	dc000117 	ldw	r16,4(sp)
 1008e78:	dec00804 	addi	sp,sp,32
 1008e7c:	f800283a 	ret
 1008e80:	9809883a 	mov	r4,r19
 1008e84:	29403fcc 	andi	r5,r5,255
 1008e88:	800d883a 	mov	r6,r16
 1008e8c:	10090980 	call	1009098 <__swbuf_r>
 1008e90:	10bfffe0 	cmpeqi	r2,r2,-1
 1008e94:	10803fcc 	andi	r2,r2,255
 1008e98:	103fd626 	beq	r2,zero,1008df4 <_fputwc_r+0xa0>
 1008e9c:	00bfffc4 	movi	r2,-1
 1008ea0:	003fee06 	br	1008e5c <_fputwc_r+0x108>
 1008ea4:	90ffffc4 	addi	r3,r18,-1
 1008ea8:	01003f84 	movi	r4,254
 1008eac:	20ffbf36 	bltu	r4,r3,1008dac <_fputwc_r+0x58>
 1008eb0:	900b883a 	mov	r5,r18
 1008eb4:	dc800005 	stb	r18,0(sp)
 1008eb8:	1029883a 	mov	r20,r2
 1008ebc:	003fc506 	br	1008dd4 <_fputwc_r+0x80>
 1008ec0:	9809883a 	mov	r4,r19
 1008ec4:	a80b883a 	mov	r5,r21
 1008ec8:	800d883a 	mov	r6,r16
 1008ecc:	10090980 	call	1009098 <__swbuf_r>
 1008ed0:	10bfffe0 	cmpeqi	r2,r2,-1
 1008ed4:	003fef06 	br	1008e94 <_fputwc_r+0x140>

01008ed8 <fputwc>:
 1008ed8:	00804074 	movhi	r2,257
 1008edc:	defffc04 	addi	sp,sp,-16
 1008ee0:	1082b904 	addi	r2,r2,2788
 1008ee4:	dc000115 	stw	r16,4(sp)
 1008ee8:	14000017 	ldw	r16,0(r2)
 1008eec:	dc400215 	stw	r17,8(sp)
 1008ef0:	dfc00315 	stw	ra,12(sp)
 1008ef4:	2023883a 	mov	r17,r4
 1008ef8:	280d883a 	mov	r6,r5
 1008efc:	80000626 	beq	r16,zero,1008f18 <fputwc+0x40>
 1008f00:	80800e17 	ldw	r2,56(r16)
 1008f04:	1000041e 	bne	r2,zero,1008f18 <fputwc+0x40>
 1008f08:	8009883a 	mov	r4,r16
 1008f0c:	d9400015 	stw	r5,0(sp)
 1008f10:	10044dc0 	call	10044dc <__sinit>
 1008f14:	d9800017 	ldw	r6,0(sp)
 1008f18:	8009883a 	mov	r4,r16
 1008f1c:	880b883a 	mov	r5,r17
 1008f20:	dfc00317 	ldw	ra,12(sp)
 1008f24:	dc400217 	ldw	r17,8(sp)
 1008f28:	dc000117 	ldw	r16,4(sp)
 1008f2c:	dec00404 	addi	sp,sp,16
 1008f30:	1008d541 	jmpi	1008d54 <_fputwc_r>

01008f34 <_fstat_r>:
 1008f34:	defffd04 	addi	sp,sp,-12
 1008f38:	dc000015 	stw	r16,0(sp)
 1008f3c:	04004074 	movhi	r16,257
 1008f40:	dc400115 	stw	r17,4(sp)
 1008f44:	84098904 	addi	r16,r16,9764
 1008f48:	2023883a 	mov	r17,r4
 1008f4c:	2809883a 	mov	r4,r5
 1008f50:	300b883a 	mov	r5,r6
 1008f54:	dfc00215 	stw	ra,8(sp)
 1008f58:	80000015 	stw	zero,0(r16)
 1008f5c:	100c7ec0 	call	100c7ec <fstat>
 1008f60:	00ffffc4 	movi	r3,-1
 1008f64:	10c00526 	beq	r2,r3,1008f7c <_fstat_r+0x48>
 1008f68:	dfc00217 	ldw	ra,8(sp)
 1008f6c:	dc400117 	ldw	r17,4(sp)
 1008f70:	dc000017 	ldw	r16,0(sp)
 1008f74:	dec00304 	addi	sp,sp,12
 1008f78:	f800283a 	ret
 1008f7c:	80c00017 	ldw	r3,0(r16)
 1008f80:	183ff926 	beq	r3,zero,1008f68 <_fstat_r+0x34>
 1008f84:	88c00015 	stw	r3,0(r17)
 1008f88:	003ff706 	br	1008f68 <_fstat_r+0x34>

01008f8c <_isatty_r>:
 1008f8c:	defffd04 	addi	sp,sp,-12
 1008f90:	dc000015 	stw	r16,0(sp)
 1008f94:	04004074 	movhi	r16,257
 1008f98:	dc400115 	stw	r17,4(sp)
 1008f9c:	84098904 	addi	r16,r16,9764
 1008fa0:	2023883a 	mov	r17,r4
 1008fa4:	2809883a 	mov	r4,r5
 1008fa8:	dfc00215 	stw	ra,8(sp)
 1008fac:	80000015 	stw	zero,0(r16)
 1008fb0:	100c8ec0 	call	100c8ec <isatty>
 1008fb4:	00ffffc4 	movi	r3,-1
 1008fb8:	10c00526 	beq	r2,r3,1008fd0 <_isatty_r+0x44>
 1008fbc:	dfc00217 	ldw	ra,8(sp)
 1008fc0:	dc400117 	ldw	r17,4(sp)
 1008fc4:	dc000017 	ldw	r16,0(sp)
 1008fc8:	dec00304 	addi	sp,sp,12
 1008fcc:	f800283a 	ret
 1008fd0:	80c00017 	ldw	r3,0(r16)
 1008fd4:	183ff926 	beq	r3,zero,1008fbc <_isatty_r+0x30>
 1008fd8:	88c00015 	stw	r3,0(r17)
 1008fdc:	003ff706 	br	1008fbc <_isatty_r+0x30>

01008fe0 <_lseek_r>:
 1008fe0:	defffd04 	addi	sp,sp,-12
 1008fe4:	dc000015 	stw	r16,0(sp)
 1008fe8:	04004074 	movhi	r16,257
 1008fec:	dc400115 	stw	r17,4(sp)
 1008ff0:	84098904 	addi	r16,r16,9764
 1008ff4:	2023883a 	mov	r17,r4
 1008ff8:	2809883a 	mov	r4,r5
 1008ffc:	300b883a 	mov	r5,r6
 1009000:	380d883a 	mov	r6,r7
 1009004:	dfc00215 	stw	ra,8(sp)
 1009008:	80000015 	stw	zero,0(r16)
 100900c:	100cac40 	call	100cac4 <lseek>
 1009010:	00ffffc4 	movi	r3,-1
 1009014:	10c00526 	beq	r2,r3,100902c <_lseek_r+0x4c>
 1009018:	dfc00217 	ldw	ra,8(sp)
 100901c:	dc400117 	ldw	r17,4(sp)
 1009020:	dc000017 	ldw	r16,0(sp)
 1009024:	dec00304 	addi	sp,sp,12
 1009028:	f800283a 	ret
 100902c:	80c00017 	ldw	r3,0(r16)
 1009030:	183ff926 	beq	r3,zero,1009018 <_lseek_r+0x38>
 1009034:	88c00015 	stw	r3,0(r17)
 1009038:	003ff706 	br	1009018 <_lseek_r+0x38>

0100903c <_read_r>:
 100903c:	defffd04 	addi	sp,sp,-12
 1009040:	dc000015 	stw	r16,0(sp)
 1009044:	04004074 	movhi	r16,257
 1009048:	dc400115 	stw	r17,4(sp)
 100904c:	84098904 	addi	r16,r16,9764
 1009050:	2023883a 	mov	r17,r4
 1009054:	2809883a 	mov	r4,r5
 1009058:	300b883a 	mov	r5,r6
 100905c:	380d883a 	mov	r6,r7
 1009060:	dfc00215 	stw	ra,8(sp)
 1009064:	80000015 	stw	zero,0(r16)
 1009068:	100cca00 	call	100cca0 <read>
 100906c:	00ffffc4 	movi	r3,-1
 1009070:	10c00526 	beq	r2,r3,1009088 <_read_r+0x4c>
 1009074:	dfc00217 	ldw	ra,8(sp)
 1009078:	dc400117 	ldw	r17,4(sp)
 100907c:	dc000017 	ldw	r16,0(sp)
 1009080:	dec00304 	addi	sp,sp,12
 1009084:	f800283a 	ret
 1009088:	80c00017 	ldw	r3,0(r16)
 100908c:	183ff926 	beq	r3,zero,1009074 <_read_r+0x38>
 1009090:	88c00015 	stw	r3,0(r17)
 1009094:	003ff706 	br	1009074 <_read_r+0x38>

01009098 <__swbuf_r>:
 1009098:	defffc04 	addi	sp,sp,-16
 100909c:	dc800215 	stw	r18,8(sp)
 10090a0:	dc400115 	stw	r17,4(sp)
 10090a4:	dc000015 	stw	r16,0(sp)
 10090a8:	dfc00315 	stw	ra,12(sp)
 10090ac:	2025883a 	mov	r18,r4
 10090b0:	2823883a 	mov	r17,r5
 10090b4:	3021883a 	mov	r16,r6
 10090b8:	20000226 	beq	r4,zero,10090c4 <__swbuf_r+0x2c>
 10090bc:	20800e17 	ldw	r2,56(r4)
 10090c0:	10004126 	beq	r2,zero,10091c8 <__swbuf_r+0x130>
 10090c4:	80c00617 	ldw	r3,24(r16)
 10090c8:	8180030b 	ldhu	r6,12(r16)
 10090cc:	80c00215 	stw	r3,8(r16)
 10090d0:	30c0020c 	andi	r3,r6,8
 10090d4:	18003526 	beq	r3,zero,10091ac <__swbuf_r+0x114>
 10090d8:	80c00417 	ldw	r3,16(r16)
 10090dc:	18003326 	beq	r3,zero,10091ac <__swbuf_r+0x114>
 10090e0:	3088000c 	andi	r2,r6,8192
 10090e4:	8c403fcc 	andi	r17,r17,255
 10090e8:	10001726 	beq	r2,zero,1009148 <__swbuf_r+0xb0>
 10090ec:	80800017 	ldw	r2,0(r16)
 10090f0:	81000517 	ldw	r4,20(r16)
 10090f4:	10c7c83a 	sub	r3,r2,r3
 10090f8:	19001d0e 	bge	r3,r4,1009170 <__swbuf_r+0xd8>
 10090fc:	18c00044 	addi	r3,r3,1
 1009100:	81400217 	ldw	r5,8(r16)
 1009104:	11000044 	addi	r4,r2,1
 1009108:	81000015 	stw	r4,0(r16)
 100910c:	297fffc4 	addi	r5,r5,-1
 1009110:	81400215 	stw	r5,8(r16)
 1009114:	14400005 	stb	r17,0(r2)
 1009118:	80800517 	ldw	r2,20(r16)
 100911c:	10c01d26 	beq	r2,r3,1009194 <__swbuf_r+0xfc>
 1009120:	8080030b 	ldhu	r2,12(r16)
 1009124:	1080004c 	andi	r2,r2,1
 1009128:	1000181e 	bne	r2,zero,100918c <__swbuf_r+0xf4>
 100912c:	8805883a 	mov	r2,r17
 1009130:	dfc00317 	ldw	ra,12(sp)
 1009134:	dc800217 	ldw	r18,8(sp)
 1009138:	dc400117 	ldw	r17,4(sp)
 100913c:	dc000017 	ldw	r16,0(sp)
 1009140:	dec00404 	addi	sp,sp,16
 1009144:	f800283a 	ret
 1009148:	81001917 	ldw	r4,100(r16)
 100914c:	00b7ffc4 	movi	r2,-8193
 1009150:	31880014 	ori	r6,r6,8192
 1009154:	2084703a 	and	r2,r4,r2
 1009158:	80801915 	stw	r2,100(r16)
 100915c:	80800017 	ldw	r2,0(r16)
 1009160:	81000517 	ldw	r4,20(r16)
 1009164:	8180030d 	sth	r6,12(r16)
 1009168:	10c7c83a 	sub	r3,r2,r3
 100916c:	193fe316 	blt	r3,r4,10090fc <__swbuf_r+0x64>
 1009170:	9009883a 	mov	r4,r18
 1009174:	800b883a 	mov	r5,r16
 1009178:	10041000 	call	1004100 <_fflush_r>
 100917c:	1000091e 	bne	r2,zero,10091a4 <__swbuf_r+0x10c>
 1009180:	80800017 	ldw	r2,0(r16)
 1009184:	00c00044 	movi	r3,1
 1009188:	003fdd06 	br	1009100 <__swbuf_r+0x68>
 100918c:	00800284 	movi	r2,10
 1009190:	88bfe61e 	bne	r17,r2,100912c <__swbuf_r+0x94>
 1009194:	9009883a 	mov	r4,r18
 1009198:	800b883a 	mov	r5,r16
 100919c:	10041000 	call	1004100 <_fflush_r>
 10091a0:	103fe226 	beq	r2,zero,100912c <__swbuf_r+0x94>
 10091a4:	00bfffc4 	movi	r2,-1
 10091a8:	003fe106 	br	1009130 <__swbuf_r+0x98>
 10091ac:	9009883a 	mov	r4,r18
 10091b0:	800b883a 	mov	r5,r16
 10091b4:	100247c0 	call	100247c <__swsetup_r>
 10091b8:	103ffa1e 	bne	r2,zero,10091a4 <__swbuf_r+0x10c>
 10091bc:	8180030b 	ldhu	r6,12(r16)
 10091c0:	80c00417 	ldw	r3,16(r16)
 10091c4:	003fc606 	br	10090e0 <__swbuf_r+0x48>
 10091c8:	10044dc0 	call	10044dc <__sinit>
 10091cc:	003fbd06 	br	10090c4 <__swbuf_r+0x2c>

010091d0 <__swbuf>:
 10091d0:	00c04074 	movhi	r3,257
 10091d4:	18c2b904 	addi	r3,r3,2788
 10091d8:	2005883a 	mov	r2,r4
 10091dc:	19000017 	ldw	r4,0(r3)
 10091e0:	280d883a 	mov	r6,r5
 10091e4:	100b883a 	mov	r5,r2
 10091e8:	10090981 	jmpi	1009098 <__swbuf_r>

010091ec <_wcrtomb_r>:
 10091ec:	defff604 	addi	sp,sp,-40
 10091f0:	00804074 	movhi	r2,257
 10091f4:	dc800815 	stw	r18,32(sp)
 10091f8:	dc400715 	stw	r17,28(sp)
 10091fc:	dc000615 	stw	r16,24(sp)
 1009200:	1082bd04 	addi	r2,r2,2804
 1009204:	dfc00915 	stw	ra,36(sp)
 1009208:	2021883a 	mov	r16,r4
 100920c:	3823883a 	mov	r17,r7
 1009210:	14800017 	ldw	r18,0(r2)
 1009214:	28001426 	beq	r5,zero,1009268 <_wcrtomb_r+0x7c>
 1009218:	d9400415 	stw	r5,16(sp)
 100921c:	d9800515 	stw	r6,20(sp)
 1009220:	10050040 	call	1005004 <__locale_charset>
 1009224:	d9400417 	ldw	r5,16(sp)
 1009228:	d9800517 	ldw	r6,20(sp)
 100922c:	8009883a 	mov	r4,r16
 1009230:	dc400015 	stw	r17,0(sp)
 1009234:	100f883a 	mov	r7,r2
 1009238:	903ee83a 	callr	r18
 100923c:	00ffffc4 	movi	r3,-1
 1009240:	10c0031e 	bne	r2,r3,1009250 <_wcrtomb_r+0x64>
 1009244:	88000015 	stw	zero,0(r17)
 1009248:	00c02284 	movi	r3,138
 100924c:	80c00015 	stw	r3,0(r16)
 1009250:	dfc00917 	ldw	ra,36(sp)
 1009254:	dc800817 	ldw	r18,32(sp)
 1009258:	dc400717 	ldw	r17,28(sp)
 100925c:	dc000617 	ldw	r16,24(sp)
 1009260:	dec00a04 	addi	sp,sp,40
 1009264:	f800283a 	ret
 1009268:	10050040 	call	1005004 <__locale_charset>
 100926c:	8009883a 	mov	r4,r16
 1009270:	dc400015 	stw	r17,0(sp)
 1009274:	d9400104 	addi	r5,sp,4
 1009278:	000d883a 	mov	r6,zero
 100927c:	100f883a 	mov	r7,r2
 1009280:	903ee83a 	callr	r18
 1009284:	003fed06 	br	100923c <_wcrtomb_r+0x50>

01009288 <wcrtomb>:
 1009288:	defff604 	addi	sp,sp,-40
 100928c:	00804074 	movhi	r2,257
 1009290:	dc800615 	stw	r18,24(sp)
 1009294:	dc400515 	stw	r17,20(sp)
 1009298:	dc000415 	stw	r16,16(sp)
 100929c:	1082b904 	addi	r2,r2,2788
 10092a0:	dfc00915 	stw	ra,36(sp)
 10092a4:	dd000815 	stw	r20,32(sp)
 10092a8:	dcc00715 	stw	r19,28(sp)
 10092ac:	2021883a 	mov	r16,r4
 10092b0:	3025883a 	mov	r18,r6
 10092b4:	14400017 	ldw	r17,0(r2)
 10092b8:	20001826 	beq	r4,zero,100931c <wcrtomb+0x94>
 10092bc:	00804074 	movhi	r2,257
 10092c0:	1082bd04 	addi	r2,r2,2804
 10092c4:	15000017 	ldw	r20,0(r2)
 10092c8:	2827883a 	mov	r19,r5
 10092cc:	10050040 	call	1005004 <__locale_charset>
 10092d0:	8809883a 	mov	r4,r17
 10092d4:	dc800015 	stw	r18,0(sp)
 10092d8:	800b883a 	mov	r5,r16
 10092dc:	980d883a 	mov	r6,r19
 10092e0:	100f883a 	mov	r7,r2
 10092e4:	a03ee83a 	callr	r20
 10092e8:	00ffffc4 	movi	r3,-1
 10092ec:	10c0031e 	bne	r2,r3,10092fc <wcrtomb+0x74>
 10092f0:	90000015 	stw	zero,0(r18)
 10092f4:	00c02284 	movi	r3,138
 10092f8:	88c00015 	stw	r3,0(r17)
 10092fc:	dfc00917 	ldw	ra,36(sp)
 1009300:	dd000817 	ldw	r20,32(sp)
 1009304:	dcc00717 	ldw	r19,28(sp)
 1009308:	dc800617 	ldw	r18,24(sp)
 100930c:	dc400517 	ldw	r17,20(sp)
 1009310:	dc000417 	ldw	r16,16(sp)
 1009314:	dec00a04 	addi	sp,sp,40
 1009318:	f800283a 	ret
 100931c:	00804074 	movhi	r2,257
 1009320:	1082bd04 	addi	r2,r2,2804
 1009324:	14000017 	ldw	r16,0(r2)
 1009328:	10050040 	call	1005004 <__locale_charset>
 100932c:	8809883a 	mov	r4,r17
 1009330:	dc800015 	stw	r18,0(sp)
 1009334:	d9400104 	addi	r5,sp,4
 1009338:	000d883a 	mov	r6,zero
 100933c:	100f883a 	mov	r7,r2
 1009340:	803ee83a 	callr	r16
 1009344:	003fe806 	br	10092e8 <wcrtomb+0x60>

01009348 <__ascii_wctomb>:
 1009348:	28000526 	beq	r5,zero,1009360 <__ascii_wctomb+0x18>
 100934c:	00803fc4 	movi	r2,255
 1009350:	11800536 	bltu	r2,r6,1009368 <__ascii_wctomb+0x20>
 1009354:	29800005 	stb	r6,0(r5)
 1009358:	00800044 	movi	r2,1
 100935c:	f800283a 	ret
 1009360:	0005883a 	mov	r2,zero
 1009364:	f800283a 	ret
 1009368:	00802284 	movi	r2,138
 100936c:	20800015 	stw	r2,0(r4)
 1009370:	00bfffc4 	movi	r2,-1
 1009374:	f800283a 	ret

01009378 <_wctomb_r>:
 1009378:	00804074 	movhi	r2,257
 100937c:	defff904 	addi	sp,sp,-28
 1009380:	1082bd04 	addi	r2,r2,2804
 1009384:	dfc00615 	stw	ra,24(sp)
 1009388:	dc400515 	stw	r17,20(sp)
 100938c:	dc000415 	stw	r16,16(sp)
 1009390:	3823883a 	mov	r17,r7
 1009394:	14000017 	ldw	r16,0(r2)
 1009398:	d9000115 	stw	r4,4(sp)
 100939c:	d9400215 	stw	r5,8(sp)
 10093a0:	d9800315 	stw	r6,12(sp)
 10093a4:	10050040 	call	1005004 <__locale_charset>
 10093a8:	d9000117 	ldw	r4,4(sp)
 10093ac:	d9400217 	ldw	r5,8(sp)
 10093b0:	d9800317 	ldw	r6,12(sp)
 10093b4:	dc400015 	stw	r17,0(sp)
 10093b8:	100f883a 	mov	r7,r2
 10093bc:	803ee83a 	callr	r16
 10093c0:	dfc00617 	ldw	ra,24(sp)
 10093c4:	dc400517 	ldw	r17,20(sp)
 10093c8:	dc000417 	ldw	r16,16(sp)
 10093cc:	dec00704 	addi	sp,sp,28
 10093d0:	f800283a 	ret

010093d4 <__udivdi3>:
 10093d4:	defff504 	addi	sp,sp,-44
 10093d8:	dcc00415 	stw	r19,16(sp)
 10093dc:	dc000115 	stw	r16,4(sp)
 10093e0:	dfc00a15 	stw	ra,40(sp)
 10093e4:	df000915 	stw	fp,36(sp)
 10093e8:	ddc00815 	stw	r23,32(sp)
 10093ec:	dd800715 	stw	r22,28(sp)
 10093f0:	dd400615 	stw	r21,24(sp)
 10093f4:	dd000515 	stw	r20,20(sp)
 10093f8:	dc800315 	stw	r18,12(sp)
 10093fc:	dc400215 	stw	r17,8(sp)
 1009400:	2027883a 	mov	r19,r4
 1009404:	2821883a 	mov	r16,r5
 1009408:	3800421e 	bne	r7,zero,1009514 <__udivdi3+0x140>
 100940c:	3025883a 	mov	r18,r6
 1009410:	2023883a 	mov	r17,r4
 1009414:	2980542e 	bgeu	r5,r6,1009568 <__udivdi3+0x194>
 1009418:	00bfffd4 	movui	r2,65535
 100941c:	282d883a 	mov	r22,r5
 1009420:	1180a836 	bltu	r2,r6,10096c4 <__udivdi3+0x2f0>
 1009424:	00803fc4 	movi	r2,255
 1009428:	1181422e 	bgeu	r2,r6,1009934 <__udivdi3+0x560>
 100942c:	00800204 	movi	r2,8
 1009430:	1007883a 	mov	r3,r2
 1009434:	3084d83a 	srl	r2,r6,r2
 1009438:	01004074 	movhi	r4,257
 100943c:	213bc204 	addi	r4,r4,-4344
 1009440:	2085883a 	add	r2,r4,r2
 1009444:	10800003 	ldbu	r2,0(r2)
 1009448:	10c7883a 	add	r3,r2,r3
 100944c:	00800804 	movi	r2,32
 1009450:	10c5c83a 	sub	r2,r2,r3
 1009454:	10000526 	beq	r2,zero,100946c <__udivdi3+0x98>
 1009458:	80a0983a 	sll	r16,r16,r2
 100945c:	98c6d83a 	srl	r3,r19,r3
 1009460:	30a4983a 	sll	r18,r6,r2
 1009464:	98a2983a 	sll	r17,r19,r2
 1009468:	80ecb03a 	or	r22,r16,r3
 100946c:	902ad43a 	srli	r21,r18,16
 1009470:	b009883a 	mov	r4,r22
 1009474:	953fffcc 	andi	r20,r18,65535
 1009478:	a80b883a 	mov	r5,r21
 100947c:	100a0480 	call	100a048 <__umodsi3>
 1009480:	b009883a 	mov	r4,r22
 1009484:	a80b883a 	mov	r5,r21
 1009488:	1027883a 	mov	r19,r2
 100948c:	100a0400 	call	100a040 <__udivsi3>
 1009490:	1021883a 	mov	r16,r2
 1009494:	8806d43a 	srli	r3,r17,16
 1009498:	9804943a 	slli	r2,r19,16
 100949c:	8527383a 	mul	r19,r16,r20
 10094a0:	10c4b03a 	or	r2,r2,r3
 10094a4:	14c0052e 	bgeu	r2,r19,10094bc <__udivdi3+0xe8>
 10094a8:	1485883a 	add	r2,r2,r18
 10094ac:	80ffffc4 	addi	r3,r16,-1
 10094b0:	14800136 	bltu	r2,r18,10094b8 <__udivdi3+0xe4>
 10094b4:	14c13436 	bltu	r2,r19,1009988 <__udivdi3+0x5b4>
 10094b8:	1821883a 	mov	r16,r3
 10094bc:	14e7c83a 	sub	r19,r2,r19
 10094c0:	9809883a 	mov	r4,r19
 10094c4:	a80b883a 	mov	r5,r21
 10094c8:	100a0480 	call	100a048 <__umodsi3>
 10094cc:	102d883a 	mov	r22,r2
 10094d0:	9809883a 	mov	r4,r19
 10094d4:	a80b883a 	mov	r5,r21
 10094d8:	100a0400 	call	100a040 <__udivsi3>
 10094dc:	b02c943a 	slli	r22,r22,16
 10094e0:	1529383a 	mul	r20,r2,r20
 10094e4:	8c7fffcc 	andi	r17,r17,65535
 10094e8:	b462b03a 	or	r17,r22,r17
 10094ec:	8d00052e 	bgeu	r17,r20,1009504 <__udivdi3+0x130>
 10094f0:	8ca3883a 	add	r17,r17,r18
 10094f4:	10ffffc4 	addi	r3,r2,-1
 10094f8:	8c80f636 	bltu	r17,r18,10098d4 <__udivdi3+0x500>
 10094fc:	8d00f52e 	bgeu	r17,r20,10098d4 <__udivdi3+0x500>
 1009500:	10bfff84 	addi	r2,r2,-2
 1009504:	8020943a 	slli	r16,r16,16
 1009508:	0007883a 	mov	r3,zero
 100950c:	1404b03a 	or	r2,r2,r16
 1009510:	00005b06 	br	1009680 <__udivdi3+0x2ac>
 1009514:	29c05836 	bltu	r5,r7,1009678 <__udivdi3+0x2a4>
 1009518:	00bfffd4 	movui	r2,65535
 100951c:	11c0642e 	bgeu	r2,r7,10096b0 <__udivdi3+0x2dc>
 1009520:	00804034 	movhi	r2,256
 1009524:	10bfffc4 	addi	r2,r2,-1
 1009528:	11c0f32e 	bgeu	r2,r7,10098f8 <__udivdi3+0x524>
 100952c:	00c00604 	movi	r3,24
 1009530:	180b883a 	mov	r5,r3
 1009534:	38c6d83a 	srl	r3,r7,r3
 1009538:	00804074 	movhi	r2,257
 100953c:	10bbc204 	addi	r2,r2,-4344
 1009540:	10c7883a 	add	r3,r2,r3
 1009544:	18c00003 	ldbu	r3,0(r3)
 1009548:	01000804 	movi	r4,32
 100954c:	1947883a 	add	r3,r3,r5
 1009550:	20e5c83a 	sub	r18,r4,r3
 1009554:	9000661e 	bne	r18,zero,10096f0 <__udivdi3+0x31c>
 1009558:	3c00f936 	bltu	r7,r16,1009940 <__udivdi3+0x56c>
 100955c:	9985403a 	cmpgeu	r2,r19,r6
 1009560:	0007883a 	mov	r3,zero
 1009564:	00004606 	br	1009680 <__udivdi3+0x2ac>
 1009568:	3000041e 	bne	r6,zero,100957c <__udivdi3+0x1a8>
 100956c:	01000044 	movi	r4,1
 1009570:	000b883a 	mov	r5,zero
 1009574:	100a0400 	call	100a040 <__udivsi3>
 1009578:	1025883a 	mov	r18,r2
 100957c:	00bfffd4 	movui	r2,65535
 1009580:	1480562e 	bgeu	r2,r18,10096dc <__udivdi3+0x308>
 1009584:	00804034 	movhi	r2,256
 1009588:	10bfffc4 	addi	r2,r2,-1
 100958c:	1480e32e 	bgeu	r2,r18,100991c <__udivdi3+0x548>
 1009590:	00800604 	movi	r2,24
 1009594:	1007883a 	mov	r3,r2
 1009598:	9084d83a 	srl	r2,r18,r2
 100959c:	01004074 	movhi	r4,257
 10095a0:	213bc204 	addi	r4,r4,-4344
 10095a4:	2085883a 	add	r2,r4,r2
 10095a8:	10800003 	ldbu	r2,0(r2)
 10095ac:	10c5883a 	add	r2,r2,r3
 10095b0:	00c00804 	movi	r3,32
 10095b4:	1887c83a 	sub	r3,r3,r2
 10095b8:	1800911e 	bne	r3,zero,1009800 <__udivdi3+0x42c>
 10095bc:	9028d43a 	srli	r20,r18,16
 10095c0:	84a1c83a 	sub	r16,r16,r18
 10095c4:	957fffcc 	andi	r21,r18,65535
 10095c8:	00c00044 	movi	r3,1
 10095cc:	8009883a 	mov	r4,r16
 10095d0:	a00b883a 	mov	r5,r20
 10095d4:	d8c00015 	stw	r3,0(sp)
 10095d8:	100a0480 	call	100a048 <__umodsi3>
 10095dc:	8009883a 	mov	r4,r16
 10095e0:	a00b883a 	mov	r5,r20
 10095e4:	1027883a 	mov	r19,r2
 10095e8:	100a0400 	call	100a040 <__udivsi3>
 10095ec:	1021883a 	mov	r16,r2
 10095f0:	880cd43a 	srli	r6,r17,16
 10095f4:	9804943a 	slli	r2,r19,16
 10095f8:	8567383a 	mul	r19,r16,r21
 10095fc:	d8c00017 	ldw	r3,0(sp)
 1009600:	1188b03a 	or	r4,r2,r6
 1009604:	24c0052e 	bgeu	r4,r19,100961c <__udivdi3+0x248>
 1009608:	2489883a 	add	r4,r4,r18
 100960c:	80bfffc4 	addi	r2,r16,-1
 1009610:	24800136 	bltu	r4,r18,1009618 <__udivdi3+0x244>
 1009614:	24c0d936 	bltu	r4,r19,100997c <__udivdi3+0x5a8>
 1009618:	1021883a 	mov	r16,r2
 100961c:	24e7c83a 	sub	r19,r4,r19
 1009620:	9809883a 	mov	r4,r19
 1009624:	a00b883a 	mov	r5,r20
 1009628:	d8c00015 	stw	r3,0(sp)
 100962c:	100a0480 	call	100a048 <__umodsi3>
 1009630:	102d883a 	mov	r22,r2
 1009634:	9809883a 	mov	r4,r19
 1009638:	a00b883a 	mov	r5,r20
 100963c:	100a0400 	call	100a040 <__udivsi3>
 1009640:	b02c943a 	slli	r22,r22,16
 1009644:	156b383a 	mul	r21,r2,r21
 1009648:	8c7fffcc 	andi	r17,r17,65535
 100964c:	b462b03a 	or	r17,r22,r17
 1009650:	d8c00017 	ldw	r3,0(sp)
 1009654:	8d40052e 	bgeu	r17,r21,100966c <__udivdi3+0x298>
 1009658:	8ca3883a 	add	r17,r17,r18
 100965c:	113fffc4 	addi	r4,r2,-1
 1009660:	8c809a36 	bltu	r17,r18,10098cc <__udivdi3+0x4f8>
 1009664:	8d40992e 	bgeu	r17,r21,10098cc <__udivdi3+0x4f8>
 1009668:	10bfff84 	addi	r2,r2,-2
 100966c:	8020943a 	slli	r16,r16,16
 1009670:	1404b03a 	or	r2,r2,r16
 1009674:	00000206 	br	1009680 <__udivdi3+0x2ac>
 1009678:	0007883a 	mov	r3,zero
 100967c:	0005883a 	mov	r2,zero
 1009680:	dfc00a17 	ldw	ra,40(sp)
 1009684:	df000917 	ldw	fp,36(sp)
 1009688:	ddc00817 	ldw	r23,32(sp)
 100968c:	dd800717 	ldw	r22,28(sp)
 1009690:	dd400617 	ldw	r21,24(sp)
 1009694:	dd000517 	ldw	r20,20(sp)
 1009698:	dcc00417 	ldw	r19,16(sp)
 100969c:	dc800317 	ldw	r18,12(sp)
 10096a0:	dc400217 	ldw	r17,8(sp)
 10096a4:	dc000117 	ldw	r16,4(sp)
 10096a8:	dec00b04 	addi	sp,sp,44
 10096ac:	f800283a 	ret
 10096b0:	00803fc4 	movi	r2,255
 10096b4:	11c0932e 	bgeu	r2,r7,1009904 <__udivdi3+0x530>
 10096b8:	00c00204 	movi	r3,8
 10096bc:	180b883a 	mov	r5,r3
 10096c0:	003f9c06 	br	1009534 <__udivdi3+0x160>
 10096c4:	00804034 	movhi	r2,256
 10096c8:	10bfffc4 	addi	r2,r2,-1
 10096cc:	1180902e 	bgeu	r2,r6,1009910 <__udivdi3+0x53c>
 10096d0:	00800604 	movi	r2,24
 10096d4:	1007883a 	mov	r3,r2
 10096d8:	003f5606 	br	1009434 <__udivdi3+0x60>
 10096dc:	00803fc4 	movi	r2,255
 10096e0:	1480912e 	bgeu	r2,r18,1009928 <__udivdi3+0x554>
 10096e4:	00800204 	movi	r2,8
 10096e8:	1007883a 	mov	r3,r2
 10096ec:	003faa06 	br	1009598 <__udivdi3+0x1c4>
 10096f0:	30eed83a 	srl	r23,r6,r3
 10096f4:	3c8e983a 	sll	r7,r7,r18
 10096f8:	80f8d83a 	srl	fp,r16,r3
 10096fc:	98c6d83a 	srl	r3,r19,r3
 1009700:	3deeb03a 	or	r23,r7,r23
 1009704:	b828d43a 	srli	r20,r23,16
 1009708:	84a0983a 	sll	r16,r16,r18
 100970c:	e009883a 	mov	r4,fp
 1009710:	a00b883a 	mov	r5,r20
 1009714:	80e2b03a 	or	r17,r16,r3
 1009718:	34aa983a 	sll	r21,r6,r18
 100971c:	100a0480 	call	100a048 <__umodsi3>
 1009720:	e009883a 	mov	r4,fp
 1009724:	a00b883a 	mov	r5,r20
 1009728:	102d883a 	mov	r22,r2
 100972c:	100a0400 	call	100a040 <__udivsi3>
 1009730:	1021883a 	mov	r16,r2
 1009734:	bf3fffcc 	andi	fp,r23,65535
 1009738:	b004943a 	slli	r2,r22,16
 100973c:	8808d43a 	srli	r4,r17,16
 1009740:	872d383a 	mul	r22,r16,fp
 1009744:	1104b03a 	or	r2,r2,r4
 1009748:	1580042e 	bgeu	r2,r22,100975c <__udivdi3+0x388>
 100974c:	15c5883a 	add	r2,r2,r23
 1009750:	80ffffc4 	addi	r3,r16,-1
 1009754:	15c0812e 	bgeu	r2,r23,100995c <__udivdi3+0x588>
 1009758:	1821883a 	mov	r16,r3
 100975c:	15adc83a 	sub	r22,r2,r22
 1009760:	b009883a 	mov	r4,r22
 1009764:	a00b883a 	mov	r5,r20
 1009768:	100a0480 	call	100a048 <__umodsi3>
 100976c:	a00b883a 	mov	r5,r20
 1009770:	b009883a 	mov	r4,r22
 1009774:	d8800015 	stw	r2,0(sp)
 1009778:	100a0400 	call	100a040 <__udivsi3>
 100977c:	d8c00017 	ldw	r3,0(sp)
 1009780:	170b383a 	mul	r5,r2,fp
 1009784:	8c7fffcc 	andi	r17,r17,65535
 1009788:	1806943a 	slli	r3,r3,16
 100978c:	1c46b03a 	or	r3,r3,r17
 1009790:	1940042e 	bgeu	r3,r5,10097a4 <__udivdi3+0x3d0>
 1009794:	1dc7883a 	add	r3,r3,r23
 1009798:	113fffc4 	addi	r4,r2,-1
 100979c:	1dc06b2e 	bgeu	r3,r23,100994c <__udivdi3+0x578>
 10097a0:	2005883a 	mov	r2,r4
 10097a4:	8020943a 	slli	r16,r16,16
 10097a8:	a9ffffcc 	andi	r7,r21,65535
 10097ac:	a82ad43a 	srli	r21,r21,16
 10097b0:	1404b03a 	or	r2,r2,r16
 10097b4:	113fffcc 	andi	r4,r2,65535
 10097b8:	100cd43a 	srli	r6,r2,16
 10097bc:	21d3383a 	mul	r9,r4,r7
 10097c0:	2549383a 	mul	r4,r4,r21
 10097c4:	31cf383a 	mul	r7,r6,r7
 10097c8:	4810d43a 	srli	r8,r9,16
 10097cc:	1947c83a 	sub	r3,r3,r5
 10097d0:	3909883a 	add	r4,r7,r4
 10097d4:	2209883a 	add	r4,r4,r8
 10097d8:	354d383a 	mul	r6,r6,r21
 10097dc:	21c0022e 	bgeu	r4,r7,10097e8 <__udivdi3+0x414>
 10097e0:	01400074 	movhi	r5,1
 10097e4:	314d883a 	add	r6,r6,r5
 10097e8:	202ad43a 	srli	r21,r4,16
 10097ec:	354d883a 	add	r6,r6,r21
 10097f0:	19803f36 	bltu	r3,r6,10098f0 <__udivdi3+0x51c>
 10097f4:	19803926 	beq	r3,r6,10098dc <__udivdi3+0x508>
 10097f8:	0007883a 	mov	r3,zero
 10097fc:	003fa006 	br	1009680 <__udivdi3+0x2ac>
 1009800:	90e4983a 	sll	r18,r18,r3
 1009804:	80aad83a 	srl	r21,r16,r2
 1009808:	80e0983a 	sll	r16,r16,r3
 100980c:	9028d43a 	srli	r20,r18,16
 1009810:	9884d83a 	srl	r2,r19,r2
 1009814:	a809883a 	mov	r4,r21
 1009818:	a00b883a 	mov	r5,r20
 100981c:	80acb03a 	or	r22,r16,r2
 1009820:	98e2983a 	sll	r17,r19,r3
 1009824:	100a0480 	call	100a048 <__umodsi3>
 1009828:	a809883a 	mov	r4,r21
 100982c:	a00b883a 	mov	r5,r20
 1009830:	1021883a 	mov	r16,r2
 1009834:	100a0400 	call	100a040 <__udivsi3>
 1009838:	957fffcc 	andi	r21,r18,65535
 100983c:	8020943a 	slli	r16,r16,16
 1009840:	b00ad43a 	srli	r5,r22,16
 1009844:	1567383a 	mul	r19,r2,r21
 1009848:	102f883a 	mov	r23,r2
 100984c:	8148b03a 	or	r4,r16,r5
 1009850:	24c0062e 	bgeu	r4,r19,100986c <__udivdi3+0x498>
 1009854:	2489883a 	add	r4,r4,r18
 1009858:	10bfffc4 	addi	r2,r2,-1
 100985c:	24804536 	bltu	r4,r18,1009974 <__udivdi3+0x5a0>
 1009860:	24c0442e 	bgeu	r4,r19,1009974 <__udivdi3+0x5a0>
 1009864:	bdffff84 	addi	r23,r23,-2
 1009868:	2489883a 	add	r4,r4,r18
 100986c:	24e7c83a 	sub	r19,r4,r19
 1009870:	9809883a 	mov	r4,r19
 1009874:	a00b883a 	mov	r5,r20
 1009878:	100a0480 	call	100a048 <__umodsi3>
 100987c:	1021883a 	mov	r16,r2
 1009880:	9809883a 	mov	r4,r19
 1009884:	a00b883a 	mov	r5,r20
 1009888:	100a0400 	call	100a040 <__udivsi3>
 100988c:	8020943a 	slli	r16,r16,16
 1009890:	1007883a 	mov	r3,r2
 1009894:	1545383a 	mul	r2,r2,r21
 1009898:	b13fffcc 	andi	r4,r22,65535
 100989c:	8108b03a 	or	r4,r16,r4
 10098a0:	2080062e 	bgeu	r4,r2,10098bc <__udivdi3+0x4e8>
 10098a4:	2489883a 	add	r4,r4,r18
 10098a8:	197fffc4 	addi	r5,r3,-1
 10098ac:	24802f36 	bltu	r4,r18,100996c <__udivdi3+0x598>
 10098b0:	20802e2e 	bgeu	r4,r2,100996c <__udivdi3+0x598>
 10098b4:	18ffff84 	addi	r3,r3,-2
 10098b8:	2489883a 	add	r4,r4,r18
 10098bc:	b82e943a 	slli	r23,r23,16
 10098c0:	20a1c83a 	sub	r16,r4,r2
 10098c4:	1dc6b03a 	or	r3,r3,r23
 10098c8:	003f4006 	br	10095cc <__udivdi3+0x1f8>
 10098cc:	2005883a 	mov	r2,r4
 10098d0:	003f6606 	br	100966c <__udivdi3+0x298>
 10098d4:	1805883a 	mov	r2,r3
 10098d8:	003f0a06 	br	1009504 <__udivdi3+0x130>
 10098dc:	2006943a 	slli	r3,r4,16
 10098e0:	9c88983a 	sll	r4,r19,r18
 10098e4:	4a7fffcc 	andi	r9,r9,65535
 10098e8:	1a47883a 	add	r3,r3,r9
 10098ec:	20ffc22e 	bgeu	r4,r3,10097f8 <__udivdi3+0x424>
 10098f0:	10bfffc4 	addi	r2,r2,-1
 10098f4:	003fc006 	br	10097f8 <__udivdi3+0x424>
 10098f8:	00c00404 	movi	r3,16
 10098fc:	180b883a 	mov	r5,r3
 1009900:	003f0c06 	br	1009534 <__udivdi3+0x160>
 1009904:	0007883a 	mov	r3,zero
 1009908:	000b883a 	mov	r5,zero
 100990c:	003f0906 	br	1009534 <__udivdi3+0x160>
 1009910:	00800404 	movi	r2,16
 1009914:	1007883a 	mov	r3,r2
 1009918:	003ec606 	br	1009434 <__udivdi3+0x60>
 100991c:	00800404 	movi	r2,16
 1009920:	1007883a 	mov	r3,r2
 1009924:	003f1c06 	br	1009598 <__udivdi3+0x1c4>
 1009928:	0005883a 	mov	r2,zero
 100992c:	0007883a 	mov	r3,zero
 1009930:	003f1906 	br	1009598 <__udivdi3+0x1c4>
 1009934:	0005883a 	mov	r2,zero
 1009938:	0007883a 	mov	r3,zero
 100993c:	003ebd06 	br	1009434 <__udivdi3+0x60>
 1009940:	0007883a 	mov	r3,zero
 1009944:	00800044 	movi	r2,1
 1009948:	003f4d06 	br	1009680 <__udivdi3+0x2ac>
 100994c:	197f942e 	bgeu	r3,r5,10097a0 <__udivdi3+0x3cc>
 1009950:	10bfff84 	addi	r2,r2,-2
 1009954:	1dc7883a 	add	r3,r3,r23
 1009958:	003f9206 	br	10097a4 <__udivdi3+0x3d0>
 100995c:	15bf7e2e 	bgeu	r2,r22,1009758 <__udivdi3+0x384>
 1009960:	843fff84 	addi	r16,r16,-2
 1009964:	15c5883a 	add	r2,r2,r23
 1009968:	003f7c06 	br	100975c <__udivdi3+0x388>
 100996c:	2807883a 	mov	r3,r5
 1009970:	003fd206 	br	10098bc <__udivdi3+0x4e8>
 1009974:	102f883a 	mov	r23,r2
 1009978:	003fbc06 	br	100986c <__udivdi3+0x498>
 100997c:	843fff84 	addi	r16,r16,-2
 1009980:	2489883a 	add	r4,r4,r18
 1009984:	003f2506 	br	100961c <__udivdi3+0x248>
 1009988:	843fff84 	addi	r16,r16,-2
 100998c:	1485883a 	add	r2,r2,r18
 1009990:	003eca06 	br	10094bc <__udivdi3+0xe8>

01009994 <__umoddi3>:
 1009994:	defff404 	addi	sp,sp,-48
 1009998:	ddc00915 	stw	r23,36(sp)
 100999c:	dc400315 	stw	r17,12(sp)
 10099a0:	dc000215 	stw	r16,8(sp)
 10099a4:	dfc00b15 	stw	ra,44(sp)
 10099a8:	df000a15 	stw	fp,40(sp)
 10099ac:	dd800815 	stw	r22,32(sp)
 10099b0:	dd400715 	stw	r21,28(sp)
 10099b4:	dd000615 	stw	r20,24(sp)
 10099b8:	dcc00515 	stw	r19,20(sp)
 10099bc:	dc800415 	stw	r18,16(sp)
 10099c0:	2021883a 	mov	r16,r4
 10099c4:	2823883a 	mov	r17,r5
 10099c8:	282f883a 	mov	r23,r5
 10099cc:	3800381e 	bne	r7,zero,1009ab0 <__umoddi3+0x11c>
 10099d0:	3027883a 	mov	r19,r6
 10099d4:	2029883a 	mov	r20,r4
 10099d8:	29804e2e 	bgeu	r5,r6,1009b14 <__umoddi3+0x180>
 10099dc:	00bfffd4 	movui	r2,65535
 10099e0:	11809c36 	bltu	r2,r6,1009c54 <__umoddi3+0x2c0>
 10099e4:	00803fc4 	movi	r2,255
 10099e8:	11813b2e 	bgeu	r2,r6,1009ed8 <__umoddi3+0x544>
 10099ec:	01400204 	movi	r5,8
 10099f0:	2805883a 	mov	r2,r5
 10099f4:	314ad83a 	srl	r5,r6,r5
 10099f8:	00c04074 	movhi	r3,257
 10099fc:	18fbc204 	addi	r3,r3,-4344
 1009a00:	194b883a 	add	r5,r3,r5
 1009a04:	29000003 	ldbu	r4,0(r5)
 1009a08:	2089883a 	add	r4,r4,r2
 1009a0c:	00800804 	movi	r2,32
 1009a10:	1105c83a 	sub	r2,r2,r4
 1009a14:	1000ec26 	beq	r2,zero,1009dc8 <__umoddi3+0x434>
 1009a18:	88a2983a 	sll	r17,r17,r2
 1009a1c:	8108d83a 	srl	r4,r16,r4
 1009a20:	30a6983a 	sll	r19,r6,r2
 1009a24:	80a8983a 	sll	r20,r16,r2
 1009a28:	1025883a 	mov	r18,r2
 1009a2c:	892eb03a 	or	r23,r17,r4
 1009a30:	982cd43a 	srli	r22,r19,16
 1009a34:	b809883a 	mov	r4,r23
 1009a38:	9d7fffcc 	andi	r21,r19,65535
 1009a3c:	b00b883a 	mov	r5,r22
 1009a40:	100a0480 	call	100a048 <__umodsi3>
 1009a44:	b809883a 	mov	r4,r23
 1009a48:	b00b883a 	mov	r5,r22
 1009a4c:	1021883a 	mov	r16,r2
 1009a50:	100a0400 	call	100a040 <__udivsi3>
 1009a54:	8020943a 	slli	r16,r16,16
 1009a58:	a00cd43a 	srli	r6,r20,16
 1009a5c:	1545383a 	mul	r2,r2,r21
 1009a60:	8188b03a 	or	r4,r16,r6
 1009a64:	2080042e 	bgeu	r4,r2,1009a78 <__umoddi3+0xe4>
 1009a68:	24c9883a 	add	r4,r4,r19
 1009a6c:	24c00236 	bltu	r4,r19,1009a78 <__umoddi3+0xe4>
 1009a70:	2080012e 	bgeu	r4,r2,1009a78 <__umoddi3+0xe4>
 1009a74:	24c9883a 	add	r4,r4,r19
 1009a78:	20a3c83a 	sub	r17,r4,r2
 1009a7c:	8809883a 	mov	r4,r17
 1009a80:	b00b883a 	mov	r5,r22
 1009a84:	100a0480 	call	100a048 <__umodsi3>
 1009a88:	8809883a 	mov	r4,r17
 1009a8c:	b00b883a 	mov	r5,r22
 1009a90:	1021883a 	mov	r16,r2
 1009a94:	100a0400 	call	100a040 <__udivsi3>
 1009a98:	8006943a 	slli	r3,r16,16
 1009a9c:	1545383a 	mul	r2,r2,r21
 1009aa0:	a13fffcc 	andi	r4,r20,65535
 1009aa4:	1906b03a 	or	r3,r3,r4
 1009aa8:	1880532e 	bgeu	r3,r2,1009bf8 <__umoddi3+0x264>
 1009aac:	00004e06 	br	1009be8 <__umoddi3+0x254>
 1009ab0:	29c05536 	bltu	r5,r7,1009c08 <__umoddi3+0x274>
 1009ab4:	00bfffd4 	movui	r2,65535
 1009ab8:	11c0612e 	bgeu	r2,r7,1009c40 <__umoddi3+0x2ac>
 1009abc:	00804034 	movhi	r2,256
 1009ac0:	10bfffc4 	addi	r2,r2,-1
 1009ac4:	11c0f82e 	bgeu	r2,r7,1009ea8 <__umoddi3+0x514>
 1009ac8:	01400604 	movi	r5,24
 1009acc:	282b883a 	mov	r21,r5
 1009ad0:	394ad83a 	srl	r5,r7,r5
 1009ad4:	00c04074 	movhi	r3,257
 1009ad8:	18fbc204 	addi	r3,r3,-4344
 1009adc:	194b883a 	add	r5,r3,r5
 1009ae0:	28800003 	ldbu	r2,0(r5)
 1009ae4:	00c00804 	movi	r3,32
 1009ae8:	156b883a 	add	r21,r2,r21
 1009aec:	1d69c83a 	sub	r20,r3,r21
 1009af0:	a000631e 	bne	r20,zero,1009c80 <__umoddi3+0x2ec>
 1009af4:	3c400136 	bltu	r7,r17,1009afc <__umoddi3+0x168>
 1009af8:	81810436 	bltu	r16,r6,1009f0c <__umoddi3+0x578>
 1009afc:	8185c83a 	sub	r2,r16,r6
 1009b00:	89e3c83a 	sub	r17,r17,r7
 1009b04:	8087803a 	cmpltu	r3,r16,r2
 1009b08:	88efc83a 	sub	r23,r17,r3
 1009b0c:	b807883a 	mov	r3,r23
 1009b10:	00003f06 	br	1009c10 <__umoddi3+0x27c>
 1009b14:	3000041e 	bne	r6,zero,1009b28 <__umoddi3+0x194>
 1009b18:	01000044 	movi	r4,1
 1009b1c:	000b883a 	mov	r5,zero
 1009b20:	100a0400 	call	100a040 <__udivsi3>
 1009b24:	1027883a 	mov	r19,r2
 1009b28:	00bfffd4 	movui	r2,65535
 1009b2c:	14c04f2e 	bgeu	r2,r19,1009c6c <__umoddi3+0x2d8>
 1009b30:	00804034 	movhi	r2,256
 1009b34:	10bfffc4 	addi	r2,r2,-1
 1009b38:	14c0e42e 	bgeu	r2,r19,1009ecc <__umoddi3+0x538>
 1009b3c:	00800604 	movi	r2,24
 1009b40:	1007883a 	mov	r3,r2
 1009b44:	9884d83a 	srl	r2,r19,r2
 1009b48:	01004074 	movhi	r4,257
 1009b4c:	213bc204 	addi	r4,r4,-4344
 1009b50:	2085883a 	add	r2,r4,r2
 1009b54:	11000003 	ldbu	r4,0(r2)
 1009b58:	00800804 	movi	r2,32
 1009b5c:	20c7883a 	add	r3,r4,r3
 1009b60:	10c5c83a 	sub	r2,r2,r3
 1009b64:	10009a1e 	bne	r2,zero,1009dd0 <__umoddi3+0x43c>
 1009b68:	982cd43a 	srli	r22,r19,16
 1009b6c:	8ce3c83a 	sub	r17,r17,r19
 1009b70:	9c3fffcc 	andi	r16,r19,65535
 1009b74:	0025883a 	mov	r18,zero
 1009b78:	8809883a 	mov	r4,r17
 1009b7c:	b00b883a 	mov	r5,r22
 1009b80:	100a0480 	call	100a048 <__umodsi3>
 1009b84:	8809883a 	mov	r4,r17
 1009b88:	b00b883a 	mov	r5,r22
 1009b8c:	102b883a 	mov	r21,r2
 1009b90:	100a0400 	call	100a040 <__udivsi3>
 1009b94:	a806943a 	slli	r3,r21,16
 1009b98:	a008d43a 	srli	r4,r20,16
 1009b9c:	1405383a 	mul	r2,r2,r16
 1009ba0:	190cb03a 	or	r6,r3,r4
 1009ba4:	3080032e 	bgeu	r6,r2,1009bb4 <__umoddi3+0x220>
 1009ba8:	34cd883a 	add	r6,r6,r19
 1009bac:	34c00136 	bltu	r6,r19,1009bb4 <__umoddi3+0x220>
 1009bb0:	3080d436 	bltu	r6,r2,1009f04 <__umoddi3+0x570>
 1009bb4:	30abc83a 	sub	r21,r6,r2
 1009bb8:	a809883a 	mov	r4,r21
 1009bbc:	b00b883a 	mov	r5,r22
 1009bc0:	100a0480 	call	100a048 <__umodsi3>
 1009bc4:	1023883a 	mov	r17,r2
 1009bc8:	a809883a 	mov	r4,r21
 1009bcc:	b00b883a 	mov	r5,r22
 1009bd0:	100a0400 	call	100a040 <__udivsi3>
 1009bd4:	8822943a 	slli	r17,r17,16
 1009bd8:	1405383a 	mul	r2,r2,r16
 1009bdc:	a13fffcc 	andi	r4,r20,65535
 1009be0:	8906b03a 	or	r3,r17,r4
 1009be4:	1880042e 	bgeu	r3,r2,1009bf8 <__umoddi3+0x264>
 1009be8:	1cc7883a 	add	r3,r3,r19
 1009bec:	1cc00236 	bltu	r3,r19,1009bf8 <__umoddi3+0x264>
 1009bf0:	1880012e 	bgeu	r3,r2,1009bf8 <__umoddi3+0x264>
 1009bf4:	1cc7883a 	add	r3,r3,r19
 1009bf8:	1887c83a 	sub	r3,r3,r2
 1009bfc:	1c84d83a 	srl	r2,r3,r18
 1009c00:	0007883a 	mov	r3,zero
 1009c04:	00000206 	br	1009c10 <__umoddi3+0x27c>
 1009c08:	2005883a 	mov	r2,r4
 1009c0c:	2807883a 	mov	r3,r5
 1009c10:	dfc00b17 	ldw	ra,44(sp)
 1009c14:	df000a17 	ldw	fp,40(sp)
 1009c18:	ddc00917 	ldw	r23,36(sp)
 1009c1c:	dd800817 	ldw	r22,32(sp)
 1009c20:	dd400717 	ldw	r21,28(sp)
 1009c24:	dd000617 	ldw	r20,24(sp)
 1009c28:	dcc00517 	ldw	r19,20(sp)
 1009c2c:	dc800417 	ldw	r18,16(sp)
 1009c30:	dc400317 	ldw	r17,12(sp)
 1009c34:	dc000217 	ldw	r16,8(sp)
 1009c38:	dec00c04 	addi	sp,sp,48
 1009c3c:	f800283a 	ret
 1009c40:	00803fc4 	movi	r2,255
 1009c44:	11c0952e 	bgeu	r2,r7,1009e9c <__umoddi3+0x508>
 1009c48:	01400204 	movi	r5,8
 1009c4c:	282b883a 	mov	r21,r5
 1009c50:	003f9f06 	br	1009ad0 <__umoddi3+0x13c>
 1009c54:	00804034 	movhi	r2,256
 1009c58:	10bfffc4 	addi	r2,r2,-1
 1009c5c:	1180952e 	bgeu	r2,r6,1009eb4 <__umoddi3+0x520>
 1009c60:	01400604 	movi	r5,24
 1009c64:	2805883a 	mov	r2,r5
 1009c68:	003f6206 	br	10099f4 <__umoddi3+0x60>
 1009c6c:	00803fc4 	movi	r2,255
 1009c70:	14c0932e 	bgeu	r2,r19,1009ec0 <__umoddi3+0x52c>
 1009c74:	00800204 	movi	r2,8
 1009c78:	1007883a 	mov	r3,r2
 1009c7c:	003fb106 	br	1009b44 <__umoddi3+0x1b0>
 1009c80:	3548d83a 	srl	r4,r6,r21
 1009c84:	3d0e983a 	sll	r7,r7,r20
 1009c88:	8d10983a 	sll	r8,r17,r20
 1009c8c:	8d6cd83a 	srl	r22,r17,r21
 1009c90:	3922b03a 	or	r17,r7,r4
 1009c94:	882ed43a 	srli	r23,r17,16
 1009c98:	8564d83a 	srl	r18,r16,r21
 1009c9c:	b009883a 	mov	r4,r22
 1009ca0:	b80b883a 	mov	r5,r23
 1009ca4:	44a4b03a 	or	r18,r8,r18
 1009ca8:	3526983a 	sll	r19,r6,r20
 1009cac:	100a0480 	call	100a048 <__umodsi3>
 1009cb0:	b009883a 	mov	r4,r22
 1009cb4:	b80b883a 	mov	r5,r23
 1009cb8:	1039883a 	mov	fp,r2
 1009cbc:	100a0400 	call	100a040 <__udivsi3>
 1009cc0:	102d883a 	mov	r22,r2
 1009cc4:	8a3fffcc 	andi	r8,r17,65535
 1009cc8:	e004943a 	slli	r2,fp,16
 1009ccc:	900cd43a 	srli	r6,r18,16
 1009cd0:	b239383a 	mul	fp,r22,r8
 1009cd4:	8520983a 	sll	r16,r16,r20
 1009cd8:	118ab03a 	or	r5,r2,r6
 1009cdc:	2f00042e 	bgeu	r5,fp,1009cf0 <__umoddi3+0x35c>
 1009ce0:	2c4b883a 	add	r5,r5,r17
 1009ce4:	b0bfffc4 	addi	r2,r22,-1
 1009ce8:	2c40822e 	bgeu	r5,r17,1009ef4 <__umoddi3+0x560>
 1009cec:	102d883a 	mov	r22,r2
 1009cf0:	2f39c83a 	sub	fp,r5,fp
 1009cf4:	e009883a 	mov	r4,fp
 1009cf8:	b80b883a 	mov	r5,r23
 1009cfc:	da000115 	stw	r8,4(sp)
 1009d00:	100a0480 	call	100a048 <__umodsi3>
 1009d04:	e009883a 	mov	r4,fp
 1009d08:	b80b883a 	mov	r5,r23
 1009d0c:	d8800015 	stw	r2,0(sp)
 1009d10:	100a0400 	call	100a040 <__udivsi3>
 1009d14:	d9800017 	ldw	r6,0(sp)
 1009d18:	da000117 	ldw	r8,4(sp)
 1009d1c:	94bfffcc 	andi	r18,r18,65535
 1009d20:	300c943a 	slli	r6,r6,16
 1009d24:	1209383a 	mul	r4,r2,r8
 1009d28:	3490b03a 	or	r8,r6,r18
 1009d2c:	4100042e 	bgeu	r8,r4,1009d40 <__umoddi3+0x3ac>
 1009d30:	4451883a 	add	r8,r8,r17
 1009d34:	10ffffc4 	addi	r3,r2,-1
 1009d38:	44406a2e 	bgeu	r8,r17,1009ee4 <__umoddi3+0x550>
 1009d3c:	1805883a 	mov	r2,r3
 1009d40:	b012943a 	slli	r9,r22,16
 1009d44:	9abfffcc 	andi	r10,r19,65535
 1009d48:	980ed43a 	srli	r7,r19,16
 1009d4c:	124ab03a 	or	r5,r2,r9
 1009d50:	2a7fffcc 	andi	r9,r5,65535
 1009d54:	280ad43a 	srli	r5,r5,16
 1009d58:	4a8d383a 	mul	r6,r9,r10
 1009d5c:	49d3383a 	mul	r9,r9,r7
 1009d60:	2a95383a 	mul	r10,r5,r10
 1009d64:	3004d43a 	srli	r2,r6,16
 1009d68:	4111c83a 	sub	r8,r8,r4
 1009d6c:	5253883a 	add	r9,r10,r9
 1009d70:	4893883a 	add	r9,r9,r2
 1009d74:	29cb383a 	mul	r5,r5,r7
 1009d78:	4a80022e 	bgeu	r9,r10,1009d84 <__umoddi3+0x3f0>
 1009d7c:	00800074 	movhi	r2,1
 1009d80:	288b883a 	add	r5,r5,r2
 1009d84:	4808d43a 	srli	r4,r9,16
 1009d88:	4812943a 	slli	r9,r9,16
 1009d8c:	31bfffcc 	andi	r6,r6,65535
 1009d90:	290b883a 	add	r5,r5,r4
 1009d94:	498d883a 	add	r6,r9,r6
 1009d98:	41403a36 	bltu	r8,r5,1009e84 <__umoddi3+0x4f0>
 1009d9c:	41405d26 	beq	r8,r5,1009f14 <__umoddi3+0x580>
 1009da0:	4149c83a 	sub	r4,r8,r5
 1009da4:	300f883a 	mov	r7,r6
 1009da8:	81cfc83a 	sub	r7,r16,r7
 1009dac:	81c7803a 	cmpltu	r3,r16,r7
 1009db0:	20c7c83a 	sub	r3,r4,r3
 1009db4:	1d44983a 	sll	r2,r3,r21
 1009db8:	3d0ed83a 	srl	r7,r7,r20
 1009dbc:	1d06d83a 	srl	r3,r3,r20
 1009dc0:	11c4b03a 	or	r2,r2,r7
 1009dc4:	003f9206 	br	1009c10 <__umoddi3+0x27c>
 1009dc8:	0025883a 	mov	r18,zero
 1009dcc:	003f1806 	br	1009a30 <__umoddi3+0x9c>
 1009dd0:	98a6983a 	sll	r19,r19,r2
 1009dd4:	88e8d83a 	srl	r20,r17,r3
 1009dd8:	80c6d83a 	srl	r3,r16,r3
 1009ddc:	982cd43a 	srli	r22,r19,16
 1009de0:	88a2983a 	sll	r17,r17,r2
 1009de4:	a009883a 	mov	r4,r20
 1009de8:	b00b883a 	mov	r5,r22
 1009dec:	88eab03a 	or	r21,r17,r3
 1009df0:	1025883a 	mov	r18,r2
 1009df4:	100a0480 	call	100a048 <__umodsi3>
 1009df8:	a009883a 	mov	r4,r20
 1009dfc:	b00b883a 	mov	r5,r22
 1009e00:	1023883a 	mov	r17,r2
 1009e04:	100a0400 	call	100a040 <__udivsi3>
 1009e08:	9f3fffcc 	andi	fp,r19,65535
 1009e0c:	8822943a 	slli	r17,r17,16
 1009e10:	a80ad43a 	srli	r5,r21,16
 1009e14:	1705383a 	mul	r2,r2,fp
 1009e18:	84a8983a 	sll	r20,r16,r18
 1009e1c:	8948b03a 	or	r4,r17,r5
 1009e20:	2080042e 	bgeu	r4,r2,1009e34 <__umoddi3+0x4a0>
 1009e24:	24c9883a 	add	r4,r4,r19
 1009e28:	24c00236 	bltu	r4,r19,1009e34 <__umoddi3+0x4a0>
 1009e2c:	2080012e 	bgeu	r4,r2,1009e34 <__umoddi3+0x4a0>
 1009e30:	24c9883a 	add	r4,r4,r19
 1009e34:	20afc83a 	sub	r23,r4,r2
 1009e38:	b809883a 	mov	r4,r23
 1009e3c:	b00b883a 	mov	r5,r22
 1009e40:	100a0480 	call	100a048 <__umodsi3>
 1009e44:	1023883a 	mov	r17,r2
 1009e48:	b809883a 	mov	r4,r23
 1009e4c:	b00b883a 	mov	r5,r22
 1009e50:	100a0400 	call	100a040 <__udivsi3>
 1009e54:	8822943a 	slli	r17,r17,16
 1009e58:	1705383a 	mul	r2,r2,fp
 1009e5c:	a93fffcc 	andi	r4,r21,65535
 1009e60:	8908b03a 	or	r4,r17,r4
 1009e64:	2080042e 	bgeu	r4,r2,1009e78 <__umoddi3+0x4e4>
 1009e68:	24c9883a 	add	r4,r4,r19
 1009e6c:	24c00236 	bltu	r4,r19,1009e78 <__umoddi3+0x4e4>
 1009e70:	2080012e 	bgeu	r4,r2,1009e78 <__umoddi3+0x4e4>
 1009e74:	24c9883a 	add	r4,r4,r19
 1009e78:	20a3c83a 	sub	r17,r4,r2
 1009e7c:	e021883a 	mov	r16,fp
 1009e80:	003f3d06 	br	1009b78 <__umoddi3+0x1e4>
 1009e84:	34cfc83a 	sub	r7,r6,r19
 1009e88:	2c4bc83a 	sub	r5,r5,r17
 1009e8c:	31cd803a 	cmpltu	r6,r6,r7
 1009e90:	298dc83a 	sub	r6,r5,r6
 1009e94:	4189c83a 	sub	r4,r8,r6
 1009e98:	003fc306 	br	1009da8 <__umoddi3+0x414>
 1009e9c:	000b883a 	mov	r5,zero
 1009ea0:	002b883a 	mov	r21,zero
 1009ea4:	003f0a06 	br	1009ad0 <__umoddi3+0x13c>
 1009ea8:	01400404 	movi	r5,16
 1009eac:	282b883a 	mov	r21,r5
 1009eb0:	003f0706 	br	1009ad0 <__umoddi3+0x13c>
 1009eb4:	01400404 	movi	r5,16
 1009eb8:	2805883a 	mov	r2,r5
 1009ebc:	003ecd06 	br	10099f4 <__umoddi3+0x60>
 1009ec0:	0005883a 	mov	r2,zero
 1009ec4:	0007883a 	mov	r3,zero
 1009ec8:	003f1e06 	br	1009b44 <__umoddi3+0x1b0>
 1009ecc:	00800404 	movi	r2,16
 1009ed0:	1007883a 	mov	r3,r2
 1009ed4:	003f1b06 	br	1009b44 <__umoddi3+0x1b0>
 1009ed8:	000b883a 	mov	r5,zero
 1009edc:	0005883a 	mov	r2,zero
 1009ee0:	003ec406 	br	10099f4 <__umoddi3+0x60>
 1009ee4:	413f952e 	bgeu	r8,r4,1009d3c <__umoddi3+0x3a8>
 1009ee8:	10bfff84 	addi	r2,r2,-2
 1009eec:	4451883a 	add	r8,r8,r17
 1009ef0:	003f9306 	br	1009d40 <__umoddi3+0x3ac>
 1009ef4:	2f3f7d2e 	bgeu	r5,fp,1009cec <__umoddi3+0x358>
 1009ef8:	b5bfff84 	addi	r22,r22,-2
 1009efc:	2c4b883a 	add	r5,r5,r17
 1009f00:	003f7b06 	br	1009cf0 <__umoddi3+0x35c>
 1009f04:	34cd883a 	add	r6,r6,r19
 1009f08:	003f2a06 	br	1009bb4 <__umoddi3+0x220>
 1009f0c:	8005883a 	mov	r2,r16
 1009f10:	003efe06 	br	1009b0c <__umoddi3+0x178>
 1009f14:	81bfdb36 	bltu	r16,r6,1009e84 <__umoddi3+0x4f0>
 1009f18:	300f883a 	mov	r7,r6
 1009f1c:	0009883a 	mov	r4,zero
 1009f20:	003fa106 	br	1009da8 <__umoddi3+0x414>

01009f24 <udivmodsi4>:
 1009f24:	2900182e 	bgeu	r5,r4,1009f88 <udivmodsi4+0x64>
 1009f28:	28001716 	blt	r5,zero,1009f88 <udivmodsi4+0x64>
 1009f2c:	00800804 	movi	r2,32
 1009f30:	00c00044 	movi	r3,1
 1009f34:	00000206 	br	1009f40 <udivmodsi4+0x1c>
 1009f38:	10001126 	beq	r2,zero,1009f80 <udivmodsi4+0x5c>
 1009f3c:	28000516 	blt	r5,zero,1009f54 <udivmodsi4+0x30>
 1009f40:	294b883a 	add	r5,r5,r5
 1009f44:	10bfffc4 	addi	r2,r2,-1
 1009f48:	18c7883a 	add	r3,r3,r3
 1009f4c:	293ffa36 	bltu	r5,r4,1009f38 <udivmodsi4+0x14>
 1009f50:	18000b26 	beq	r3,zero,1009f80 <udivmodsi4+0x5c>
 1009f54:	0005883a 	mov	r2,zero
 1009f58:	21400236 	bltu	r4,r5,1009f64 <udivmodsi4+0x40>
 1009f5c:	2149c83a 	sub	r4,r4,r5
 1009f60:	10c4b03a 	or	r2,r2,r3
 1009f64:	1806d07a 	srli	r3,r3,1
 1009f68:	280ad07a 	srli	r5,r5,1
 1009f6c:	183ffa1e 	bne	r3,zero,1009f58 <udivmodsi4+0x34>
 1009f70:	3000011e 	bne	r6,zero,1009f78 <udivmodsi4+0x54>
 1009f74:	f800283a 	ret
 1009f78:	2005883a 	mov	r2,r4
 1009f7c:	f800283a 	ret
 1009f80:	0005883a 	mov	r2,zero
 1009f84:	003ffa06 	br	1009f70 <udivmodsi4+0x4c>
 1009f88:	00c00044 	movi	r3,1
 1009f8c:	003ff106 	br	1009f54 <udivmodsi4+0x30>

01009f90 <__divsi3>:
 1009f90:	defffe04 	addi	sp,sp,-8
 1009f94:	dfc00115 	stw	ra,4(sp)
 1009f98:	dc000015 	stw	r16,0(sp)
 1009f9c:	20000b16 	blt	r4,zero,1009fcc <__divsi3+0x3c>
 1009fa0:	0021883a 	mov	r16,zero
 1009fa4:	28000c16 	blt	r5,zero,1009fd8 <__divsi3+0x48>
 1009fa8:	000d883a 	mov	r6,zero
 1009fac:	1009f240 	call	1009f24 <udivmodsi4>
 1009fb0:	0407c83a 	sub	r3,zero,r16
 1009fb4:	1884f03a 	xor	r2,r3,r2
 1009fb8:	1405883a 	add	r2,r2,r16
 1009fbc:	dfc00117 	ldw	ra,4(sp)
 1009fc0:	dc000017 	ldw	r16,0(sp)
 1009fc4:	dec00204 	addi	sp,sp,8
 1009fc8:	f800283a 	ret
 1009fcc:	0109c83a 	sub	r4,zero,r4
 1009fd0:	04000044 	movi	r16,1
 1009fd4:	283ff40e 	bge	r5,zero,1009fa8 <__divsi3+0x18>
 1009fd8:	014bc83a 	sub	r5,zero,r5
 1009fdc:	8400005c 	xori	r16,r16,1
 1009fe0:	003ff106 	br	1009fa8 <__divsi3+0x18>

01009fe4 <__modsi3>:
 1009fe4:	defffd04 	addi	sp,sp,-12
 1009fe8:	dfc00215 	stw	ra,8(sp)
 1009fec:	dc400115 	stw	r17,4(sp)
 1009ff0:	dc000015 	stw	r16,0(sp)
 1009ff4:	20000c16 	blt	r4,zero,100a028 <__modsi3+0x44>
 1009ff8:	0023883a 	mov	r17,zero
 1009ffc:	0021883a 	mov	r16,zero
 100a000:	28000d16 	blt	r5,zero,100a038 <__modsi3+0x54>
 100a004:	01800044 	movi	r6,1
 100a008:	1009f240 	call	1009f24 <udivmodsi4>
 100a00c:	1404f03a 	xor	r2,r2,r16
 100a010:	8885883a 	add	r2,r17,r2
 100a014:	dfc00217 	ldw	ra,8(sp)
 100a018:	dc400117 	ldw	r17,4(sp)
 100a01c:	dc000017 	ldw	r16,0(sp)
 100a020:	dec00304 	addi	sp,sp,12
 100a024:	f800283a 	ret
 100a028:	0109c83a 	sub	r4,zero,r4
 100a02c:	04400044 	movi	r17,1
 100a030:	043fffc4 	movi	r16,-1
 100a034:	283ff30e 	bge	r5,zero,100a004 <__modsi3+0x20>
 100a038:	014bc83a 	sub	r5,zero,r5
 100a03c:	003ff106 	br	100a004 <__modsi3+0x20>

0100a040 <__udivsi3>:
 100a040:	000d883a 	mov	r6,zero
 100a044:	1009f241 	jmpi	1009f24 <udivmodsi4>

0100a048 <__umodsi3>:
 100a048:	01800044 	movi	r6,1
 100a04c:	1009f241 	jmpi	1009f24 <udivmodsi4>

0100a050 <__adddf3>:
 100a050:	02000434 	movhi	r8,16
 100a054:	423fffc4 	addi	r8,r8,-1
 100a058:	defffb04 	addi	sp,sp,-20
 100a05c:	2a12703a 	and	r9,r5,r8
 100a060:	2806d7fa 	srli	r3,r5,31
 100a064:	3a10703a 	and	r8,r7,r8
 100a068:	3804d53a 	srli	r2,r7,20
 100a06c:	3014d77a 	srli	r10,r6,29
 100a070:	dc000015 	stw	r16,0(sp)
 100a074:	481290fa 	slli	r9,r9,3
 100a078:	2820d53a 	srli	r16,r5,20
 100a07c:	401090fa 	slli	r8,r8,3
 100a080:	200ad77a 	srli	r5,r4,29
 100a084:	380ed7fa 	srli	r7,r7,31
 100a088:	dc800215 	stw	r18,8(sp)
 100a08c:	dc400115 	stw	r17,4(sp)
 100a090:	dfc00415 	stw	ra,16(sp)
 100a094:	dcc00315 	stw	r19,12(sp)
 100a098:	1c803fcc 	andi	r18,r3,255
 100a09c:	8401ffcc 	andi	r16,r16,2047
 100a0a0:	494ab03a 	or	r5,r9,r5
 100a0a4:	202290fa 	slli	r17,r4,3
 100a0a8:	1081ffcc 	andi	r2,r2,2047
 100a0ac:	4290b03a 	or	r8,r8,r10
 100a0b0:	300c90fa 	slli	r6,r6,3
 100a0b4:	91c07026 	beq	r18,r7,100a278 <__adddf3+0x228>
 100a0b8:	8087c83a 	sub	r3,r16,r2
 100a0bc:	00c0b30e 	bge	zero,r3,100a38c <__adddf3+0x33c>
 100a0c0:	10002a1e 	bne	r2,zero,100a16c <__adddf3+0x11c>
 100a0c4:	4184b03a 	or	r2,r8,r6
 100a0c8:	1000991e 	bne	r2,zero,100a330 <__adddf3+0x2e0>
 100a0cc:	888001cc 	andi	r2,r17,7
 100a0d0:	10005b26 	beq	r2,zero,100a240 <__adddf3+0x1f0>
 100a0d4:	88c003cc 	andi	r3,r17,15
 100a0d8:	00800104 	movi	r2,4
 100a0dc:	18805826 	beq	r3,r2,100a240 <__adddf3+0x1f0>
 100a0e0:	89800104 	addi	r6,r17,4
 100a0e4:	3463803a 	cmpltu	r17,r6,r17
 100a0e8:	2c4b883a 	add	r5,r5,r17
 100a0ec:	2880202c 	andhi	r2,r5,128
 100a0f0:	9007883a 	mov	r3,r18
 100a0f4:	3023883a 	mov	r17,r6
 100a0f8:	10005426 	beq	r2,zero,100a24c <__adddf3+0x1fc>
 100a0fc:	84000044 	addi	r16,r16,1
 100a100:	0081ffc4 	movi	r2,2047
 100a104:	8080c126 	beq	r16,r2,100a40c <__adddf3+0x3bc>
 100a108:	013fe034 	movhi	r4,65408
 100a10c:	213fffc4 	addi	r4,r4,-1
 100a110:	290a703a 	and	r5,r5,r4
 100a114:	2804977a 	slli	r2,r5,29
 100a118:	280a927a 	slli	r5,r5,9
 100a11c:	8822d0fa 	srli	r17,r17,3
 100a120:	8401ffcc 	andi	r16,r16,2047
 100a124:	2808d33a 	srli	r4,r5,12
 100a128:	1444b03a 	or	r2,r2,r17
 100a12c:	8401ffcc 	andi	r16,r16,2047
 100a130:	800a953a 	slli	r5,r16,20
 100a134:	18c03fcc 	andi	r3,r3,255
 100a138:	04000434 	movhi	r16,16
 100a13c:	180697fa 	slli	r3,r3,31
 100a140:	843fffc4 	addi	r16,r16,-1
 100a144:	2420703a 	and	r16,r4,r16
 100a148:	8160b03a 	or	r16,r16,r5
 100a14c:	80c6b03a 	or	r3,r16,r3
 100a150:	dfc00417 	ldw	ra,16(sp)
 100a154:	dcc00317 	ldw	r19,12(sp)
 100a158:	dc800217 	ldw	r18,8(sp)
 100a15c:	dc400117 	ldw	r17,4(sp)
 100a160:	dc000017 	ldw	r16,0(sp)
 100a164:	dec00504 	addi	sp,sp,20
 100a168:	f800283a 	ret
 100a16c:	0081ffc4 	movi	r2,2047
 100a170:	80bfd626 	beq	r16,r2,100a0cc <__adddf3+0x7c>
 100a174:	42002034 	orhi	r8,r8,128
 100a178:	00800e04 	movi	r2,56
 100a17c:	10c0a616 	blt	r2,r3,100a418 <__adddf3+0x3c8>
 100a180:	008007c4 	movi	r2,31
 100a184:	10c0c916 	blt	r2,r3,100a4ac <__adddf3+0x45c>
 100a188:	00800804 	movi	r2,32
 100a18c:	10c5c83a 	sub	r2,r2,r3
 100a190:	408e983a 	sll	r7,r8,r2
 100a194:	30c8d83a 	srl	r4,r6,r3
 100a198:	3084983a 	sll	r2,r6,r2
 100a19c:	40c6d83a 	srl	r3,r8,r3
 100a1a0:	390cb03a 	or	r6,r7,r4
 100a1a4:	1004c03a 	cmpne	r2,r2,zero
 100a1a8:	308cb03a 	or	r6,r6,r2
 100a1ac:	898dc83a 	sub	r6,r17,r6
 100a1b0:	89a3803a 	cmpltu	r17,r17,r6
 100a1b4:	28cbc83a 	sub	r5,r5,r3
 100a1b8:	2c4bc83a 	sub	r5,r5,r17
 100a1bc:	3023883a 	mov	r17,r6
 100a1c0:	2880202c 	andhi	r2,r5,128
 100a1c4:	10006d26 	beq	r2,zero,100a37c <__adddf3+0x32c>
 100a1c8:	04c02034 	movhi	r19,128
 100a1cc:	9cffffc4 	addi	r19,r19,-1
 100a1d0:	2ce6703a 	and	r19,r5,r19
 100a1d4:	98007e26 	beq	r19,zero,100a3d0 <__adddf3+0x380>
 100a1d8:	9809883a 	mov	r4,r19
 100a1dc:	100c5ec0 	call	100c5ec <__clzsi2>
 100a1e0:	10fffe04 	addi	r3,r2,-8
 100a1e4:	010007c4 	movi	r4,31
 100a1e8:	20c07f16 	blt	r4,r3,100a3e8 <__adddf3+0x398>
 100a1ec:	01400a04 	movi	r5,40
 100a1f0:	2885c83a 	sub	r2,r5,r2
 100a1f4:	888ad83a 	srl	r5,r17,r2
 100a1f8:	98e6983a 	sll	r19,r19,r3
 100a1fc:	88e2983a 	sll	r17,r17,r3
 100a200:	2ce6b03a 	or	r19,r5,r19
 100a204:	1c007c16 	blt	r3,r16,100a3f8 <__adddf3+0x3a8>
 100a208:	1c21c83a 	sub	r16,r3,r16
 100a20c:	81400044 	addi	r5,r16,1
 100a210:	00c007c4 	movi	r3,31
 100a214:	19409816 	blt	r3,r5,100a478 <__adddf3+0x428>
 100a218:	1c21c83a 	sub	r16,r3,r16
 100a21c:	8c08983a 	sll	r4,r17,r16
 100a220:	8946d83a 	srl	r3,r17,r5
 100a224:	9c20983a 	sll	r16,r19,r16
 100a228:	2008c03a 	cmpne	r4,r4,zero
 100a22c:	994ad83a 	srl	r5,r19,r5
 100a230:	1c06b03a 	or	r3,r3,r16
 100a234:	1922b03a 	or	r17,r3,r4
 100a238:	0021883a 	mov	r16,zero
 100a23c:	003fa306 	br	100a0cc <__adddf3+0x7c>
 100a240:	2880202c 	andhi	r2,r5,128
 100a244:	9007883a 	mov	r3,r18
 100a248:	103fac1e 	bne	r2,zero,100a0fc <__adddf3+0xac>
 100a24c:	2804977a 	slli	r2,r5,29
 100a250:	8822d0fa 	srli	r17,r17,3
 100a254:	0101ffc4 	movi	r4,2047
 100a258:	280ad0fa 	srli	r5,r5,3
 100a25c:	1444b03a 	or	r2,r2,r17
 100a260:	81002c26 	beq	r16,r4,100a314 <__adddf3+0x2c4>
 100a264:	8120703a 	and	r16,r16,r4
 100a268:	01000434 	movhi	r4,16
 100a26c:	213fffc4 	addi	r4,r4,-1
 100a270:	2908703a 	and	r4,r5,r4
 100a274:	003fad06 	br	100a12c <__adddf3+0xdc>
 100a278:	8089c83a 	sub	r4,r16,r2
 100a27c:	01006a0e 	bge	zero,r4,100a428 <__adddf3+0x3d8>
 100a280:	10003326 	beq	r2,zero,100a350 <__adddf3+0x300>
 100a284:	0081ffc4 	movi	r2,2047
 100a288:	80bf9026 	beq	r16,r2,100a0cc <__adddf3+0x7c>
 100a28c:	42002034 	orhi	r8,r8,128
 100a290:	00800e04 	movi	r2,56
 100a294:	1100b116 	blt	r2,r4,100a55c <__adddf3+0x50c>
 100a298:	008007c4 	movi	r2,31
 100a29c:	1100e216 	blt	r2,r4,100a628 <__adddf3+0x5d8>
 100a2a0:	00800804 	movi	r2,32
 100a2a4:	1105c83a 	sub	r2,r2,r4
 100a2a8:	4092983a 	sll	r9,r8,r2
 100a2ac:	310ed83a 	srl	r7,r6,r4
 100a2b0:	3084983a 	sll	r2,r6,r2
 100a2b4:	4110d83a 	srl	r8,r8,r4
 100a2b8:	49ccb03a 	or	r6,r9,r7
 100a2bc:	1004c03a 	cmpne	r2,r2,zero
 100a2c0:	308cb03a 	or	r6,r6,r2
 100a2c4:	344d883a 	add	r6,r6,r17
 100a2c8:	3463803a 	cmpltu	r17,r6,r17
 100a2cc:	414b883a 	add	r5,r8,r5
 100a2d0:	2c4b883a 	add	r5,r5,r17
 100a2d4:	3023883a 	mov	r17,r6
 100a2d8:	2880202c 	andhi	r2,r5,128
 100a2dc:	10002726 	beq	r2,zero,100a37c <__adddf3+0x32c>
 100a2e0:	84000044 	addi	r16,r16,1
 100a2e4:	0081ffc4 	movi	r2,2047
 100a2e8:	8080ae26 	beq	r16,r2,100a5a4 <__adddf3+0x554>
 100a2ec:	00bfe034 	movhi	r2,65408
 100a2f0:	10bfffc4 	addi	r2,r2,-1
 100a2f4:	288a703a 	and	r5,r5,r2
 100a2f8:	880cd07a 	srli	r6,r17,1
 100a2fc:	280897fa 	slli	r4,r5,31
 100a300:	88c0004c 	andi	r3,r17,1
 100a304:	30e2b03a 	or	r17,r6,r3
 100a308:	280ad07a 	srli	r5,r5,1
 100a30c:	8922b03a 	or	r17,r17,r4
 100a310:	003f6e06 	br	100a0cc <__adddf3+0x7c>
 100a314:	1148b03a 	or	r4,r2,r5
 100a318:	20003c26 	beq	r4,zero,100a40c <__adddf3+0x3bc>
 100a31c:	29000234 	orhi	r4,r5,8
 100a320:	01400434 	movhi	r5,16
 100a324:	297fffc4 	addi	r5,r5,-1
 100a328:	2148703a 	and	r4,r4,r5
 100a32c:	003f7f06 	br	100a12c <__adddf3+0xdc>
 100a330:	18ffffc4 	addi	r3,r3,-1
 100a334:	18004d1e 	bne	r3,zero,100a46c <__adddf3+0x41c>
 100a338:	898dc83a 	sub	r6,r17,r6
 100a33c:	89a3803a 	cmpltu	r17,r17,r6
 100a340:	2a0bc83a 	sub	r5,r5,r8
 100a344:	2c4bc83a 	sub	r5,r5,r17
 100a348:	3023883a 	mov	r17,r6
 100a34c:	003f9c06 	br	100a1c0 <__adddf3+0x170>
 100a350:	4184b03a 	or	r2,r8,r6
 100a354:	103f5d26 	beq	r2,zero,100a0cc <__adddf3+0x7c>
 100a358:	213fffc4 	addi	r4,r4,-1
 100a35c:	203fd926 	beq	r4,zero,100a2c4 <__adddf3+0x274>
 100a360:	0081ffc4 	movi	r2,2047
 100a364:	80bfca1e 	bne	r16,r2,100a290 <__adddf3+0x240>
 100a368:	003f5806 	br	100a0cc <__adddf3+0x7c>
 100a36c:	10c8b03a 	or	r4,r2,r3
 100a370:	20008b26 	beq	r4,zero,100a5a0 <__adddf3+0x550>
 100a374:	100b883a 	mov	r5,r2
 100a378:	1823883a 	mov	r17,r3
 100a37c:	888001cc 	andi	r2,r17,7
 100a380:	103f541e 	bne	r2,zero,100a0d4 <__adddf3+0x84>
 100a384:	9007883a 	mov	r3,r18
 100a388:	003fb006 	br	100a24c <__adddf3+0x1fc>
 100a38c:	1800531e 	bne	r3,zero,100a4dc <__adddf3+0x48c>
 100a390:	80800044 	addi	r2,r16,1
 100a394:	1081ffcc 	andi	r2,r2,2047
 100a398:	00c00044 	movi	r3,1
 100a39c:	1880990e 	bge	r3,r2,100a604 <__adddf3+0x5b4>
 100a3a0:	8985c83a 	sub	r2,r17,r6
 100a3a4:	8887803a 	cmpltu	r3,r17,r2
 100a3a8:	2a27c83a 	sub	r19,r5,r8
 100a3ac:	98e7c83a 	sub	r19,r19,r3
 100a3b0:	98c0202c 	andhi	r3,r19,128
 100a3b4:	18006226 	beq	r3,zero,100a540 <__adddf3+0x4f0>
 100a3b8:	3463c83a 	sub	r17,r6,r17
 100a3bc:	4151c83a 	sub	r8,r8,r5
 100a3c0:	344d803a 	cmpltu	r6,r6,r17
 100a3c4:	41a7c83a 	sub	r19,r8,r6
 100a3c8:	3825883a 	mov	r18,r7
 100a3cc:	983f821e 	bne	r19,zero,100a1d8 <__adddf3+0x188>
 100a3d0:	8809883a 	mov	r4,r17
 100a3d4:	100c5ec0 	call	100c5ec <__clzsi2>
 100a3d8:	10800804 	addi	r2,r2,32
 100a3dc:	10fffe04 	addi	r3,r2,-8
 100a3e0:	010007c4 	movi	r4,31
 100a3e4:	20ff810e 	bge	r4,r3,100a1ec <__adddf3+0x19c>
 100a3e8:	14fff604 	addi	r19,r2,-40
 100a3ec:	8ce6983a 	sll	r19,r17,r19
 100a3f0:	0023883a 	mov	r17,zero
 100a3f4:	1c3f840e 	bge	r3,r16,100a208 <__adddf3+0x1b8>
 100a3f8:	017fe034 	movhi	r5,65408
 100a3fc:	297fffc4 	addi	r5,r5,-1
 100a400:	80e1c83a 	sub	r16,r16,r3
 100a404:	994a703a 	and	r5,r19,r5
 100a408:	003f3006 	br	100a0cc <__adddf3+0x7c>
 100a40c:	0009883a 	mov	r4,zero
 100a410:	0005883a 	mov	r2,zero
 100a414:	003f4506 	br	100a12c <__adddf3+0xdc>
 100a418:	418cb03a 	or	r6,r8,r6
 100a41c:	300cc03a 	cmpne	r6,r6,zero
 100a420:	0007883a 	mov	r3,zero
 100a424:	003f6106 	br	100a1ac <__adddf3+0x15c>
 100a428:	2000921e 	bne	r4,zero,100a674 <__adddf3+0x624>
 100a42c:	80800044 	addi	r2,r16,1
 100a430:	11c1ffcc 	andi	r7,r2,2047
 100a434:	01000044 	movi	r4,1
 100a438:	21c0610e 	bge	r4,r7,100a5c0 <__adddf3+0x570>
 100a43c:	0101ffc4 	movi	r4,2047
 100a440:	1100a326 	beq	r2,r4,100a6d0 <__adddf3+0x680>
 100a444:	344d883a 	add	r6,r6,r17
 100a448:	3463803a 	cmpltu	r17,r6,r17
 100a44c:	414b883a 	add	r5,r8,r5
 100a450:	2c4b883a 	add	r5,r5,r17
 100a454:	282297fa 	slli	r17,r5,31
 100a458:	300cd07a 	srli	r6,r6,1
 100a45c:	280ad07a 	srli	r5,r5,1
 100a460:	1021883a 	mov	r16,r2
 100a464:	89a2b03a 	or	r17,r17,r6
 100a468:	003f1806 	br	100a0cc <__adddf3+0x7c>
 100a46c:	0081ffc4 	movi	r2,2047
 100a470:	80bf411e 	bne	r16,r2,100a178 <__adddf3+0x128>
 100a474:	003f1506 	br	100a0cc <__adddf3+0x7c>
 100a478:	80bff844 	addi	r2,r16,-31
 100a47c:	00c00804 	movi	r3,32
 100a480:	9884d83a 	srl	r2,r19,r2
 100a484:	28c04a26 	beq	r5,r3,100a5b0 <__adddf3+0x560>
 100a488:	00c00fc4 	movi	r3,63
 100a48c:	1c21c83a 	sub	r16,r3,r16
 100a490:	9c26983a 	sll	r19,r19,r16
 100a494:	9c62b03a 	or	r17,r19,r17
 100a498:	8822c03a 	cmpne	r17,r17,zero
 100a49c:	88a2b03a 	or	r17,r17,r2
 100a4a0:	000b883a 	mov	r5,zero
 100a4a4:	0021883a 	mov	r16,zero
 100a4a8:	003fb406 	br	100a37c <__adddf3+0x32c>
 100a4ac:	18bff804 	addi	r2,r3,-32
 100a4b0:	01000804 	movi	r4,32
 100a4b4:	4084d83a 	srl	r2,r8,r2
 100a4b8:	19003f26 	beq	r3,r4,100a5b8 <__adddf3+0x568>
 100a4bc:	01001004 	movi	r4,64
 100a4c0:	20c7c83a 	sub	r3,r4,r3
 100a4c4:	40d0983a 	sll	r8,r8,r3
 100a4c8:	418cb03a 	or	r6,r8,r6
 100a4cc:	300cc03a 	cmpne	r6,r6,zero
 100a4d0:	308cb03a 	or	r6,r6,r2
 100a4d4:	0007883a 	mov	r3,zero
 100a4d8:	003f3406 	br	100a1ac <__adddf3+0x15c>
 100a4dc:	80002326 	beq	r16,zero,100a56c <__adddf3+0x51c>
 100a4e0:	0101ffc4 	movi	r4,2047
 100a4e4:	11005e26 	beq	r2,r4,100a660 <__adddf3+0x610>
 100a4e8:	00c7c83a 	sub	r3,zero,r3
 100a4ec:	29402034 	orhi	r5,r5,128
 100a4f0:	01000e04 	movi	r4,56
 100a4f4:	20c07216 	blt	r4,r3,100a6c0 <__adddf3+0x670>
 100a4f8:	010007c4 	movi	r4,31
 100a4fc:	20c0ce16 	blt	r4,r3,100a838 <__adddf3+0x7e8>
 100a500:	01000804 	movi	r4,32
 100a504:	20c9c83a 	sub	r4,r4,r3
 100a508:	2914983a 	sll	r10,r5,r4
 100a50c:	88d2d83a 	srl	r9,r17,r3
 100a510:	8908983a 	sll	r4,r17,r4
 100a514:	28c6d83a 	srl	r3,r5,r3
 100a518:	5262b03a 	or	r17,r10,r9
 100a51c:	2008c03a 	cmpne	r4,r4,zero
 100a520:	8922b03a 	or	r17,r17,r4
 100a524:	3463c83a 	sub	r17,r6,r17
 100a528:	40c7c83a 	sub	r3,r8,r3
 100a52c:	344d803a 	cmpltu	r6,r6,r17
 100a530:	198bc83a 	sub	r5,r3,r6
 100a534:	1021883a 	mov	r16,r2
 100a538:	3825883a 	mov	r18,r7
 100a53c:	003f2006 	br	100a1c0 <__adddf3+0x170>
 100a540:	9886b03a 	or	r3,r19,r2
 100a544:	1800141e 	bne	r3,zero,100a598 <__adddf3+0x548>
 100a548:	0007883a 	mov	r3,zero
 100a54c:	000b883a 	mov	r5,zero
 100a550:	0023883a 	mov	r17,zero
 100a554:	0021883a 	mov	r16,zero
 100a558:	003f3c06 	br	100a24c <__adddf3+0x1fc>
 100a55c:	418cb03a 	or	r6,r8,r6
 100a560:	300cc03a 	cmpne	r6,r6,zero
 100a564:	0011883a 	mov	r8,zero
 100a568:	003f5606 	br	100a2c4 <__adddf3+0x274>
 100a56c:	2c48b03a 	or	r4,r5,r17
 100a570:	20003b26 	beq	r4,zero,100a660 <__adddf3+0x610>
 100a574:	00c6303a 	nor	r3,zero,r3
 100a578:	1800371e 	bne	r3,zero,100a658 <__adddf3+0x608>
 100a57c:	3463c83a 	sub	r17,r6,r17
 100a580:	414bc83a 	sub	r5,r8,r5
 100a584:	344d803a 	cmpltu	r6,r6,r17
 100a588:	298bc83a 	sub	r5,r5,r6
 100a58c:	1021883a 	mov	r16,r2
 100a590:	3825883a 	mov	r18,r7
 100a594:	003f0a06 	br	100a1c0 <__adddf3+0x170>
 100a598:	1023883a 	mov	r17,r2
 100a59c:	003f0d06 	br	100a1d4 <__adddf3+0x184>
 100a5a0:	0007883a 	mov	r3,zero
 100a5a4:	000b883a 	mov	r5,zero
 100a5a8:	0023883a 	mov	r17,zero
 100a5ac:	003f2706 	br	100a24c <__adddf3+0x1fc>
 100a5b0:	0027883a 	mov	r19,zero
 100a5b4:	003fb706 	br	100a494 <__adddf3+0x444>
 100a5b8:	0011883a 	mov	r8,zero
 100a5bc:	003fc206 	br	100a4c8 <__adddf3+0x478>
 100a5c0:	2c44b03a 	or	r2,r5,r17
 100a5c4:	8000871e 	bne	r16,zero,100a7e4 <__adddf3+0x794>
 100a5c8:	1000b126 	beq	r2,zero,100a890 <__adddf3+0x840>
 100a5cc:	4184b03a 	or	r2,r8,r6
 100a5d0:	103ebe26 	beq	r2,zero,100a0cc <__adddf3+0x7c>
 100a5d4:	3445883a 	add	r2,r6,r17
 100a5d8:	1463803a 	cmpltu	r17,r2,r17
 100a5dc:	414b883a 	add	r5,r8,r5
 100a5e0:	2c4b883a 	add	r5,r5,r17
 100a5e4:	28c0202c 	andhi	r3,r5,128
 100a5e8:	1023883a 	mov	r17,r2
 100a5ec:	183f6326 	beq	r3,zero,100a37c <__adddf3+0x32c>
 100a5f0:	00bfe034 	movhi	r2,65408
 100a5f4:	10bfffc4 	addi	r2,r2,-1
 100a5f8:	2021883a 	mov	r16,r4
 100a5fc:	288a703a 	and	r5,r5,r2
 100a600:	003eb206 	br	100a0cc <__adddf3+0x7c>
 100a604:	2c44b03a 	or	r2,r5,r17
 100a608:	8000251e 	bne	r16,zero,100a6a0 <__adddf3+0x650>
 100a60c:	10004b1e 	bne	r2,zero,100a73c <__adddf3+0x6ec>
 100a610:	4184b03a 	or	r2,r8,r6
 100a614:	103fe226 	beq	r2,zero,100a5a0 <__adddf3+0x550>
 100a618:	400b883a 	mov	r5,r8
 100a61c:	3023883a 	mov	r17,r6
 100a620:	3825883a 	mov	r18,r7
 100a624:	003ea906 	br	100a0cc <__adddf3+0x7c>
 100a628:	20bff804 	addi	r2,r4,-32
 100a62c:	01c00804 	movi	r7,32
 100a630:	4084d83a 	srl	r2,r8,r2
 100a634:	21c07e26 	beq	r4,r7,100a830 <__adddf3+0x7e0>
 100a638:	01c01004 	movi	r7,64
 100a63c:	3909c83a 	sub	r4,r7,r4
 100a640:	4110983a 	sll	r8,r8,r4
 100a644:	418cb03a 	or	r6,r8,r6
 100a648:	300cc03a 	cmpne	r6,r6,zero
 100a64c:	308cb03a 	or	r6,r6,r2
 100a650:	0011883a 	mov	r8,zero
 100a654:	003f1b06 	br	100a2c4 <__adddf3+0x274>
 100a658:	0101ffc4 	movi	r4,2047
 100a65c:	113fa41e 	bne	r2,r4,100a4f0 <__adddf3+0x4a0>
 100a660:	400b883a 	mov	r5,r8
 100a664:	3023883a 	mov	r17,r6
 100a668:	1021883a 	mov	r16,r2
 100a66c:	3825883a 	mov	r18,r7
 100a670:	003e9606 	br	100a0cc <__adddf3+0x7c>
 100a674:	80001a1e 	bne	r16,zero,100a6e0 <__adddf3+0x690>
 100a678:	2c4eb03a 	or	r7,r5,r17
 100a67c:	38005526 	beq	r7,zero,100a7d4 <__adddf3+0x784>
 100a680:	0108303a 	nor	r4,zero,r4
 100a684:	2000511e 	bne	r4,zero,100a7cc <__adddf3+0x77c>
 100a688:	89a3883a 	add	r17,r17,r6
 100a68c:	414b883a 	add	r5,r8,r5
 100a690:	898d803a 	cmpltu	r6,r17,r6
 100a694:	298b883a 	add	r5,r5,r6
 100a698:	1021883a 	mov	r16,r2
 100a69c:	003f0e06 	br	100a2d8 <__adddf3+0x288>
 100a6a0:	1000341e 	bne	r2,zero,100a774 <__adddf3+0x724>
 100a6a4:	4184b03a 	or	r2,r8,r6
 100a6a8:	10006f26 	beq	r2,zero,100a868 <__adddf3+0x818>
 100a6ac:	400b883a 	mov	r5,r8
 100a6b0:	3023883a 	mov	r17,r6
 100a6b4:	3825883a 	mov	r18,r7
 100a6b8:	0401ffc4 	movi	r16,2047
 100a6bc:	003e8306 	br	100a0cc <__adddf3+0x7c>
 100a6c0:	2c62b03a 	or	r17,r5,r17
 100a6c4:	8822c03a 	cmpne	r17,r17,zero
 100a6c8:	0007883a 	mov	r3,zero
 100a6cc:	003f9506 	br	100a524 <__adddf3+0x4d4>
 100a6d0:	1021883a 	mov	r16,r2
 100a6d4:	000b883a 	mov	r5,zero
 100a6d8:	0023883a 	mov	r17,zero
 100a6dc:	003edb06 	br	100a24c <__adddf3+0x1fc>
 100a6e0:	01c1ffc4 	movi	r7,2047
 100a6e4:	11c03b26 	beq	r2,r7,100a7d4 <__adddf3+0x784>
 100a6e8:	0109c83a 	sub	r4,zero,r4
 100a6ec:	29402034 	orhi	r5,r5,128
 100a6f0:	01c00e04 	movi	r7,56
 100a6f4:	39006216 	blt	r7,r4,100a880 <__adddf3+0x830>
 100a6f8:	01c007c4 	movi	r7,31
 100a6fc:	39006b16 	blt	r7,r4,100a8ac <__adddf3+0x85c>
 100a700:	01c00804 	movi	r7,32
 100a704:	390fc83a 	sub	r7,r7,r4
 100a708:	29d4983a 	sll	r10,r5,r7
 100a70c:	8912d83a 	srl	r9,r17,r4
 100a710:	89ce983a 	sll	r7,r17,r7
 100a714:	2908d83a 	srl	r4,r5,r4
 100a718:	5262b03a 	or	r17,r10,r9
 100a71c:	380ac03a 	cmpne	r5,r7,zero
 100a720:	8962b03a 	or	r17,r17,r5
 100a724:	89a3883a 	add	r17,r17,r6
 100a728:	2211883a 	add	r8,r4,r8
 100a72c:	898d803a 	cmpltu	r6,r17,r6
 100a730:	418b883a 	add	r5,r8,r6
 100a734:	1021883a 	mov	r16,r2
 100a738:	003ee706 	br	100a2d8 <__adddf3+0x288>
 100a73c:	4184b03a 	or	r2,r8,r6
 100a740:	103e6226 	beq	r2,zero,100a0cc <__adddf3+0x7c>
 100a744:	8987c83a 	sub	r3,r17,r6
 100a748:	88c9803a 	cmpltu	r4,r17,r3
 100a74c:	2a05c83a 	sub	r2,r5,r8
 100a750:	1105c83a 	sub	r2,r2,r4
 100a754:	1100202c 	andhi	r4,r2,128
 100a758:	203f0426 	beq	r4,zero,100a36c <__adddf3+0x31c>
 100a75c:	3463c83a 	sub	r17,r6,r17
 100a760:	414bc83a 	sub	r5,r8,r5
 100a764:	344d803a 	cmpltu	r6,r6,r17
 100a768:	298bc83a 	sub	r5,r5,r6
 100a76c:	3825883a 	mov	r18,r7
 100a770:	003e5606 	br	100a0cc <__adddf3+0x7c>
 100a774:	4184b03a 	or	r2,r8,r6
 100a778:	10002b26 	beq	r2,zero,100a828 <__adddf3+0x7d8>
 100a77c:	2804d0fa 	srli	r2,r5,3
 100a780:	8822d0fa 	srli	r17,r17,3
 100a784:	280a977a 	slli	r5,r5,29
 100a788:	10c0022c 	andhi	r3,r2,8
 100a78c:	2c62b03a 	or	r17,r5,r17
 100a790:	18000826 	beq	r3,zero,100a7b4 <__adddf3+0x764>
 100a794:	4008d0fa 	srli	r4,r8,3
 100a798:	20c0022c 	andhi	r3,r4,8
 100a79c:	1800051e 	bne	r3,zero,100a7b4 <__adddf3+0x764>
 100a7a0:	300cd0fa 	srli	r6,r6,3
 100a7a4:	4010977a 	slli	r8,r8,29
 100a7a8:	2005883a 	mov	r2,r4
 100a7ac:	3825883a 	mov	r18,r7
 100a7b0:	41a2b03a 	or	r17,r8,r6
 100a7b4:	880ad77a 	srli	r5,r17,29
 100a7b8:	100490fa 	slli	r2,r2,3
 100a7bc:	882290fa 	slli	r17,r17,3
 100a7c0:	0401ffc4 	movi	r16,2047
 100a7c4:	288ab03a 	or	r5,r5,r2
 100a7c8:	003e4006 	br	100a0cc <__adddf3+0x7c>
 100a7cc:	01c1ffc4 	movi	r7,2047
 100a7d0:	11ffc71e 	bne	r2,r7,100a6f0 <__adddf3+0x6a0>
 100a7d4:	400b883a 	mov	r5,r8
 100a7d8:	3023883a 	mov	r17,r6
 100a7dc:	1021883a 	mov	r16,r2
 100a7e0:	003e3a06 	br	100a0cc <__adddf3+0x7c>
 100a7e4:	10002d26 	beq	r2,zero,100a89c <__adddf3+0x84c>
 100a7e8:	4184b03a 	or	r2,r8,r6
 100a7ec:	10000e26 	beq	r2,zero,100a828 <__adddf3+0x7d8>
 100a7f0:	2804d0fa 	srli	r2,r5,3
 100a7f4:	8822d0fa 	srli	r17,r17,3
 100a7f8:	280a977a 	slli	r5,r5,29
 100a7fc:	10c0022c 	andhi	r3,r2,8
 100a800:	2c62b03a 	or	r17,r5,r17
 100a804:	183feb26 	beq	r3,zero,100a7b4 <__adddf3+0x764>
 100a808:	4008d0fa 	srli	r4,r8,3
 100a80c:	20c0022c 	andhi	r3,r4,8
 100a810:	183fe81e 	bne	r3,zero,100a7b4 <__adddf3+0x764>
 100a814:	300cd0fa 	srli	r6,r6,3
 100a818:	4010977a 	slli	r8,r8,29
 100a81c:	2005883a 	mov	r2,r4
 100a820:	41a2b03a 	or	r17,r8,r6
 100a824:	003fe306 	br	100a7b4 <__adddf3+0x764>
 100a828:	0401ffc4 	movi	r16,2047
 100a82c:	003e2706 	br	100a0cc <__adddf3+0x7c>
 100a830:	0011883a 	mov	r8,zero
 100a834:	003f8306 	br	100a644 <__adddf3+0x5f4>
 100a838:	193ff804 	addi	r4,r3,-32
 100a83c:	02400804 	movi	r9,32
 100a840:	2908d83a 	srl	r4,r5,r4
 100a844:	1a402526 	beq	r3,r9,100a8dc <__adddf3+0x88c>
 100a848:	02401004 	movi	r9,64
 100a84c:	48c7c83a 	sub	r3,r9,r3
 100a850:	28ca983a 	sll	r5,r5,r3
 100a854:	2c62b03a 	or	r17,r5,r17
 100a858:	8822c03a 	cmpne	r17,r17,zero
 100a85c:	8922b03a 	or	r17,r17,r4
 100a860:	0007883a 	mov	r3,zero
 100a864:	003f2f06 	br	100a524 <__adddf3+0x4d4>
 100a868:	01402034 	movhi	r5,128
 100a86c:	0007883a 	mov	r3,zero
 100a870:	297fffc4 	addi	r5,r5,-1
 100a874:	047ffe04 	movi	r17,-8
 100a878:	0401ffc4 	movi	r16,2047
 100a87c:	003e7306 	br	100a24c <__adddf3+0x1fc>
 100a880:	2c62b03a 	or	r17,r5,r17
 100a884:	8822c03a 	cmpne	r17,r17,zero
 100a888:	0009883a 	mov	r4,zero
 100a88c:	003fa506 	br	100a724 <__adddf3+0x6d4>
 100a890:	400b883a 	mov	r5,r8
 100a894:	3023883a 	mov	r17,r6
 100a898:	003e0c06 	br	100a0cc <__adddf3+0x7c>
 100a89c:	400b883a 	mov	r5,r8
 100a8a0:	3023883a 	mov	r17,r6
 100a8a4:	0401ffc4 	movi	r16,2047
 100a8a8:	003e0806 	br	100a0cc <__adddf3+0x7c>
 100a8ac:	21fff804 	addi	r7,r4,-32
 100a8b0:	02400804 	movi	r9,32
 100a8b4:	29ced83a 	srl	r7,r5,r7
 100a8b8:	22400a26 	beq	r4,r9,100a8e4 <__adddf3+0x894>
 100a8bc:	02401004 	movi	r9,64
 100a8c0:	4909c83a 	sub	r4,r9,r4
 100a8c4:	290a983a 	sll	r5,r5,r4
 100a8c8:	2c62b03a 	or	r17,r5,r17
 100a8cc:	8822c03a 	cmpne	r17,r17,zero
 100a8d0:	89e2b03a 	or	r17,r17,r7
 100a8d4:	0009883a 	mov	r4,zero
 100a8d8:	003f9206 	br	100a724 <__adddf3+0x6d4>
 100a8dc:	000b883a 	mov	r5,zero
 100a8e0:	003fdc06 	br	100a854 <__adddf3+0x804>
 100a8e4:	000b883a 	mov	r5,zero
 100a8e8:	003ff706 	br	100a8c8 <__adddf3+0x878>

0100a8ec <__divdf3>:
 100a8ec:	defff204 	addi	sp,sp,-56
 100a8f0:	dd000815 	stw	r20,32(sp)
 100a8f4:	2828d53a 	srli	r20,r5,20
 100a8f8:	dd800a15 	stw	r22,40(sp)
 100a8fc:	282cd7fa 	srli	r22,r5,31
 100a900:	dc000415 	stw	r16,16(sp)
 100a904:	04000434 	movhi	r16,16
 100a908:	df000c15 	stw	fp,48(sp)
 100a90c:	dcc00715 	stw	r19,28(sp)
 100a910:	dc800615 	stw	r18,24(sp)
 100a914:	dc400515 	stw	r17,20(sp)
 100a918:	843fffc4 	addi	r16,r16,-1
 100a91c:	dfc00d15 	stw	ra,52(sp)
 100a920:	ddc00b15 	stw	r23,44(sp)
 100a924:	dd400915 	stw	r21,36(sp)
 100a928:	a501ffcc 	andi	r20,r20,2047
 100a92c:	2025883a 	mov	r18,r4
 100a930:	2027883a 	mov	r19,r4
 100a934:	2c22703a 	and	r17,r5,r16
 100a938:	b7003fcc 	andi	fp,r22,255
 100a93c:	a0005e26 	beq	r20,zero,100aab8 <__divdf3+0x1cc>
 100a940:	0081ffc4 	movi	r2,2047
 100a944:	a0803526 	beq	r20,r2,100aa1c <__divdf3+0x130>
 100a948:	8c000434 	orhi	r16,r17,16
 100a94c:	2004d77a 	srli	r2,r4,29
 100a950:	802090fa 	slli	r16,r16,3
 100a954:	202690fa 	slli	r19,r4,3
 100a958:	a53f0044 	addi	r20,r20,-1023
 100a95c:	80a2b03a 	or	r17,r16,r2
 100a960:	0025883a 	mov	r18,zero
 100a964:	0011883a 	mov	r8,zero
 100a968:	380ad53a 	srli	r5,r7,20
 100a96c:	382ed7fa 	srli	r23,r7,31
 100a970:	04000434 	movhi	r16,16
 100a974:	843fffc4 	addi	r16,r16,-1
 100a978:	2941ffcc 	andi	r5,r5,2047
 100a97c:	302b883a 	mov	r21,r6
 100a980:	3c20703a 	and	r16,r7,r16
 100a984:	ba403fcc 	andi	r9,r23,255
 100a988:	28006726 	beq	r5,zero,100ab28 <__divdf3+0x23c>
 100a98c:	0081ffc4 	movi	r2,2047
 100a990:	28805f26 	beq	r5,r2,100ab10 <__divdf3+0x224>
 100a994:	84000434 	orhi	r16,r16,16
 100a998:	3004d77a 	srli	r2,r6,29
 100a99c:	802090fa 	slli	r16,r16,3
 100a9a0:	302a90fa 	slli	r21,r6,3
 100a9a4:	297f0044 	addi	r5,r5,-1023
 100a9a8:	80a0b03a 	or	r16,r16,r2
 100a9ac:	000f883a 	mov	r7,zero
 100a9b0:	3c86b03a 	or	r3,r7,r18
 100a9b4:	180690ba 	slli	r3,r3,2
 100a9b8:	00804074 	movhi	r2,257
 100a9bc:	10aa7704 	addi	r2,r2,-22052
 100a9c0:	1887883a 	add	r3,r3,r2
 100a9c4:	18c00017 	ldw	r3,0(r3)
 100a9c8:	b5c8f03a 	xor	r4,r22,r23
 100a9cc:	200d883a 	mov	r6,r4
 100a9d0:	24803fcc 	andi	r18,r4,255
 100a9d4:	a169c83a 	sub	r20,r20,r5
 100a9d8:	1800683a 	jmp	r3
 100a9dc:	0100ac24 	muli	r4,zero,688
 100a9e0:	0100aa54 	movui	r4,681
 100a9e4:	0100abe8 	cmpgeui	r4,zero,687
 100a9e8:	0100aa38 	rdprs	r4,zero,680
 100a9ec:	0100abe8 	cmpgeui	r4,zero,687
 100a9f0:	0100abbc 	xorhi	r4,zero,686
 100a9f4:	0100abe8 	cmpgeui	r4,zero,687
 100a9f8:	0100aa38 	rdprs	r4,zero,680
 100a9fc:	0100aa54 	movui	r4,681
 100aa00:	0100aa54 	movui	r4,681
 100aa04:	0100abbc 	xorhi	r4,zero,686
 100aa08:	0100aa38 	rdprs	r4,zero,680
 100aa0c:	0100aa48 	cmpgei	r4,zero,681
 100aa10:	0100aa48 	cmpgei	r4,zero,681
 100aa14:	0100aa48 	cmpgei	r4,zero,681
 100aa18:	0100abf8 	rdprs	r4,zero,687
 100aa1c:	8904b03a 	or	r2,r17,r4
 100aa20:	1000631e 	bne	r2,zero,100abb0 <__divdf3+0x2c4>
 100aa24:	04800204 	movi	r18,8
 100aa28:	0023883a 	mov	r17,zero
 100aa2c:	0027883a 	mov	r19,zero
 100aa30:	02000084 	movi	r8,2
 100aa34:	003fcc06 	br	100a968 <__divdf3+0x7c>
 100aa38:	8023883a 	mov	r17,r16
 100aa3c:	a827883a 	mov	r19,r21
 100aa40:	4839883a 	mov	fp,r9
 100aa44:	3811883a 	mov	r8,r7
 100aa48:	00800084 	movi	r2,2
 100aa4c:	40812a1e 	bne	r8,r2,100aef8 <__divdf3+0x60c>
 100aa50:	e025883a 	mov	r18,fp
 100aa54:	9180004c 	andi	r6,r18,1
 100aa58:	0101ffc4 	movi	r4,2047
 100aa5c:	000b883a 	mov	r5,zero
 100aa60:	0027883a 	mov	r19,zero
 100aa64:	2008953a 	slli	r4,r4,20
 100aa68:	30c03fcc 	andi	r3,r6,255
 100aa6c:	04000434 	movhi	r16,16
 100aa70:	180697fa 	slli	r3,r3,31
 100aa74:	843fffc4 	addi	r16,r16,-1
 100aa78:	2c20703a 	and	r16,r5,r16
 100aa7c:	8120b03a 	or	r16,r16,r4
 100aa80:	80c6b03a 	or	r3,r16,r3
 100aa84:	9805883a 	mov	r2,r19
 100aa88:	dfc00d17 	ldw	ra,52(sp)
 100aa8c:	df000c17 	ldw	fp,48(sp)
 100aa90:	ddc00b17 	ldw	r23,44(sp)
 100aa94:	dd800a17 	ldw	r22,40(sp)
 100aa98:	dd400917 	ldw	r21,36(sp)
 100aa9c:	dd000817 	ldw	r20,32(sp)
 100aaa0:	dcc00717 	ldw	r19,28(sp)
 100aaa4:	dc800617 	ldw	r18,24(sp)
 100aaa8:	dc400517 	ldw	r17,20(sp)
 100aaac:	dc000417 	ldw	r16,16(sp)
 100aab0:	dec00e04 	addi	sp,sp,56
 100aab4:	f800283a 	ret
 100aab8:	8904b03a 	or	r2,r17,r4
 100aabc:	10003726 	beq	r2,zero,100ab9c <__divdf3+0x2b0>
 100aac0:	88011c26 	beq	r17,zero,100af34 <__divdf3+0x648>
 100aac4:	8809883a 	mov	r4,r17
 100aac8:	d9800315 	stw	r6,12(sp)
 100aacc:	d9c00115 	stw	r7,4(sp)
 100aad0:	100c5ec0 	call	100c5ec <__clzsi2>
 100aad4:	d9800317 	ldw	r6,12(sp)
 100aad8:	d9c00117 	ldw	r7,4(sp)
 100aadc:	1007883a 	mov	r3,r2
 100aae0:	01000a04 	movi	r4,40
 100aae4:	1cfffe04 	addi	r19,r3,-8
 100aae8:	20c9c83a 	sub	r4,r4,r3
 100aaec:	8cca983a 	sll	r5,r17,r19
 100aaf0:	9108d83a 	srl	r4,r18,r4
 100aaf4:	94e6983a 	sll	r19,r18,r19
 100aaf8:	2162b03a 	or	r17,r4,r5
 100aafc:	053f0344 	movi	r20,-1011
 100ab00:	a0e9c83a 	sub	r20,r20,r3
 100ab04:	0025883a 	mov	r18,zero
 100ab08:	0011883a 	mov	r8,zero
 100ab0c:	003f9606 	br	100a968 <__divdf3+0x7c>
 100ab10:	8184b03a 	or	r2,r16,r6
 100ab14:	10001f1e 	bne	r2,zero,100ab94 <__divdf3+0x2a8>
 100ab18:	0021883a 	mov	r16,zero
 100ab1c:	002b883a 	mov	r21,zero
 100ab20:	01c00084 	movi	r7,2
 100ab24:	003fa206 	br	100a9b0 <__divdf3+0xc4>
 100ab28:	8184b03a 	or	r2,r16,r6
 100ab2c:	10001526 	beq	r2,zero,100ab84 <__divdf3+0x298>
 100ab30:	80010c26 	beq	r16,zero,100af64 <__divdf3+0x678>
 100ab34:	8009883a 	mov	r4,r16
 100ab38:	d9800315 	stw	r6,12(sp)
 100ab3c:	da000215 	stw	r8,8(sp)
 100ab40:	da400015 	stw	r9,0(sp)
 100ab44:	100c5ec0 	call	100c5ec <__clzsi2>
 100ab48:	d9800317 	ldw	r6,12(sp)
 100ab4c:	da000217 	ldw	r8,8(sp)
 100ab50:	da400017 	ldw	r9,0(sp)
 100ab54:	1007883a 	mov	r3,r2
 100ab58:	01000a04 	movi	r4,40
 100ab5c:	1d7ffe04 	addi	r21,r3,-8
 100ab60:	20c9c83a 	sub	r4,r4,r3
 100ab64:	8560983a 	sll	r16,r16,r21
 100ab68:	3108d83a 	srl	r4,r6,r4
 100ab6c:	356a983a 	sll	r21,r6,r21
 100ab70:	2420b03a 	or	r16,r4,r16
 100ab74:	017f0344 	movi	r5,-1011
 100ab78:	28cbc83a 	sub	r5,r5,r3
 100ab7c:	000f883a 	mov	r7,zero
 100ab80:	003f8b06 	br	100a9b0 <__divdf3+0xc4>
 100ab84:	0021883a 	mov	r16,zero
 100ab88:	002b883a 	mov	r21,zero
 100ab8c:	01c00044 	movi	r7,1
 100ab90:	003f8706 	br	100a9b0 <__divdf3+0xc4>
 100ab94:	01c000c4 	movi	r7,3
 100ab98:	003f8506 	br	100a9b0 <__divdf3+0xc4>
 100ab9c:	04800104 	movi	r18,4
 100aba0:	0023883a 	mov	r17,zero
 100aba4:	0027883a 	mov	r19,zero
 100aba8:	02000044 	movi	r8,1
 100abac:	003f6e06 	br	100a968 <__divdf3+0x7c>
 100abb0:	04800304 	movi	r18,12
 100abb4:	020000c4 	movi	r8,3
 100abb8:	003f6b06 	br	100a968 <__divdf3+0x7c>
 100abbc:	01400434 	movhi	r5,16
 100abc0:	000d883a 	mov	r6,zero
 100abc4:	297fffc4 	addi	r5,r5,-1
 100abc8:	04ffffc4 	movi	r19,-1
 100abcc:	0101ffc4 	movi	r4,2047
 100abd0:	003fa406 	br	100aa64 <__divdf3+0x178>
 100abd4:	043f0084 	movi	r16,-1022
 100abd8:	8521c83a 	sub	r16,r16,r20
 100abdc:	00800e04 	movi	r2,56
 100abe0:	1401200e 	bge	r2,r16,100b064 <__divdf3+0x778>
 100abe4:	9180004c 	andi	r6,r18,1
 100abe8:	0009883a 	mov	r4,zero
 100abec:	000b883a 	mov	r5,zero
 100abf0:	0027883a 	mov	r19,zero
 100abf4:	003f9b06 	br	100aa64 <__divdf3+0x178>
 100abf8:	8880022c 	andhi	r2,r17,8
 100abfc:	1000c726 	beq	r2,zero,100af1c <__divdf3+0x630>
 100ac00:	8080022c 	andhi	r2,r16,8
 100ac04:	1000c51e 	bne	r2,zero,100af1c <__divdf3+0x630>
 100ac08:	00800434 	movhi	r2,16
 100ac0c:	81400234 	orhi	r5,r16,8
 100ac10:	10bfffc4 	addi	r2,r2,-1
 100ac14:	b80d883a 	mov	r6,r23
 100ac18:	288a703a 	and	r5,r5,r2
 100ac1c:	a827883a 	mov	r19,r21
 100ac20:	003fea06 	br	100abcc <__divdf3+0x2e0>
 100ac24:	8440ea36 	bltu	r16,r17,100afd0 <__divdf3+0x6e4>
 100ac28:	8c00e826 	beq	r17,r16,100afcc <__divdf3+0x6e0>
 100ac2c:	a53fffc4 	addi	r20,r20,-1
 100ac30:	882d883a 	mov	r22,r17
 100ac34:	000d883a 	mov	r6,zero
 100ac38:	a804d63a 	srli	r2,r21,24
 100ac3c:	8020923a 	slli	r16,r16,8
 100ac40:	b009883a 	mov	r4,r22
 100ac44:	d9800315 	stw	r6,12(sp)
 100ac48:	1420b03a 	or	r16,r2,r16
 100ac4c:	802ed43a 	srli	r23,r16,16
 100ac50:	873fffcc 	andi	fp,r16,65535
 100ac54:	a82a923a 	slli	r21,r21,8
 100ac58:	b80b883a 	mov	r5,r23
 100ac5c:	100a0400 	call	100a040 <__udivsi3>
 100ac60:	b009883a 	mov	r4,r22
 100ac64:	b80b883a 	mov	r5,r23
 100ac68:	1023883a 	mov	r17,r2
 100ac6c:	100a0480 	call	100a048 <__umodsi3>
 100ac70:	1004943a 	slli	r2,r2,16
 100ac74:	9808d43a 	srli	r4,r19,16
 100ac78:	8f2d383a 	mul	r22,r17,fp
 100ac7c:	d9800317 	ldw	r6,12(sp)
 100ac80:	1106b03a 	or	r3,r2,r4
 100ac84:	1d80062e 	bgeu	r3,r22,100aca0 <__divdf3+0x3b4>
 100ac88:	1c07883a 	add	r3,r3,r16
 100ac8c:	88bfffc4 	addi	r2,r17,-1
 100ac90:	1c00dc36 	bltu	r3,r16,100b004 <__divdf3+0x718>
 100ac94:	1d80db2e 	bgeu	r3,r22,100b004 <__divdf3+0x718>
 100ac98:	8c7fff84 	addi	r17,r17,-2
 100ac9c:	1c07883a 	add	r3,r3,r16
 100aca0:	1dadc83a 	sub	r22,r3,r22
 100aca4:	b009883a 	mov	r4,r22
 100aca8:	b80b883a 	mov	r5,r23
 100acac:	d9800315 	stw	r6,12(sp)
 100acb0:	100a0400 	call	100a040 <__udivsi3>
 100acb4:	b009883a 	mov	r4,r22
 100acb8:	b80b883a 	mov	r5,r23
 100acbc:	d8800015 	stw	r2,0(sp)
 100acc0:	100a0480 	call	100a048 <__umodsi3>
 100acc4:	da400017 	ldw	r9,0(sp)
 100acc8:	1004943a 	slli	r2,r2,16
 100accc:	9cffffcc 	andi	r19,r19,65535
 100acd0:	4f07383a 	mul	r3,r9,fp
 100acd4:	14c8b03a 	or	r4,r2,r19
 100acd8:	d9800317 	ldw	r6,12(sp)
 100acdc:	20c0062e 	bgeu	r4,r3,100acf8 <__divdf3+0x40c>
 100ace0:	2409883a 	add	r4,r4,r16
 100ace4:	48bfffc4 	addi	r2,r9,-1
 100ace8:	2400c436 	bltu	r4,r16,100affc <__divdf3+0x710>
 100acec:	20c0c32e 	bgeu	r4,r3,100affc <__divdf3+0x710>
 100acf0:	4a7fff84 	addi	r9,r9,-2
 100acf4:	2409883a 	add	r4,r4,r16
 100acf8:	8822943a 	slli	r17,r17,16
 100acfc:	a80ed43a 	srli	r7,r21,16
 100ad00:	aa3fffcc 	andi	r8,r21,65535
 100ad04:	4c62b03a 	or	r17,r9,r17
 100ad08:	8816d43a 	srli	r11,r17,16
 100ad0c:	897fffcc 	andi	r5,r17,65535
 100ad10:	2a15383a 	mul	r10,r5,r8
 100ad14:	5a19383a 	mul	r12,r11,r8
 100ad18:	29cb383a 	mul	r5,r5,r7
 100ad1c:	5012d43a 	srli	r9,r10,16
 100ad20:	20c5c83a 	sub	r2,r4,r3
 100ad24:	614b883a 	add	r5,r12,r5
 100ad28:	2a4b883a 	add	r5,r5,r9
 100ad2c:	59c7383a 	mul	r3,r11,r7
 100ad30:	2b00022e 	bgeu	r5,r12,100ad3c <__divdf3+0x450>
 100ad34:	01000074 	movhi	r4,1
 100ad38:	1907883a 	add	r3,r3,r4
 100ad3c:	2808d43a 	srli	r4,r5,16
 100ad40:	280a943a 	slli	r5,r5,16
 100ad44:	54ffffcc 	andi	r19,r10,65535
 100ad48:	1907883a 	add	r3,r3,r4
 100ad4c:	2ccb883a 	add	r5,r5,r19
 100ad50:	10c09336 	bltu	r2,r3,100afa0 <__divdf3+0x6b4>
 100ad54:	10c0ad26 	beq	r2,r3,100b00c <__divdf3+0x720>
 100ad58:	10c7c83a 	sub	r3,r2,r3
 100ad5c:	3167c83a 	sub	r19,r6,r5
 100ad60:	34ed803a 	cmpltu	r22,r6,r19
 100ad64:	1dadc83a 	sub	r22,r3,r22
 100ad68:	b400b226 	beq	r22,r16,100b034 <__divdf3+0x748>
 100ad6c:	b009883a 	mov	r4,r22
 100ad70:	b80b883a 	mov	r5,r23
 100ad74:	d9c00115 	stw	r7,4(sp)
 100ad78:	da000215 	stw	r8,8(sp)
 100ad7c:	100a0400 	call	100a040 <__udivsi3>
 100ad80:	b009883a 	mov	r4,r22
 100ad84:	b80b883a 	mov	r5,r23
 100ad88:	d8800315 	stw	r2,12(sp)
 100ad8c:	100a0480 	call	100a048 <__umodsi3>
 100ad90:	d9800317 	ldw	r6,12(sp)
 100ad94:	1004943a 	slli	r2,r2,16
 100ad98:	9808d43a 	srli	r4,r19,16
 100ad9c:	372d383a 	mul	r22,r6,fp
 100ada0:	d9c00117 	ldw	r7,4(sp)
 100ada4:	1106b03a 	or	r3,r2,r4
 100ada8:	da000217 	ldw	r8,8(sp)
 100adac:	1d80062e 	bgeu	r3,r22,100adc8 <__divdf3+0x4dc>
 100adb0:	1c07883a 	add	r3,r3,r16
 100adb4:	30bfffc4 	addi	r2,r6,-1
 100adb8:	1c00a036 	bltu	r3,r16,100b03c <__divdf3+0x750>
 100adbc:	1d809f2e 	bgeu	r3,r22,100b03c <__divdf3+0x750>
 100adc0:	31bfff84 	addi	r6,r6,-2
 100adc4:	1c07883a 	add	r3,r3,r16
 100adc8:	1dadc83a 	sub	r22,r3,r22
 100adcc:	b009883a 	mov	r4,r22
 100add0:	b80b883a 	mov	r5,r23
 100add4:	d9800315 	stw	r6,12(sp)
 100add8:	d9c00115 	stw	r7,4(sp)
 100addc:	da000215 	stw	r8,8(sp)
 100ade0:	100a0400 	call	100a040 <__udivsi3>
 100ade4:	b009883a 	mov	r4,r22
 100ade8:	b80b883a 	mov	r5,r23
 100adec:	d8800015 	stw	r2,0(sp)
 100adf0:	100a0480 	call	100a048 <__umodsi3>
 100adf4:	da400017 	ldw	r9,0(sp)
 100adf8:	1004943a 	slli	r2,r2,16
 100adfc:	993fffcc 	andi	r4,r19,65535
 100ae00:	4f39383a 	mul	fp,r9,fp
 100ae04:	1106b03a 	or	r3,r2,r4
 100ae08:	d9800317 	ldw	r6,12(sp)
 100ae0c:	d9c00117 	ldw	r7,4(sp)
 100ae10:	da000217 	ldw	r8,8(sp)
 100ae14:	1f00062e 	bgeu	r3,fp,100ae30 <__divdf3+0x544>
 100ae18:	1c07883a 	add	r3,r3,r16
 100ae1c:	48bfffc4 	addi	r2,r9,-1
 100ae20:	1c008836 	bltu	r3,r16,100b044 <__divdf3+0x758>
 100ae24:	1f00872e 	bgeu	r3,fp,100b044 <__divdf3+0x758>
 100ae28:	4a7fff84 	addi	r9,r9,-2
 100ae2c:	1c07883a 	add	r3,r3,r16
 100ae30:	3008943a 	slli	r4,r6,16
 100ae34:	1f07c83a 	sub	r3,r3,fp
 100ae38:	4926b03a 	or	r19,r9,r4
 100ae3c:	993fffcc 	andi	r4,r19,65535
 100ae40:	980cd43a 	srli	r6,r19,16
 100ae44:	220b383a 	mul	r5,r4,r8
 100ae48:	21c5383a 	mul	r2,r4,r7
 100ae4c:	3211383a 	mul	r8,r6,r8
 100ae50:	2808d43a 	srli	r4,r5,16
 100ae54:	31cf383a 	mul	r7,r6,r7
 100ae58:	4085883a 	add	r2,r8,r2
 100ae5c:	1105883a 	add	r2,r2,r4
 100ae60:	1200022e 	bgeu	r2,r8,100ae6c <__divdf3+0x580>
 100ae64:	01000074 	movhi	r4,1
 100ae68:	390f883a 	add	r7,r7,r4
 100ae6c:	1008d43a 	srli	r4,r2,16
 100ae70:	1004943a 	slli	r2,r2,16
 100ae74:	297fffcc 	andi	r5,r5,65535
 100ae78:	390f883a 	add	r7,r7,r4
 100ae7c:	1145883a 	add	r2,r2,r5
 100ae80:	19c06536 	bltu	r3,r7,100b018 <__divdf3+0x72c>
 100ae84:	19c09f26 	beq	r3,r7,100b104 <__divdf3+0x818>
 100ae88:	9cc00054 	ori	r19,r19,1
 100ae8c:	a100ffc4 	addi	r4,r20,1023
 100ae90:	013f500e 	bge	zero,r4,100abd4 <__divdf3+0x2e8>
 100ae94:	988001cc 	andi	r2,r19,7
 100ae98:	10000726 	beq	r2,zero,100aeb8 <__divdf3+0x5cc>
 100ae9c:	98c003cc 	andi	r3,r19,15
 100aea0:	00800104 	movi	r2,4
 100aea4:	18800426 	beq	r3,r2,100aeb8 <__divdf3+0x5cc>
 100aea8:	9885883a 	add	r2,r19,r2
 100aeac:	14e1803a 	cmpltu	r16,r2,r19
 100aeb0:	8c23883a 	add	r17,r17,r16
 100aeb4:	1027883a 	mov	r19,r2
 100aeb8:	8880402c 	andhi	r2,r17,256
 100aebc:	10000426 	beq	r2,zero,100aed0 <__divdf3+0x5e4>
 100aec0:	00bfc034 	movhi	r2,65280
 100aec4:	10bfffc4 	addi	r2,r2,-1
 100aec8:	a1010004 	addi	r4,r20,1024
 100aecc:	88a2703a 	and	r17,r17,r2
 100aed0:	0081ff84 	movi	r2,2046
 100aed4:	113edf16 	blt	r2,r4,100aa54 <__divdf3+0x168>
 100aed8:	9826d0fa 	srli	r19,r19,3
 100aedc:	8804977a 	slli	r2,r17,29
 100aee0:	8820927a 	slli	r16,r17,9
 100aee4:	2101ffcc 	andi	r4,r4,2047
 100aee8:	14e6b03a 	or	r19,r2,r19
 100aeec:	800ad33a 	srli	r5,r16,12
 100aef0:	9180004c 	andi	r6,r18,1
 100aef4:	003edb06 	br	100aa64 <__divdf3+0x178>
 100aef8:	008000c4 	movi	r2,3
 100aefc:	4080a826 	beq	r8,r2,100b1a0 <__divdf3+0x8b4>
 100af00:	00800044 	movi	r2,1
 100af04:	4080551e 	bne	r8,r2,100b05c <__divdf3+0x770>
 100af08:	e00d883a 	mov	r6,fp
 100af0c:	0009883a 	mov	r4,zero
 100af10:	000b883a 	mov	r5,zero
 100af14:	0027883a 	mov	r19,zero
 100af18:	003ed206 	br	100aa64 <__divdf3+0x178>
 100af1c:	00800434 	movhi	r2,16
 100af20:	89400234 	orhi	r5,r17,8
 100af24:	10bfffc4 	addi	r2,r2,-1
 100af28:	b00d883a 	mov	r6,r22
 100af2c:	288a703a 	and	r5,r5,r2
 100af30:	003f2606 	br	100abcc <__divdf3+0x2e0>
 100af34:	d9800315 	stw	r6,12(sp)
 100af38:	d9c00115 	stw	r7,4(sp)
 100af3c:	100c5ec0 	call	100c5ec <__clzsi2>
 100af40:	10c00804 	addi	r3,r2,32
 100af44:	010009c4 	movi	r4,39
 100af48:	d9800317 	ldw	r6,12(sp)
 100af4c:	d9c00117 	ldw	r7,4(sp)
 100af50:	20fee30e 	bge	r4,r3,100aae0 <__divdf3+0x1f4>
 100af54:	117ffe04 	addi	r5,r2,-8
 100af58:	9162983a 	sll	r17,r18,r5
 100af5c:	0027883a 	mov	r19,zero
 100af60:	003ee606 	br	100aafc <__divdf3+0x210>
 100af64:	3009883a 	mov	r4,r6
 100af68:	d9800315 	stw	r6,12(sp)
 100af6c:	da000215 	stw	r8,8(sp)
 100af70:	da400015 	stw	r9,0(sp)
 100af74:	100c5ec0 	call	100c5ec <__clzsi2>
 100af78:	10c00804 	addi	r3,r2,32
 100af7c:	010009c4 	movi	r4,39
 100af80:	d9800317 	ldw	r6,12(sp)
 100af84:	da000217 	ldw	r8,8(sp)
 100af88:	da400017 	ldw	r9,0(sp)
 100af8c:	20fef20e 	bge	r4,r3,100ab58 <__divdf3+0x26c>
 100af90:	10bffe04 	addi	r2,r2,-8
 100af94:	a8a0983a 	sll	r16,r21,r2
 100af98:	002b883a 	mov	r21,zero
 100af9c:	003ef506 	br	100ab74 <__divdf3+0x288>
 100afa0:	354d883a 	add	r6,r6,r21
 100afa4:	3549803a 	cmpltu	r4,r6,r21
 100afa8:	2409883a 	add	r4,r4,r16
 100afac:	2089883a 	add	r4,r4,r2
 100afb0:	88bfffc4 	addi	r2,r17,-1
 100afb4:	81000c2e 	bgeu	r16,r4,100afe8 <__divdf3+0x6fc>
 100afb8:	20c04436 	bltu	r4,r3,100b0cc <__divdf3+0x7e0>
 100afbc:	19006f26 	beq	r3,r4,100b17c <__divdf3+0x890>
 100afc0:	20c7c83a 	sub	r3,r4,r3
 100afc4:	1023883a 	mov	r17,r2
 100afc8:	003f6406 	br	100ad5c <__divdf3+0x470>
 100afcc:	9d7f1736 	bltu	r19,r21,100ac2c <__divdf3+0x340>
 100afd0:	9806d07a 	srli	r3,r19,1
 100afd4:	880497fa 	slli	r2,r17,31
 100afd8:	980c97fa 	slli	r6,r19,31
 100afdc:	882cd07a 	srli	r22,r17,1
 100afe0:	18a6b03a 	or	r19,r3,r2
 100afe4:	003f1406 	br	100ac38 <__divdf3+0x34c>
 100afe8:	243ff51e 	bne	r4,r16,100afc0 <__divdf3+0x6d4>
 100afec:	357ff22e 	bgeu	r6,r21,100afb8 <__divdf3+0x6cc>
 100aff0:	80c7c83a 	sub	r3,r16,r3
 100aff4:	1023883a 	mov	r17,r2
 100aff8:	003f5806 	br	100ad5c <__divdf3+0x470>
 100affc:	1013883a 	mov	r9,r2
 100b000:	003f3d06 	br	100acf8 <__divdf3+0x40c>
 100b004:	1023883a 	mov	r17,r2
 100b008:	003f2506 	br	100aca0 <__divdf3+0x3b4>
 100b00c:	317fe436 	bltu	r6,r5,100afa0 <__divdf3+0x6b4>
 100b010:	0007883a 	mov	r3,zero
 100b014:	003f5106 	br	100ad5c <__divdf3+0x470>
 100b018:	1c07883a 	add	r3,r3,r16
 100b01c:	993fffc4 	addi	r4,r19,-1
 100b020:	1c000a2e 	bgeu	r3,r16,100b04c <__divdf3+0x760>
 100b024:	2027883a 	mov	r19,r4
 100b028:	19ff971e 	bne	r3,r7,100ae88 <__divdf3+0x59c>
 100b02c:	a8bf961e 	bne	r21,r2,100ae88 <__divdf3+0x59c>
 100b030:	003f9606 	br	100ae8c <__divdf3+0x5a0>
 100b034:	04ffffc4 	movi	r19,-1
 100b038:	003f9406 	br	100ae8c <__divdf3+0x5a0>
 100b03c:	100d883a 	mov	r6,r2
 100b040:	003f6106 	br	100adc8 <__divdf3+0x4dc>
 100b044:	1013883a 	mov	r9,r2
 100b048:	003f7906 	br	100ae30 <__divdf3+0x544>
 100b04c:	19c02636 	bltu	r3,r7,100b0e8 <__divdf3+0x7fc>
 100b050:	38c04d26 	beq	r7,r3,100b188 <__divdf3+0x89c>
 100b054:	2027883a 	mov	r19,r4
 100b058:	003f8b06 	br	100ae88 <__divdf3+0x59c>
 100b05c:	e025883a 	mov	r18,fp
 100b060:	003f8a06 	br	100ae8c <__divdf3+0x5a0>
 100b064:	008007c4 	movi	r2,31
 100b068:	14002a16 	blt	r2,r16,100b114 <__divdf3+0x828>
 100b06c:	a5010784 	addi	r20,r20,1054
 100b070:	8d04983a 	sll	r2,r17,r20
 100b074:	9c06d83a 	srl	r3,r19,r16
 100b078:	9d28983a 	sll	r20,r19,r20
 100b07c:	8c20d83a 	srl	r16,r17,r16
 100b080:	1886b03a 	or	r3,r3,r2
 100b084:	a004c03a 	cmpne	r2,r20,zero
 100b088:	1884b03a 	or	r2,r3,r2
 100b08c:	10c001cc 	andi	r3,r2,7
 100b090:	18000726 	beq	r3,zero,100b0b0 <__divdf3+0x7c4>
 100b094:	110003cc 	andi	r4,r2,15
 100b098:	00c00104 	movi	r3,4
 100b09c:	20c00426 	beq	r4,r3,100b0b0 <__divdf3+0x7c4>
 100b0a0:	10c00104 	addi	r3,r2,4
 100b0a4:	1885803a 	cmpltu	r2,r3,r2
 100b0a8:	80a1883a 	add	r16,r16,r2
 100b0ac:	1805883a 	mov	r2,r3
 100b0b0:	80c0202c 	andhi	r3,r16,128
 100b0b4:	18002d26 	beq	r3,zero,100b16c <__divdf3+0x880>
 100b0b8:	9180004c 	andi	r6,r18,1
 100b0bc:	01000044 	movi	r4,1
 100b0c0:	000b883a 	mov	r5,zero
 100b0c4:	0027883a 	mov	r19,zero
 100b0c8:	003e6606 	br	100aa64 <__divdf3+0x178>
 100b0cc:	354d883a 	add	r6,r6,r21
 100b0d0:	356d803a 	cmpltu	r22,r6,r21
 100b0d4:	b42d883a 	add	r22,r22,r16
 100b0d8:	b12d883a 	add	r22,r22,r4
 100b0dc:	8c7fff84 	addi	r17,r17,-2
 100b0e0:	b0c7c83a 	sub	r3,r22,r3
 100b0e4:	003f1d06 	br	100ad5c <__divdf3+0x470>
 100b0e8:	ad4b883a 	add	r5,r21,r21
 100b0ec:	2d6b803a 	cmpltu	r21,r5,r21
 100b0f0:	ac2b883a 	add	r21,r21,r16
 100b0f4:	1d47883a 	add	r3,r3,r21
 100b0f8:	993fff84 	addi	r4,r19,-2
 100b0fc:	282b883a 	mov	r21,r5
 100b100:	003fc806 	br	100b024 <__divdf3+0x738>
 100b104:	103fc41e 	bne	r2,zero,100b018 <__divdf3+0x72c>
 100b108:	002b883a 	mov	r21,zero
 100b10c:	a8bf5e1e 	bne	r21,r2,100ae88 <__divdf3+0x59c>
 100b110:	003f5e06 	br	100ae8c <__divdf3+0x5a0>
 100b114:	00bef884 	movi	r2,-1054
 100b118:	1505c83a 	sub	r2,r2,r20
 100b11c:	00c00804 	movi	r3,32
 100b120:	8884d83a 	srl	r2,r17,r2
 100b124:	80c01c26 	beq	r16,r3,100b198 <__divdf3+0x8ac>
 100b128:	a0c10f84 	addi	r3,r20,1086
 100b12c:	88c6983a 	sll	r3,r17,r3
 100b130:	1cc6b03a 	or	r3,r3,r19
 100b134:	1806c03a 	cmpne	r3,r3,zero
 100b138:	1884b03a 	or	r2,r3,r2
 100b13c:	140001cc 	andi	r16,r2,7
 100b140:	8000061e 	bne	r16,zero,100b15c <__divdf3+0x870>
 100b144:	000b883a 	mov	r5,zero
 100b148:	1004d0fa 	srli	r2,r2,3
 100b14c:	9180004c 	andi	r6,r18,1
 100b150:	0009883a 	mov	r4,zero
 100b154:	1426b03a 	or	r19,r2,r16
 100b158:	003e4206 	br	100aa64 <__divdf3+0x178>
 100b15c:	110003cc 	andi	r4,r2,15
 100b160:	00c00104 	movi	r3,4
 100b164:	0021883a 	mov	r16,zero
 100b168:	20ffcd1e 	bne	r4,r3,100b0a0 <__divdf3+0x7b4>
 100b16c:	800a927a 	slli	r5,r16,9
 100b170:	8020977a 	slli	r16,r16,29
 100b174:	280ad33a 	srli	r5,r5,12
 100b178:	003ff306 	br	100b148 <__divdf3+0x85c>
 100b17c:	317fd336 	bltu	r6,r5,100b0cc <__divdf3+0x7e0>
 100b180:	1023883a 	mov	r17,r2
 100b184:	003fa206 	br	100b010 <__divdf3+0x724>
 100b188:	a8bfd736 	bltu	r21,r2,100b0e8 <__divdf3+0x7fc>
 100b18c:	2027883a 	mov	r19,r4
 100b190:	a8bf3d1e 	bne	r21,r2,100ae88 <__divdf3+0x59c>
 100b194:	003f3d06 	br	100ae8c <__divdf3+0x5a0>
 100b198:	0007883a 	mov	r3,zero
 100b19c:	003fe406 	br	100b130 <__divdf3+0x844>
 100b1a0:	00800434 	movhi	r2,16
 100b1a4:	89400234 	orhi	r5,r17,8
 100b1a8:	10bfffc4 	addi	r2,r2,-1
 100b1ac:	e00d883a 	mov	r6,fp
 100b1b0:	288a703a 	and	r5,r5,r2
 100b1b4:	003e8506 	br	100abcc <__divdf3+0x2e0>

0100b1b8 <__eqdf2>:
 100b1b8:	2804d53a 	srli	r2,r5,20
 100b1bc:	3806d53a 	srli	r3,r7,20
 100b1c0:	02000434 	movhi	r8,16
 100b1c4:	423fffc4 	addi	r8,r8,-1
 100b1c8:	1081ffcc 	andi	r2,r2,2047
 100b1cc:	0241ffc4 	movi	r9,2047
 100b1d0:	2a14703a 	and	r10,r5,r8
 100b1d4:	18c1ffcc 	andi	r3,r3,2047
 100b1d8:	3a10703a 	and	r8,r7,r8
 100b1dc:	280ad7fa 	srli	r5,r5,31
 100b1e0:	380ed7fa 	srli	r7,r7,31
 100b1e4:	12400f26 	beq	r2,r9,100b224 <__eqdf2+0x6c>
 100b1e8:	0241ffc4 	movi	r9,2047
 100b1ec:	1a400326 	beq	r3,r9,100b1fc <__eqdf2+0x44>
 100b1f0:	10c00526 	beq	r2,r3,100b208 <__eqdf2+0x50>
 100b1f4:	00800044 	movi	r2,1
 100b1f8:	f800283a 	ret
 100b1fc:	4192b03a 	or	r9,r8,r6
 100b200:	483ffc1e 	bne	r9,zero,100b1f4 <__eqdf2+0x3c>
 100b204:	10fffb1e 	bne	r2,r3,100b1f4 <__eqdf2+0x3c>
 100b208:	523ffa1e 	bne	r10,r8,100b1f4 <__eqdf2+0x3c>
 100b20c:	21bff91e 	bne	r4,r6,100b1f4 <__eqdf2+0x3c>
 100b210:	29c00826 	beq	r5,r7,100b234 <__eqdf2+0x7c>
 100b214:	103ff71e 	bne	r2,zero,100b1f4 <__eqdf2+0x3c>
 100b218:	5104b03a 	or	r2,r10,r4
 100b21c:	1004c03a 	cmpne	r2,r2,zero
 100b220:	f800283a 	ret
 100b224:	5112b03a 	or	r9,r10,r4
 100b228:	483fef26 	beq	r9,zero,100b1e8 <__eqdf2+0x30>
 100b22c:	00800044 	movi	r2,1
 100b230:	f800283a 	ret
 100b234:	0005883a 	mov	r2,zero
 100b238:	f800283a 	ret

0100b23c <__gedf2>:
 100b23c:	2804d53a 	srli	r2,r5,20
 100b240:	3806d53a 	srli	r3,r7,20
 100b244:	02000434 	movhi	r8,16
 100b248:	423fffc4 	addi	r8,r8,-1
 100b24c:	0241ffc4 	movi	r9,2047
 100b250:	1081ffcc 	andi	r2,r2,2047
 100b254:	2a14703a 	and	r10,r5,r8
 100b258:	1a46703a 	and	r3,r3,r9
 100b25c:	3a10703a 	and	r8,r7,r8
 100b260:	280ad7fa 	srli	r5,r5,31
 100b264:	380ed7fa 	srli	r7,r7,31
 100b268:	12400b26 	beq	r2,r9,100b298 <__gedf2+0x5c>
 100b26c:	1a401626 	beq	r3,r9,100b2c8 <__gedf2+0x8c>
 100b270:	10000c1e 	bne	r2,zero,100b2a4 <__gedf2+0x68>
 100b274:	5112b03a 	or	r9,r10,r4
 100b278:	4813003a 	cmpeq	r9,r9,zero
 100b27c:	4817883a 	mov	r11,r9
 100b280:	18000c1e 	bne	r3,zero,100b2b4 <__gedf2+0x78>
 100b284:	4198b03a 	or	r12,r8,r6
 100b288:	60000a1e 	bne	r12,zero,100b2b4 <__gedf2+0x78>
 100b28c:	48001326 	beq	r9,zero,100b2dc <__gedf2+0xa0>
 100b290:	0005883a 	mov	r2,zero
 100b294:	f800283a 	ret
 100b298:	5112b03a 	or	r9,r10,r4
 100b29c:	4800191e 	bne	r9,zero,100b304 <__gedf2+0xc8>
 100b2a0:	18800926 	beq	r3,r2,100b2c8 <__gedf2+0x8c>
 100b2a4:	18000b1e 	bne	r3,zero,100b2d4 <__gedf2+0x98>
 100b2a8:	4192b03a 	or	r9,r8,r6
 100b2ac:	0017883a 	mov	r11,zero
 100b2b0:	48000a26 	beq	r9,zero,100b2dc <__gedf2+0xa0>
 100b2b4:	39c03fcc 	andi	r7,r7,255
 100b2b8:	58000726 	beq	r11,zero,100b2d8 <__gedf2+0x9c>
 100b2bc:	3800081e 	bne	r7,zero,100b2e0 <__gedf2+0xa4>
 100b2c0:	00bfffc4 	movi	r2,-1
 100b2c4:	f800283a 	ret
 100b2c8:	4192b03a 	or	r9,r8,r6
 100b2cc:	48000d1e 	bne	r9,zero,100b304 <__gedf2+0xc8>
 100b2d0:	103fe826 	beq	r2,zero,100b274 <__gedf2+0x38>
 100b2d4:	39c03fcc 	andi	r7,r7,255
 100b2d8:	29c00326 	beq	r5,r7,100b2e8 <__gedf2+0xac>
 100b2dc:	283ff81e 	bne	r5,zero,100b2c0 <__gedf2+0x84>
 100b2e0:	00800044 	movi	r2,1
 100b2e4:	f800283a 	ret
 100b2e8:	18bffc16 	blt	r3,r2,100b2dc <__gedf2+0xa0>
 100b2ec:	10c00316 	blt	r2,r3,100b2fc <__gedf2+0xc0>
 100b2f0:	42bffa36 	bltu	r8,r10,100b2dc <__gedf2+0xa0>
 100b2f4:	52000526 	beq	r10,r8,100b30c <__gedf2+0xd0>
 100b2f8:	523fe52e 	bgeu	r10,r8,100b290 <__gedf2+0x54>
 100b2fc:	283ff026 	beq	r5,zero,100b2c0 <__gedf2+0x84>
 100b300:	003ff706 	br	100b2e0 <__gedf2+0xa4>
 100b304:	00bfff84 	movi	r2,-2
 100b308:	f800283a 	ret
 100b30c:	313ff336 	bltu	r6,r4,100b2dc <__gedf2+0xa0>
 100b310:	21bfdf2e 	bgeu	r4,r6,100b290 <__gedf2+0x54>
 100b314:	283fea26 	beq	r5,zero,100b2c0 <__gedf2+0x84>
 100b318:	003ff106 	br	100b2e0 <__gedf2+0xa4>

0100b31c <__ledf2>:
 100b31c:	2804d53a 	srli	r2,r5,20
 100b320:	3810d53a 	srli	r8,r7,20
 100b324:	00c00434 	movhi	r3,16
 100b328:	18ffffc4 	addi	r3,r3,-1
 100b32c:	0241ffc4 	movi	r9,2047
 100b330:	1081ffcc 	andi	r2,r2,2047
 100b334:	28d4703a 	and	r10,r5,r3
 100b338:	4250703a 	and	r8,r8,r9
 100b33c:	38c6703a 	and	r3,r7,r3
 100b340:	280ad7fa 	srli	r5,r5,31
 100b344:	380ed7fa 	srli	r7,r7,31
 100b348:	12400b26 	beq	r2,r9,100b378 <__ledf2+0x5c>
 100b34c:	42401926 	beq	r8,r9,100b3b4 <__ledf2+0x98>
 100b350:	10000c1e 	bne	r2,zero,100b384 <__ledf2+0x68>
 100b354:	5112b03a 	or	r9,r10,r4
 100b358:	4813003a 	cmpeq	r9,r9,zero
 100b35c:	4817883a 	mov	r11,r9
 100b360:	40000f26 	beq	r8,zero,100b3a0 <__ledf2+0x84>
 100b364:	39c03fcc 	andi	r7,r7,255
 100b368:	58001826 	beq	r11,zero,100b3cc <__ledf2+0xb0>
 100b36c:	38000a1e 	bne	r7,zero,100b398 <__ledf2+0x7c>
 100b370:	00bfffc4 	movi	r2,-1
 100b374:	f800283a 	ret
 100b378:	5112b03a 	or	r9,r10,r4
 100b37c:	48000f1e 	bne	r9,zero,100b3bc <__ledf2+0xa0>
 100b380:	40800c26 	beq	r8,r2,100b3b4 <__ledf2+0x98>
 100b384:	4000101e 	bne	r8,zero,100b3c8 <__ledf2+0xac>
 100b388:	1992b03a 	or	r9,r3,r6
 100b38c:	0017883a 	mov	r11,zero
 100b390:	483ff41e 	bne	r9,zero,100b364 <__ledf2+0x48>
 100b394:	283ff61e 	bne	r5,zero,100b370 <__ledf2+0x54>
 100b398:	00800044 	movi	r2,1
 100b39c:	f800283a 	ret
 100b3a0:	1998b03a 	or	r12,r3,r6
 100b3a4:	603fef1e 	bne	r12,zero,100b364 <__ledf2+0x48>
 100b3a8:	483ffa26 	beq	r9,zero,100b394 <__ledf2+0x78>
 100b3ac:	0005883a 	mov	r2,zero
 100b3b0:	f800283a 	ret
 100b3b4:	1992b03a 	or	r9,r3,r6
 100b3b8:	48000226 	beq	r9,zero,100b3c4 <__ledf2+0xa8>
 100b3bc:	00800084 	movi	r2,2
 100b3c0:	f800283a 	ret
 100b3c4:	103fe326 	beq	r2,zero,100b354 <__ledf2+0x38>
 100b3c8:	39c03fcc 	andi	r7,r7,255
 100b3cc:	29fff11e 	bne	r5,r7,100b394 <__ledf2+0x78>
 100b3d0:	40bff016 	blt	r8,r2,100b394 <__ledf2+0x78>
 100b3d4:	12000316 	blt	r2,r8,100b3e4 <__ledf2+0xc8>
 100b3d8:	1abfee36 	bltu	r3,r10,100b394 <__ledf2+0x78>
 100b3dc:	50c00326 	beq	r10,r3,100b3ec <__ledf2+0xd0>
 100b3e0:	50fff22e 	bgeu	r10,r3,100b3ac <__ledf2+0x90>
 100b3e4:	283fe226 	beq	r5,zero,100b370 <__ledf2+0x54>
 100b3e8:	003feb06 	br	100b398 <__ledf2+0x7c>
 100b3ec:	313fe936 	bltu	r6,r4,100b394 <__ledf2+0x78>
 100b3f0:	21bfee2e 	bgeu	r4,r6,100b3ac <__ledf2+0x90>
 100b3f4:	283fde26 	beq	r5,zero,100b370 <__ledf2+0x54>
 100b3f8:	003fe706 	br	100b398 <__ledf2+0x7c>

0100b3fc <__muldf3>:
 100b3fc:	defff204 	addi	sp,sp,-56
 100b400:	2804d53a 	srli	r2,r5,20
 100b404:	dd800a15 	stw	r22,40(sp)
 100b408:	282cd7fa 	srli	r22,r5,31
 100b40c:	dc000415 	stw	r16,16(sp)
 100b410:	04000434 	movhi	r16,16
 100b414:	df000c15 	stw	fp,48(sp)
 100b418:	dd000815 	stw	r20,32(sp)
 100b41c:	dcc00715 	stw	r19,28(sp)
 100b420:	dc800615 	stw	r18,24(sp)
 100b424:	dc400515 	stw	r17,20(sp)
 100b428:	843fffc4 	addi	r16,r16,-1
 100b42c:	dfc00d15 	stw	ra,52(sp)
 100b430:	ddc00b15 	stw	r23,44(sp)
 100b434:	dd400915 	stw	r21,36(sp)
 100b438:	1501ffcc 	andi	r20,r2,2047
 100b43c:	2023883a 	mov	r17,r4
 100b440:	2025883a 	mov	r18,r4
 100b444:	2c20703a 	and	r16,r5,r16
 100b448:	b027883a 	mov	r19,r22
 100b44c:	b7003fcc 	andi	fp,r22,255
 100b450:	a0005926 	beq	r20,zero,100b5b8 <__muldf3+0x1bc>
 100b454:	0081ffc4 	movi	r2,2047
 100b458:	a0803426 	beq	r20,r2,100b52c <__muldf3+0x130>
 100b45c:	84000434 	orhi	r16,r16,16
 100b460:	2004d77a 	srli	r2,r4,29
 100b464:	802090fa 	slli	r16,r16,3
 100b468:	202490fa 	slli	r18,r4,3
 100b46c:	a53f0044 	addi	r20,r20,-1023
 100b470:	80a0b03a 	or	r16,r16,r2
 100b474:	002b883a 	mov	r21,zero
 100b478:	0015883a 	mov	r10,zero
 100b47c:	3812d53a 	srli	r9,r7,20
 100b480:	3806d7fa 	srli	r3,r7,31
 100b484:	02000434 	movhi	r8,16
 100b488:	423fffc4 	addi	r8,r8,-1
 100b48c:	4941ffcc 	andi	r5,r9,2047
 100b490:	302f883a 	mov	r23,r6
 100b494:	3a22703a 	and	r17,r7,r8
 100b498:	1ac03fcc 	andi	r11,r3,255
 100b49c:	28006226 	beq	r5,zero,100b628 <__muldf3+0x22c>
 100b4a0:	0081ffc4 	movi	r2,2047
 100b4a4:	28805a26 	beq	r5,r2,100b610 <__muldf3+0x214>
 100b4a8:	8a000434 	orhi	r8,r17,16
 100b4ac:	3004d77a 	srli	r2,r6,29
 100b4b0:	401090fa 	slli	r8,r8,3
 100b4b4:	302e90fa 	slli	r23,r6,3
 100b4b8:	297f0044 	addi	r5,r5,-1023
 100b4bc:	40a2b03a 	or	r17,r8,r2
 100b4c0:	0013883a 	mov	r9,zero
 100b4c4:	4d4cb03a 	or	r6,r9,r21
 100b4c8:	300c90ba 	slli	r6,r6,2
 100b4cc:	02004074 	movhi	r8,257
 100b4d0:	422d3b04 	addi	r8,r8,-19220
 100b4d4:	320d883a 	add	r6,r6,r8
 100b4d8:	31800017 	ldw	r6,0(r6)
 100b4dc:	a14b883a 	add	r5,r20,r5
 100b4e0:	1dacf03a 	xor	r22,r3,r22
 100b4e4:	2b000044 	addi	r12,r5,1
 100b4e8:	3000683a 	jmp	r6
 100b4ec:	0100b728 	cmpgeui	r4,zero,732
 100b4f0:	0100b714 	movui	r4,732
 100b4f4:	0100b714 	movui	r4,732
 100b4f8:	0100b700 	call	100b70 <__alt_mem_SDRAM_ctrl-0xeff490>
 100b4fc:	0100b548 	cmpgei	r4,zero,725
 100b500:	0100b548 	cmpgei	r4,zero,725
 100b504:	0100b6e8 	cmpgeui	r4,zero,731
 100b508:	0100b700 	call	100b70 <__alt_mem_SDRAM_ctrl-0xeff490>
 100b50c:	0100b548 	cmpgei	r4,zero,725
 100b510:	0100b6e8 	cmpgeui	r4,zero,731
 100b514:	0100b548 	cmpgei	r4,zero,725
 100b518:	0100b700 	call	100b70 <__alt_mem_SDRAM_ctrl-0xeff490>
 100b51c:	0100b54c 	andi	r4,zero,725
 100b520:	0100b54c 	andi	r4,zero,725
 100b524:	0100b54c 	andi	r4,zero,725
 100b528:	0100b924 	muli	r4,zero,740
 100b52c:	8104b03a 	or	r2,r16,r4
 100b530:	10006a1e 	bne	r2,zero,100b6dc <__muldf3+0x2e0>
 100b534:	05400204 	movi	r21,8
 100b538:	0021883a 	mov	r16,zero
 100b53c:	0025883a 	mov	r18,zero
 100b540:	02800084 	movi	r10,2
 100b544:	003fcd06 	br	100b47c <__muldf3+0x80>
 100b548:	b039883a 	mov	fp,r22
 100b54c:	00800084 	movi	r2,2
 100b550:	50804e1e 	bne	r10,r2,100b68c <__muldf3+0x290>
 100b554:	e4c0004c 	andi	r19,fp,1
 100b558:	0101ffc4 	movi	r4,2047
 100b55c:	0021883a 	mov	r16,zero
 100b560:	0025883a 	mov	r18,zero
 100b564:	2008953a 	slli	r4,r4,20
 100b568:	98c03fcc 	andi	r3,r19,255
 100b56c:	01400434 	movhi	r5,16
 100b570:	297fffc4 	addi	r5,r5,-1
 100b574:	180697fa 	slli	r3,r3,31
 100b578:	8160703a 	and	r16,r16,r5
 100b57c:	8120b03a 	or	r16,r16,r4
 100b580:	80c6b03a 	or	r3,r16,r3
 100b584:	9005883a 	mov	r2,r18
 100b588:	dfc00d17 	ldw	ra,52(sp)
 100b58c:	df000c17 	ldw	fp,48(sp)
 100b590:	ddc00b17 	ldw	r23,44(sp)
 100b594:	dd800a17 	ldw	r22,40(sp)
 100b598:	dd400917 	ldw	r21,36(sp)
 100b59c:	dd000817 	ldw	r20,32(sp)
 100b5a0:	dcc00717 	ldw	r19,28(sp)
 100b5a4:	dc800617 	ldw	r18,24(sp)
 100b5a8:	dc400517 	ldw	r17,20(sp)
 100b5ac:	dc000417 	ldw	r16,16(sp)
 100b5b0:	dec00e04 	addi	sp,sp,56
 100b5b4:	f800283a 	ret
 100b5b8:	8104b03a 	or	r2,r16,r4
 100b5bc:	10004226 	beq	r2,zero,100b6c8 <__muldf3+0x2cc>
 100b5c0:	8000f926 	beq	r16,zero,100b9a8 <__muldf3+0x5ac>
 100b5c4:	8009883a 	mov	r4,r16
 100b5c8:	d9800315 	stw	r6,12(sp)
 100b5cc:	d9c00015 	stw	r7,0(sp)
 100b5d0:	100c5ec0 	call	100c5ec <__clzsi2>
 100b5d4:	d9800317 	ldw	r6,12(sp)
 100b5d8:	d9c00017 	ldw	r7,0(sp)
 100b5dc:	1007883a 	mov	r3,r2
 100b5e0:	01000a04 	movi	r4,40
 100b5e4:	18bffe04 	addi	r2,r3,-8
 100b5e8:	20c9c83a 	sub	r4,r4,r3
 100b5ec:	80a0983a 	sll	r16,r16,r2
 100b5f0:	8908d83a 	srl	r4,r17,r4
 100b5f4:	88a4983a 	sll	r18,r17,r2
 100b5f8:	2420b03a 	or	r16,r4,r16
 100b5fc:	017f0344 	movi	r5,-1011
 100b600:	28e9c83a 	sub	r20,r5,r3
 100b604:	002b883a 	mov	r21,zero
 100b608:	0015883a 	mov	r10,zero
 100b60c:	003f9b06 	br	100b47c <__muldf3+0x80>
 100b610:	8984b03a 	or	r2,r17,r6
 100b614:	10002a1e 	bne	r2,zero,100b6c0 <__muldf3+0x2c4>
 100b618:	0023883a 	mov	r17,zero
 100b61c:	002f883a 	mov	r23,zero
 100b620:	02400084 	movi	r9,2
 100b624:	003fa706 	br	100b4c4 <__muldf3+0xc8>
 100b628:	8984b03a 	or	r2,r17,r6
 100b62c:	10002026 	beq	r2,zero,100b6b0 <__muldf3+0x2b4>
 100b630:	8800cc26 	beq	r17,zero,100b964 <__muldf3+0x568>
 100b634:	8809883a 	mov	r4,r17
 100b638:	d8c00215 	stw	r3,8(sp)
 100b63c:	d9800315 	stw	r6,12(sp)
 100b640:	da800015 	stw	r10,0(sp)
 100b644:	dac00115 	stw	r11,4(sp)
 100b648:	100c5ec0 	call	100c5ec <__clzsi2>
 100b64c:	d8c00217 	ldw	r3,8(sp)
 100b650:	d9800317 	ldw	r6,12(sp)
 100b654:	da800017 	ldw	r10,0(sp)
 100b658:	dac00117 	ldw	r11,4(sp)
 100b65c:	1009883a 	mov	r4,r2
 100b660:	01400a04 	movi	r5,40
 100b664:	25fffe04 	addi	r23,r4,-8
 100b668:	290bc83a 	sub	r5,r5,r4
 100b66c:	8dd0983a 	sll	r8,r17,r23
 100b670:	314ad83a 	srl	r5,r6,r5
 100b674:	35ee983a 	sll	r23,r6,r23
 100b678:	2a22b03a 	or	r17,r5,r8
 100b67c:	017f0344 	movi	r5,-1011
 100b680:	290bc83a 	sub	r5,r5,r4
 100b684:	0013883a 	mov	r9,zero
 100b688:	003f8e06 	br	100b4c4 <__muldf3+0xc8>
 100b68c:	008000c4 	movi	r2,3
 100b690:	50811d26 	beq	r10,r2,100bb08 <__muldf3+0x70c>
 100b694:	00800044 	movi	r2,1
 100b698:	5080e01e 	bne	r10,r2,100ba1c <__muldf3+0x620>
 100b69c:	e0a6703a 	and	r19,fp,r2
 100b6a0:	0009883a 	mov	r4,zero
 100b6a4:	0021883a 	mov	r16,zero
 100b6a8:	0025883a 	mov	r18,zero
 100b6ac:	003fad06 	br	100b564 <__muldf3+0x168>
 100b6b0:	0023883a 	mov	r17,zero
 100b6b4:	002f883a 	mov	r23,zero
 100b6b8:	02400044 	movi	r9,1
 100b6bc:	003f8106 	br	100b4c4 <__muldf3+0xc8>
 100b6c0:	024000c4 	movi	r9,3
 100b6c4:	003f7f06 	br	100b4c4 <__muldf3+0xc8>
 100b6c8:	05400104 	movi	r21,4
 100b6cc:	0021883a 	mov	r16,zero
 100b6d0:	0025883a 	mov	r18,zero
 100b6d4:	02800044 	movi	r10,1
 100b6d8:	003f6806 	br	100b47c <__muldf3+0x80>
 100b6dc:	05400304 	movi	r21,12
 100b6e0:	028000c4 	movi	r10,3
 100b6e4:	003f6506 	br	100b47c <__muldf3+0x80>
 100b6e8:	04000434 	movhi	r16,16
 100b6ec:	0027883a 	mov	r19,zero
 100b6f0:	843fffc4 	addi	r16,r16,-1
 100b6f4:	04bfffc4 	movi	r18,-1
 100b6f8:	0101ffc4 	movi	r4,2047
 100b6fc:	003f9906 	br	100b564 <__muldf3+0x168>
 100b700:	8821883a 	mov	r16,r17
 100b704:	b825883a 	mov	r18,r23
 100b708:	5839883a 	mov	fp,r11
 100b70c:	4815883a 	mov	r10,r9
 100b710:	003f8e06 	br	100b54c <__muldf3+0x150>
 100b714:	8821883a 	mov	r16,r17
 100b718:	b825883a 	mov	r18,r23
 100b71c:	b039883a 	mov	fp,r22
 100b720:	4815883a 	mov	r10,r9
 100b724:	003f8906 	br	100b54c <__muldf3+0x150>
 100b728:	b80cd43a 	srli	r6,r23,16
 100b72c:	9006d43a 	srli	r3,r18,16
 100b730:	90bfffcc 	andi	r2,r18,65535
 100b734:	bdffffcc 	andi	r23,r23,65535
 100b738:	b891383a 	mul	r8,r23,r2
 100b73c:	b8c9383a 	mul	r4,r23,r3
 100b740:	309b383a 	mul	r13,r6,r2
 100b744:	400ed43a 	srli	r7,r8,16
 100b748:	30df383a 	mul	r15,r6,r3
 100b74c:	235b883a 	add	r13,r4,r13
 100b750:	69db883a 	add	r13,r13,r7
 100b754:	6900022e 	bgeu	r13,r4,100b760 <__muldf3+0x364>
 100b758:	01000074 	movhi	r4,1
 100b75c:	791f883a 	add	r15,r15,r4
 100b760:	8828d43a 	srli	r20,r17,16
 100b764:	8c7fffcc 	andi	r17,r17,65535
 100b768:	888f383a 	mul	r7,r17,r2
 100b76c:	88d3383a 	mul	r9,r17,r3
 100b770:	a0a5383a 	mul	r18,r20,r2
 100b774:	3816d43a 	srli	r11,r7,16
 100b778:	6814943a 	slli	r10,r13,16
 100b77c:	4ca5883a 	add	r18,r9,r18
 100b780:	423fffcc 	andi	r8,r8,65535
 100b784:	92e5883a 	add	r18,r18,r11
 100b788:	6808d43a 	srli	r4,r13,16
 100b78c:	5215883a 	add	r10,r10,r8
 100b790:	a0c7383a 	mul	r3,r20,r3
 100b794:	9240022e 	bgeu	r18,r9,100b7a0 <__muldf3+0x3a4>
 100b798:	00800074 	movhi	r2,1
 100b79c:	1887883a 	add	r3,r3,r2
 100b7a0:	802ad43a 	srli	r21,r16,16
 100b7a4:	80bfffcc 	andi	r2,r16,65535
 100b7a8:	b893383a 	mul	r9,r23,r2
 100b7ac:	3091383a 	mul	r8,r6,r2
 100b7b0:	bd6f383a 	mul	r23,r23,r21
 100b7b4:	9026943a 	slli	r19,r18,16
 100b7b8:	481ad43a 	srli	r13,r9,16
 100b7bc:	9024d43a 	srli	r18,r18,16
 100b7c0:	39ffffcc 	andi	r7,r7,65535
 100b7c4:	ba11883a 	add	r8,r23,r8
 100b7c8:	99e7883a 	add	r19,r19,r7
 100b7cc:	4351883a 	add	r8,r8,r13
 100b7d0:	1c97883a 	add	r11,r3,r18
 100b7d4:	354d383a 	mul	r6,r6,r21
 100b7d8:	9925883a 	add	r18,r19,r4
 100b7dc:	45c0022e 	bgeu	r8,r23,100b7e8 <__muldf3+0x3ec>
 100b7e0:	00c00074 	movhi	r3,1
 100b7e4:	30cd883a 	add	r6,r6,r3
 100b7e8:	8889383a 	mul	r4,r17,r2
 100b7ec:	8d63383a 	mul	r17,r17,r21
 100b7f0:	a085383a 	mul	r2,r20,r2
 100b7f4:	200ed43a 	srli	r7,r4,16
 100b7f8:	401cd43a 	srli	r14,r8,16
 100b7fc:	401a943a 	slli	r13,r8,16
 100b800:	8885883a 	add	r2,r17,r2
 100b804:	4a3fffcc 	andi	r8,r9,65535
 100b808:	11c5883a 	add	r2,r2,r7
 100b80c:	339d883a 	add	r14,r6,r14
 100b810:	6a11883a 	add	r8,r13,r8
 100b814:	a561383a 	mul	r16,r20,r21
 100b818:	1440022e 	bgeu	r2,r17,100b824 <__muldf3+0x428>
 100b81c:	00c00074 	movhi	r3,1
 100b820:	80e1883a 	add	r16,r16,r3
 100b824:	1006943a 	slli	r3,r2,16
 100b828:	213fffcc 	andi	r4,r4,65535
 100b82c:	93db883a 	add	r13,r18,r15
 100b830:	1909883a 	add	r4,r3,r4
 100b834:	22c7883a 	add	r3,r4,r11
 100b838:	6cd3803a 	cmpltu	r9,r13,r19
 100b83c:	6a09883a 	add	r4,r13,r8
 100b840:	1a5b883a 	add	r13,r3,r9
 100b844:	2211803a 	cmpltu	r8,r4,r8
 100b848:	734d883a 	add	r6,r14,r13
 100b84c:	100ed43a 	srli	r7,r2,16
 100b850:	6a53803a 	cmpltu	r9,r13,r9
 100b854:	3205883a 	add	r2,r6,r8
 100b858:	1ac7803a 	cmpltu	r3,r3,r11
 100b85c:	1211803a 	cmpltu	r8,r2,r8
 100b860:	48c6b03a 	or	r3,r9,r3
 100b864:	338d803a 	cmpltu	r6,r6,r14
 100b868:	19c7883a 	add	r3,r3,r7
 100b86c:	418cb03a 	or	r6,r8,r6
 100b870:	1987883a 	add	r3,r3,r6
 100b874:	2024927a 	slli	r18,r4,9
 100b878:	1c07883a 	add	r3,r3,r16
 100b87c:	1806927a 	slli	r3,r3,9
 100b880:	1020d5fa 	srli	r16,r2,23
 100b884:	2008d5fa 	srli	r4,r4,23
 100b888:	9294b03a 	or	r10,r18,r10
 100b88c:	1004927a 	slli	r2,r2,9
 100b890:	5024c03a 	cmpne	r18,r10,zero
 100b894:	1c20b03a 	or	r16,r3,r16
 100b898:	9108b03a 	or	r4,r18,r4
 100b89c:	80c0402c 	andhi	r3,r16,256
 100b8a0:	20a4b03a 	or	r18,r4,r2
 100b8a4:	18000726 	beq	r3,zero,100b8c4 <__muldf3+0x4c8>
 100b8a8:	9006d07a 	srli	r3,r18,1
 100b8ac:	800897fa 	slli	r4,r16,31
 100b8b0:	9080004c 	andi	r2,r18,1
 100b8b4:	8020d07a 	srli	r16,r16,1
 100b8b8:	10c4b03a 	or	r2,r2,r3
 100b8bc:	1124b03a 	or	r18,r2,r4
 100b8c0:	600b883a 	mov	r5,r12
 100b8c4:	2900ffc4 	addi	r4,r5,1023
 100b8c8:	01004b0e 	bge	zero,r4,100b9f8 <__muldf3+0x5fc>
 100b8cc:	908001cc 	andi	r2,r18,7
 100b8d0:	10000726 	beq	r2,zero,100b8f0 <__muldf3+0x4f4>
 100b8d4:	90c003cc 	andi	r3,r18,15
 100b8d8:	00800104 	movi	r2,4
 100b8dc:	18800426 	beq	r3,r2,100b8f0 <__muldf3+0x4f4>
 100b8e0:	9087883a 	add	r3,r18,r2
 100b8e4:	1c85803a 	cmpltu	r2,r3,r18
 100b8e8:	80a1883a 	add	r16,r16,r2
 100b8ec:	1825883a 	mov	r18,r3
 100b8f0:	8080402c 	andhi	r2,r16,256
 100b8f4:	10000426 	beq	r2,zero,100b908 <__muldf3+0x50c>
 100b8f8:	00bfc034 	movhi	r2,65280
 100b8fc:	10bfffc4 	addi	r2,r2,-1
 100b900:	29010004 	addi	r4,r5,1024
 100b904:	80a0703a 	and	r16,r16,r2
 100b908:	0081ff84 	movi	r2,2046
 100b90c:	1100320e 	bge	r2,r4,100b9d8 <__muldf3+0x5dc>
 100b910:	b4c0004c 	andi	r19,r22,1
 100b914:	0101ffc4 	movi	r4,2047
 100b918:	0021883a 	mov	r16,zero
 100b91c:	0025883a 	mov	r18,zero
 100b920:	003f1006 	br	100b564 <__muldf3+0x168>
 100b924:	8080022c 	andhi	r2,r16,8
 100b928:	10000926 	beq	r2,zero,100b950 <__muldf3+0x554>
 100b92c:	8880022c 	andhi	r2,r17,8
 100b930:	1000071e 	bne	r2,zero,100b950 <__muldf3+0x554>
 100b934:	00800434 	movhi	r2,16
 100b938:	8c000234 	orhi	r16,r17,8
 100b93c:	10bfffc4 	addi	r2,r2,-1
 100b940:	1827883a 	mov	r19,r3
 100b944:	80a0703a 	and	r16,r16,r2
 100b948:	b825883a 	mov	r18,r23
 100b94c:	003f6a06 	br	100b6f8 <__muldf3+0x2fc>
 100b950:	00800434 	movhi	r2,16
 100b954:	84000234 	orhi	r16,r16,8
 100b958:	10bfffc4 	addi	r2,r2,-1
 100b95c:	80a0703a 	and	r16,r16,r2
 100b960:	003f6506 	br	100b6f8 <__muldf3+0x2fc>
 100b964:	3009883a 	mov	r4,r6
 100b968:	d8c00215 	stw	r3,8(sp)
 100b96c:	d9800315 	stw	r6,12(sp)
 100b970:	da800015 	stw	r10,0(sp)
 100b974:	dac00115 	stw	r11,4(sp)
 100b978:	100c5ec0 	call	100c5ec <__clzsi2>
 100b97c:	11000804 	addi	r4,r2,32
 100b980:	014009c4 	movi	r5,39
 100b984:	d8c00217 	ldw	r3,8(sp)
 100b988:	d9800317 	ldw	r6,12(sp)
 100b98c:	da800017 	ldw	r10,0(sp)
 100b990:	dac00117 	ldw	r11,4(sp)
 100b994:	293f320e 	bge	r5,r4,100b660 <__muldf3+0x264>
 100b998:	10bffe04 	addi	r2,r2,-8
 100b99c:	b8a2983a 	sll	r17,r23,r2
 100b9a0:	002f883a 	mov	r23,zero
 100b9a4:	003f3506 	br	100b67c <__muldf3+0x280>
 100b9a8:	d9800315 	stw	r6,12(sp)
 100b9ac:	d9c00015 	stw	r7,0(sp)
 100b9b0:	100c5ec0 	call	100c5ec <__clzsi2>
 100b9b4:	10c00804 	addi	r3,r2,32
 100b9b8:	010009c4 	movi	r4,39
 100b9bc:	d9800317 	ldw	r6,12(sp)
 100b9c0:	d9c00017 	ldw	r7,0(sp)
 100b9c4:	20ff060e 	bge	r4,r3,100b5e0 <__muldf3+0x1e4>
 100b9c8:	10bffe04 	addi	r2,r2,-8
 100b9cc:	88a0983a 	sll	r16,r17,r2
 100b9d0:	0025883a 	mov	r18,zero
 100b9d4:	003f0906 	br	100b5fc <__muldf3+0x200>
 100b9d8:	9004d0fa 	srli	r2,r18,3
 100b9dc:	8024977a 	slli	r18,r16,29
 100b9e0:	8020927a 	slli	r16,r16,9
 100b9e4:	2101ffcc 	andi	r4,r4,2047
 100b9e8:	90a4b03a 	or	r18,r18,r2
 100b9ec:	8020d33a 	srli	r16,r16,12
 100b9f0:	b4c0004c 	andi	r19,r22,1
 100b9f4:	003edb06 	br	100b564 <__muldf3+0x168>
 100b9f8:	00ff0084 	movi	r3,-1022
 100b9fc:	1947c83a 	sub	r3,r3,r5
 100ba00:	00800e04 	movi	r2,56
 100ba04:	10c0080e 	bge	r2,r3,100ba28 <__muldf3+0x62c>
 100ba08:	b4c0004c 	andi	r19,r22,1
 100ba0c:	0009883a 	mov	r4,zero
 100ba10:	0021883a 	mov	r16,zero
 100ba14:	0025883a 	mov	r18,zero
 100ba18:	003ed206 	br	100b564 <__muldf3+0x168>
 100ba1c:	600b883a 	mov	r5,r12
 100ba20:	e02d883a 	mov	r22,fp
 100ba24:	003fa706 	br	100b8c4 <__muldf3+0x4c8>
 100ba28:	008007c4 	movi	r2,31
 100ba2c:	10c01816 	blt	r2,r3,100ba90 <__muldf3+0x694>
 100ba30:	29410784 	addi	r5,r5,1054
 100ba34:	8144983a 	sll	r2,r16,r5
 100ba38:	90c8d83a 	srl	r4,r18,r3
 100ba3c:	914a983a 	sll	r5,r18,r5
 100ba40:	80c6d83a 	srl	r3,r16,r3
 100ba44:	2088b03a 	or	r4,r4,r2
 100ba48:	2804c03a 	cmpne	r2,r5,zero
 100ba4c:	2084b03a 	or	r2,r4,r2
 100ba50:	110001cc 	andi	r4,r2,7
 100ba54:	20000726 	beq	r4,zero,100ba74 <__muldf3+0x678>
 100ba58:	114003cc 	andi	r5,r2,15
 100ba5c:	01000104 	movi	r4,4
 100ba60:	29000426 	beq	r5,r4,100ba74 <__muldf3+0x678>
 100ba64:	11000104 	addi	r4,r2,4
 100ba68:	2085803a 	cmpltu	r2,r4,r2
 100ba6c:	1887883a 	add	r3,r3,r2
 100ba70:	2005883a 	mov	r2,r4
 100ba74:	1900202c 	andhi	r4,r3,128
 100ba78:	20001826 	beq	r4,zero,100badc <__muldf3+0x6e0>
 100ba7c:	b4c0004c 	andi	r19,r22,1
 100ba80:	01000044 	movi	r4,1
 100ba84:	0021883a 	mov	r16,zero
 100ba88:	0025883a 	mov	r18,zero
 100ba8c:	003eb506 	br	100b564 <__muldf3+0x168>
 100ba90:	00bef884 	movi	r2,-1054
 100ba94:	1145c83a 	sub	r2,r2,r5
 100ba98:	8088d83a 	srl	r4,r16,r2
 100ba9c:	00800804 	movi	r2,32
 100baa0:	18801726 	beq	r3,r2,100bb00 <__muldf3+0x704>
 100baa4:	28810f84 	addi	r2,r5,1086
 100baa8:	8084983a 	sll	r2,r16,r2
 100baac:	1484b03a 	or	r2,r2,r18
 100bab0:	1004c03a 	cmpne	r2,r2,zero
 100bab4:	1104b03a 	or	r2,r2,r4
 100bab8:	10c001cc 	andi	r3,r2,7
 100babc:	18000b1e 	bne	r3,zero,100baec <__muldf3+0x6f0>
 100bac0:	0021883a 	mov	r16,zero
 100bac4:	1004d0fa 	srli	r2,r2,3
 100bac8:	b4c0004c 	andi	r19,r22,1
 100bacc:	0009883a 	mov	r4,zero
 100bad0:	10e4b03a 	or	r18,r2,r3
 100bad4:	003ea306 	br	100b564 <__muldf3+0x168>
 100bad8:	0007883a 	mov	r3,zero
 100badc:	1820927a 	slli	r16,r3,9
 100bae0:	1806977a 	slli	r3,r3,29
 100bae4:	8020d33a 	srli	r16,r16,12
 100bae8:	003ff606 	br	100bac4 <__muldf3+0x6c8>
 100baec:	110003cc 	andi	r4,r2,15
 100baf0:	00c00104 	movi	r3,4
 100baf4:	20fff826 	beq	r4,r3,100bad8 <__muldf3+0x6dc>
 100baf8:	0007883a 	mov	r3,zero
 100bafc:	003fd906 	br	100ba64 <__muldf3+0x668>
 100bb00:	0005883a 	mov	r2,zero
 100bb04:	003fe906 	br	100baac <__muldf3+0x6b0>
 100bb08:	00800434 	movhi	r2,16
 100bb0c:	84000234 	orhi	r16,r16,8
 100bb10:	10bfffc4 	addi	r2,r2,-1
 100bb14:	e4c0004c 	andi	r19,fp,1
 100bb18:	80a0703a 	and	r16,r16,r2
 100bb1c:	003ef606 	br	100b6f8 <__muldf3+0x2fc>

0100bb20 <__subdf3>:
 100bb20:	00c00434 	movhi	r3,16
 100bb24:	18ffffc4 	addi	r3,r3,-1
 100bb28:	defffb04 	addi	sp,sp,-20
 100bb2c:	28d2703a 	and	r9,r5,r3
 100bb30:	3814d53a 	srli	r10,r7,20
 100bb34:	38c6703a 	and	r3,r7,r3
 100bb38:	3004d77a 	srli	r2,r6,29
 100bb3c:	dc800215 	stw	r18,8(sp)
 100bb40:	dc000015 	stw	r16,0(sp)
 100bb44:	2824d7fa 	srli	r18,r5,31
 100bb48:	2820d53a 	srli	r16,r5,20
 100bb4c:	481290fa 	slli	r9,r9,3
 100bb50:	200ad77a 	srli	r5,r4,29
 100bb54:	180690fa 	slli	r3,r3,3
 100bb58:	dc400115 	stw	r17,4(sp)
 100bb5c:	dfc00415 	stw	ra,16(sp)
 100bb60:	202290fa 	slli	r17,r4,3
 100bb64:	dcc00315 	stw	r19,12(sp)
 100bb68:	5281ffcc 	andi	r10,r10,2047
 100bb6c:	0101ffc4 	movi	r4,2047
 100bb70:	9011883a 	mov	r8,r18
 100bb74:	8401ffcc 	andi	r16,r16,2047
 100bb78:	94803fcc 	andi	r18,r18,255
 100bb7c:	494ab03a 	or	r5,r9,r5
 100bb80:	380ed7fa 	srli	r7,r7,31
 100bb84:	1886b03a 	or	r3,r3,r2
 100bb88:	300c90fa 	slli	r6,r6,3
 100bb8c:	51009026 	beq	r10,r4,100bdd0 <__subdf3+0x2b0>
 100bb90:	39c0005c 	xori	r7,r7,1
 100bb94:	8285c83a 	sub	r2,r16,r10
 100bb98:	91c06f26 	beq	r18,r7,100bd58 <__subdf3+0x238>
 100bb9c:	0080b10e 	bge	zero,r2,100be64 <__subdf3+0x344>
 100bba0:	50002a1e 	bne	r10,zero,100bc4c <__subdf3+0x12c>
 100bba4:	1988b03a 	or	r4,r3,r6
 100bba8:	2000941e 	bne	r4,zero,100bdfc <__subdf3+0x2dc>
 100bbac:	888001cc 	andi	r2,r17,7
 100bbb0:	10005b26 	beq	r2,zero,100bd20 <__subdf3+0x200>
 100bbb4:	88c003cc 	andi	r3,r17,15
 100bbb8:	00800104 	movi	r2,4
 100bbbc:	18805826 	beq	r3,r2,100bd20 <__subdf3+0x200>
 100bbc0:	88c00104 	addi	r3,r17,4
 100bbc4:	1c63803a 	cmpltu	r17,r3,r17
 100bbc8:	2c4b883a 	add	r5,r5,r17
 100bbcc:	2880202c 	andhi	r2,r5,128
 100bbd0:	9200004c 	andi	r8,r18,1
 100bbd4:	1823883a 	mov	r17,r3
 100bbd8:	10005426 	beq	r2,zero,100bd2c <__subdf3+0x20c>
 100bbdc:	84000044 	addi	r16,r16,1
 100bbe0:	0081ffc4 	movi	r2,2047
 100bbe4:	8080bf26 	beq	r16,r2,100bee4 <__subdf3+0x3c4>
 100bbe8:	013fe034 	movhi	r4,65408
 100bbec:	213fffc4 	addi	r4,r4,-1
 100bbf0:	290a703a 	and	r5,r5,r4
 100bbf4:	2804977a 	slli	r2,r5,29
 100bbf8:	280a927a 	slli	r5,r5,9
 100bbfc:	8822d0fa 	srli	r17,r17,3
 100bc00:	8401ffcc 	andi	r16,r16,2047
 100bc04:	2808d33a 	srli	r4,r5,12
 100bc08:	1444b03a 	or	r2,r2,r17
 100bc0c:	8401ffcc 	andi	r16,r16,2047
 100bc10:	800a953a 	slli	r5,r16,20
 100bc14:	40c03fcc 	andi	r3,r8,255
 100bc18:	04000434 	movhi	r16,16
 100bc1c:	180697fa 	slli	r3,r3,31
 100bc20:	843fffc4 	addi	r16,r16,-1
 100bc24:	2420703a 	and	r16,r4,r16
 100bc28:	8160b03a 	or	r16,r16,r5
 100bc2c:	80c6b03a 	or	r3,r16,r3
 100bc30:	dfc00417 	ldw	ra,16(sp)
 100bc34:	dcc00317 	ldw	r19,12(sp)
 100bc38:	dc800217 	ldw	r18,8(sp)
 100bc3c:	dc400117 	ldw	r17,4(sp)
 100bc40:	dc000017 	ldw	r16,0(sp)
 100bc44:	dec00504 	addi	sp,sp,20
 100bc48:	f800283a 	ret
 100bc4c:	0101ffc4 	movi	r4,2047
 100bc50:	813fd626 	beq	r16,r4,100bbac <__subdf3+0x8c>
 100bc54:	18c02034 	orhi	r3,r3,128
 100bc58:	01000e04 	movi	r4,56
 100bc5c:	2080a416 	blt	r4,r2,100bef0 <__subdf3+0x3d0>
 100bc60:	010007c4 	movi	r4,31
 100bc64:	2080c716 	blt	r4,r2,100bf84 <__subdf3+0x464>
 100bc68:	01000804 	movi	r4,32
 100bc6c:	2089c83a 	sub	r4,r4,r2
 100bc70:	1910983a 	sll	r8,r3,r4
 100bc74:	308ed83a 	srl	r7,r6,r2
 100bc78:	3108983a 	sll	r4,r6,r4
 100bc7c:	1884d83a 	srl	r2,r3,r2
 100bc80:	41ccb03a 	or	r6,r8,r7
 100bc84:	2008c03a 	cmpne	r4,r4,zero
 100bc88:	310cb03a 	or	r6,r6,r4
 100bc8c:	898dc83a 	sub	r6,r17,r6
 100bc90:	89a3803a 	cmpltu	r17,r17,r6
 100bc94:	288bc83a 	sub	r5,r5,r2
 100bc98:	2c4bc83a 	sub	r5,r5,r17
 100bc9c:	3023883a 	mov	r17,r6
 100bca0:	2880202c 	andhi	r2,r5,128
 100bca4:	10006b26 	beq	r2,zero,100be54 <__subdf3+0x334>
 100bca8:	04c02034 	movhi	r19,128
 100bcac:	9cffffc4 	addi	r19,r19,-1
 100bcb0:	2ce6703a 	and	r19,r5,r19
 100bcb4:	98007c26 	beq	r19,zero,100bea8 <__subdf3+0x388>
 100bcb8:	9809883a 	mov	r4,r19
 100bcbc:	100c5ec0 	call	100c5ec <__clzsi2>
 100bcc0:	10fffe04 	addi	r3,r2,-8
 100bcc4:	010007c4 	movi	r4,31
 100bcc8:	20c07d16 	blt	r4,r3,100bec0 <__subdf3+0x3a0>
 100bccc:	01400a04 	movi	r5,40
 100bcd0:	2885c83a 	sub	r2,r5,r2
 100bcd4:	888ad83a 	srl	r5,r17,r2
 100bcd8:	98e6983a 	sll	r19,r19,r3
 100bcdc:	88e2983a 	sll	r17,r17,r3
 100bce0:	2ce6b03a 	or	r19,r5,r19
 100bce4:	1c007a16 	blt	r3,r16,100bed0 <__subdf3+0x3b0>
 100bce8:	1c21c83a 	sub	r16,r3,r16
 100bcec:	81400044 	addi	r5,r16,1
 100bcf0:	00c007c4 	movi	r3,31
 100bcf4:	19409616 	blt	r3,r5,100bf50 <__subdf3+0x430>
 100bcf8:	1c21c83a 	sub	r16,r3,r16
 100bcfc:	8c08983a 	sll	r4,r17,r16
 100bd00:	8946d83a 	srl	r3,r17,r5
 100bd04:	9c20983a 	sll	r16,r19,r16
 100bd08:	2008c03a 	cmpne	r4,r4,zero
 100bd0c:	994ad83a 	srl	r5,r19,r5
 100bd10:	1c06b03a 	or	r3,r3,r16
 100bd14:	1922b03a 	or	r17,r3,r4
 100bd18:	0021883a 	mov	r16,zero
 100bd1c:	003fa306 	br	100bbac <__subdf3+0x8c>
 100bd20:	2880202c 	andhi	r2,r5,128
 100bd24:	9200004c 	andi	r8,r18,1
 100bd28:	103fac1e 	bne	r2,zero,100bbdc <__subdf3+0xbc>
 100bd2c:	2804977a 	slli	r2,r5,29
 100bd30:	8822d0fa 	srli	r17,r17,3
 100bd34:	00c1ffc4 	movi	r3,2047
 100bd38:	280ad0fa 	srli	r5,r5,3
 100bd3c:	1444b03a 	or	r2,r2,r17
 100bd40:	80c02726 	beq	r16,r3,100bde0 <__subdf3+0x2c0>
 100bd44:	01000434 	movhi	r4,16
 100bd48:	213fffc4 	addi	r4,r4,-1
 100bd4c:	80e0703a 	and	r16,r16,r3
 100bd50:	2908703a 	and	r4,r5,r4
 100bd54:	003fad06 	br	100bc0c <__subdf3+0xec>
 100bd58:	0080690e 	bge	zero,r2,100bf00 <__subdf3+0x3e0>
 100bd5c:	50002f26 	beq	r10,zero,100be1c <__subdf3+0x2fc>
 100bd60:	0101ffc4 	movi	r4,2047
 100bd64:	813f9126 	beq	r16,r4,100bbac <__subdf3+0x8c>
 100bd68:	18c02034 	orhi	r3,r3,128
 100bd6c:	01000e04 	movi	r4,56
 100bd70:	2080b00e 	bge	r4,r2,100c034 <__subdf3+0x514>
 100bd74:	198cb03a 	or	r6,r3,r6
 100bd78:	300ec03a 	cmpne	r7,r6,zero
 100bd7c:	0005883a 	mov	r2,zero
 100bd80:	3c4f883a 	add	r7,r7,r17
 100bd84:	3c63803a 	cmpltu	r17,r7,r17
 100bd88:	114b883a 	add	r5,r2,r5
 100bd8c:	2c4b883a 	add	r5,r5,r17
 100bd90:	3823883a 	mov	r17,r7
 100bd94:	2880202c 	andhi	r2,r5,128
 100bd98:	10002e26 	beq	r2,zero,100be54 <__subdf3+0x334>
 100bd9c:	84000044 	addi	r16,r16,1
 100bda0:	0081ffc4 	movi	r2,2047
 100bda4:	8080de26 	beq	r16,r2,100c120 <__subdf3+0x600>
 100bda8:	00bfe034 	movhi	r2,65408
 100bdac:	10bfffc4 	addi	r2,r2,-1
 100bdb0:	288a703a 	and	r5,r5,r2
 100bdb4:	880cd07a 	srli	r6,r17,1
 100bdb8:	280897fa 	slli	r4,r5,31
 100bdbc:	88c0004c 	andi	r3,r17,1
 100bdc0:	30e2b03a 	or	r17,r6,r3
 100bdc4:	280ad07a 	srli	r5,r5,1
 100bdc8:	8922b03a 	or	r17,r17,r4
 100bdcc:	003f7706 	br	100bbac <__subdf3+0x8c>
 100bdd0:	1984b03a 	or	r2,r3,r6
 100bdd4:	103f6e26 	beq	r2,zero,100bb90 <__subdf3+0x70>
 100bdd8:	39c03fcc 	andi	r7,r7,255
 100bddc:	003f6d06 	br	100bb94 <__subdf3+0x74>
 100bde0:	1146b03a 	or	r3,r2,r5
 100bde4:	18003f26 	beq	r3,zero,100bee4 <__subdf3+0x3c4>
 100bde8:	00c00434 	movhi	r3,16
 100bdec:	29000234 	orhi	r4,r5,8
 100bdf0:	18ffffc4 	addi	r3,r3,-1
 100bdf4:	20c8703a 	and	r4,r4,r3
 100bdf8:	003f8406 	br	100bc0c <__subdf3+0xec>
 100bdfc:	10bfffc4 	addi	r2,r2,-1
 100be00:	1000501e 	bne	r2,zero,100bf44 <__subdf3+0x424>
 100be04:	898fc83a 	sub	r7,r17,r6
 100be08:	89e3803a 	cmpltu	r17,r17,r7
 100be0c:	28cbc83a 	sub	r5,r5,r3
 100be10:	2c4bc83a 	sub	r5,r5,r17
 100be14:	3823883a 	mov	r17,r7
 100be18:	003fa106 	br	100bca0 <__subdf3+0x180>
 100be1c:	1988b03a 	or	r4,r3,r6
 100be20:	203f6226 	beq	r4,zero,100bbac <__subdf3+0x8c>
 100be24:	10bfffc4 	addi	r2,r2,-1
 100be28:	10009b1e 	bne	r2,zero,100c098 <__subdf3+0x578>
 100be2c:	344d883a 	add	r6,r6,r17
 100be30:	3463803a 	cmpltu	r17,r6,r17
 100be34:	194b883a 	add	r5,r3,r5
 100be38:	2c4b883a 	add	r5,r5,r17
 100be3c:	3023883a 	mov	r17,r6
 100be40:	003fd406 	br	100bd94 <__subdf3+0x274>
 100be44:	1106b03a 	or	r3,r2,r4
 100be48:	1800b426 	beq	r3,zero,100c11c <__subdf3+0x5fc>
 100be4c:	100b883a 	mov	r5,r2
 100be50:	2023883a 	mov	r17,r4
 100be54:	888001cc 	andi	r2,r17,7
 100be58:	103f561e 	bne	r2,zero,100bbb4 <__subdf3+0x94>
 100be5c:	9200004c 	andi	r8,r18,1
 100be60:	003fb206 	br	100bd2c <__subdf3+0x20c>
 100be64:	1000531e 	bne	r2,zero,100bfb4 <__subdf3+0x494>
 100be68:	80800044 	addi	r2,r16,1
 100be6c:	1081ffcc 	andi	r2,r2,2047
 100be70:	01000044 	movi	r4,1
 100be74:	2080a00e 	bge	r4,r2,100c0f8 <__subdf3+0x5d8>
 100be78:	8985c83a 	sub	r2,r17,r6
 100be7c:	8889803a 	cmpltu	r4,r17,r2
 100be80:	28e7c83a 	sub	r19,r5,r3
 100be84:	9927c83a 	sub	r19,r19,r4
 100be88:	9900202c 	andhi	r4,r19,128
 100be8c:	20006226 	beq	r4,zero,100c018 <__subdf3+0x4f8>
 100be90:	3463c83a 	sub	r17,r6,r17
 100be94:	194bc83a 	sub	r5,r3,r5
 100be98:	344d803a 	cmpltu	r6,r6,r17
 100be9c:	29a7c83a 	sub	r19,r5,r6
 100bea0:	3825883a 	mov	r18,r7
 100bea4:	983f841e 	bne	r19,zero,100bcb8 <__subdf3+0x198>
 100bea8:	8809883a 	mov	r4,r17
 100beac:	100c5ec0 	call	100c5ec <__clzsi2>
 100beb0:	10800804 	addi	r2,r2,32
 100beb4:	10fffe04 	addi	r3,r2,-8
 100beb8:	010007c4 	movi	r4,31
 100bebc:	20ff830e 	bge	r4,r3,100bccc <__subdf3+0x1ac>
 100bec0:	14fff604 	addi	r19,r2,-40
 100bec4:	8ce6983a 	sll	r19,r17,r19
 100bec8:	0023883a 	mov	r17,zero
 100becc:	1c3f860e 	bge	r3,r16,100bce8 <__subdf3+0x1c8>
 100bed0:	017fe034 	movhi	r5,65408
 100bed4:	297fffc4 	addi	r5,r5,-1
 100bed8:	80e1c83a 	sub	r16,r16,r3
 100bedc:	994a703a 	and	r5,r19,r5
 100bee0:	003f3206 	br	100bbac <__subdf3+0x8c>
 100bee4:	0009883a 	mov	r4,zero
 100bee8:	0005883a 	mov	r2,zero
 100beec:	003f4706 	br	100bc0c <__subdf3+0xec>
 100bef0:	198cb03a 	or	r6,r3,r6
 100bef4:	300cc03a 	cmpne	r6,r6,zero
 100bef8:	0005883a 	mov	r2,zero
 100befc:	003f6306 	br	100bc8c <__subdf3+0x16c>
 100bf00:	10009d1e 	bne	r2,zero,100c178 <__subdf3+0x658>
 100bf04:	81c00044 	addi	r7,r16,1
 100bf08:	3881ffcc 	andi	r2,r7,2047
 100bf0c:	02400044 	movi	r9,1
 100bf10:	4880680e 	bge	r9,r2,100c0b4 <__subdf3+0x594>
 100bf14:	0081ffc4 	movi	r2,2047
 100bf18:	3880ae26 	beq	r7,r2,100c1d4 <__subdf3+0x6b4>
 100bf1c:	344d883a 	add	r6,r6,r17
 100bf20:	3463803a 	cmpltu	r17,r6,r17
 100bf24:	194b883a 	add	r5,r3,r5
 100bf28:	2c4b883a 	add	r5,r5,r17
 100bf2c:	282297fa 	slli	r17,r5,31
 100bf30:	300cd07a 	srli	r6,r6,1
 100bf34:	280ad07a 	srli	r5,r5,1
 100bf38:	3821883a 	mov	r16,r7
 100bf3c:	89a2b03a 	or	r17,r17,r6
 100bf40:	003f1a06 	br	100bbac <__subdf3+0x8c>
 100bf44:	0101ffc4 	movi	r4,2047
 100bf48:	813f431e 	bne	r16,r4,100bc58 <__subdf3+0x138>
 100bf4c:	003f1706 	br	100bbac <__subdf3+0x8c>
 100bf50:	80bff844 	addi	r2,r16,-31
 100bf54:	00c00804 	movi	r3,32
 100bf58:	9884d83a 	srl	r2,r19,r2
 100bf5c:	28c05126 	beq	r5,r3,100c0a4 <__subdf3+0x584>
 100bf60:	00c00fc4 	movi	r3,63
 100bf64:	1c21c83a 	sub	r16,r3,r16
 100bf68:	9c26983a 	sll	r19,r19,r16
 100bf6c:	9c62b03a 	or	r17,r19,r17
 100bf70:	8822c03a 	cmpne	r17,r17,zero
 100bf74:	88a2b03a 	or	r17,r17,r2
 100bf78:	000b883a 	mov	r5,zero
 100bf7c:	0021883a 	mov	r16,zero
 100bf80:	003fb406 	br	100be54 <__subdf3+0x334>
 100bf84:	113ff804 	addi	r4,r2,-32
 100bf88:	01c00804 	movi	r7,32
 100bf8c:	1908d83a 	srl	r4,r3,r4
 100bf90:	11c04626 	beq	r2,r7,100c0ac <__subdf3+0x58c>
 100bf94:	01c01004 	movi	r7,64
 100bf98:	3885c83a 	sub	r2,r7,r2
 100bf9c:	1884983a 	sll	r2,r3,r2
 100bfa0:	118cb03a 	or	r6,r2,r6
 100bfa4:	300cc03a 	cmpne	r6,r6,zero
 100bfa8:	310cb03a 	or	r6,r6,r4
 100bfac:	0005883a 	mov	r2,zero
 100bfb0:	003f3606 	br	100bc8c <__subdf3+0x16c>
 100bfb4:	80002b26 	beq	r16,zero,100c064 <__subdf3+0x544>
 100bfb8:	0101ffc4 	movi	r4,2047
 100bfbc:	51006926 	beq	r10,r4,100c164 <__subdf3+0x644>
 100bfc0:	0085c83a 	sub	r2,zero,r2
 100bfc4:	29402034 	orhi	r5,r5,128
 100bfc8:	01000e04 	movi	r4,56
 100bfcc:	20807d16 	blt	r4,r2,100c1c4 <__subdf3+0x6a4>
 100bfd0:	010007c4 	movi	r4,31
 100bfd4:	2080d916 	blt	r4,r2,100c33c <__subdf3+0x81c>
 100bfd8:	01000804 	movi	r4,32
 100bfdc:	2089c83a 	sub	r4,r4,r2
 100bfe0:	2912983a 	sll	r9,r5,r4
 100bfe4:	8890d83a 	srl	r8,r17,r2
 100bfe8:	8908983a 	sll	r4,r17,r4
 100bfec:	2884d83a 	srl	r2,r5,r2
 100bff0:	4a22b03a 	or	r17,r9,r8
 100bff4:	2008c03a 	cmpne	r4,r4,zero
 100bff8:	8922b03a 	or	r17,r17,r4
 100bffc:	3463c83a 	sub	r17,r6,r17
 100c000:	1885c83a 	sub	r2,r3,r2
 100c004:	344d803a 	cmpltu	r6,r6,r17
 100c008:	118bc83a 	sub	r5,r2,r6
 100c00c:	5021883a 	mov	r16,r10
 100c010:	3825883a 	mov	r18,r7
 100c014:	003f2206 	br	100bca0 <__subdf3+0x180>
 100c018:	9886b03a 	or	r3,r19,r2
 100c01c:	18001c1e 	bne	r3,zero,100c090 <__subdf3+0x570>
 100c020:	0011883a 	mov	r8,zero
 100c024:	000b883a 	mov	r5,zero
 100c028:	0023883a 	mov	r17,zero
 100c02c:	0021883a 	mov	r16,zero
 100c030:	003f3e06 	br	100bd2c <__subdf3+0x20c>
 100c034:	010007c4 	movi	r4,31
 100c038:	20803c16 	blt	r4,r2,100c12c <__subdf3+0x60c>
 100c03c:	01000804 	movi	r4,32
 100c040:	2089c83a 	sub	r4,r4,r2
 100c044:	1912983a 	sll	r9,r3,r4
 100c048:	308ed83a 	srl	r7,r6,r2
 100c04c:	3108983a 	sll	r4,r6,r4
 100c050:	1884d83a 	srl	r2,r3,r2
 100c054:	49ceb03a 	or	r7,r9,r7
 100c058:	2008c03a 	cmpne	r4,r4,zero
 100c05c:	390eb03a 	or	r7,r7,r4
 100c060:	003f4706 	br	100bd80 <__subdf3+0x260>
 100c064:	2c48b03a 	or	r4,r5,r17
 100c068:	20003e26 	beq	r4,zero,100c164 <__subdf3+0x644>
 100c06c:	0084303a 	nor	r2,zero,r2
 100c070:	10003a1e 	bne	r2,zero,100c15c <__subdf3+0x63c>
 100c074:	3463c83a 	sub	r17,r6,r17
 100c078:	194bc83a 	sub	r5,r3,r5
 100c07c:	344d803a 	cmpltu	r6,r6,r17
 100c080:	298bc83a 	sub	r5,r5,r6
 100c084:	5021883a 	mov	r16,r10
 100c088:	3825883a 	mov	r18,r7
 100c08c:	003f0406 	br	100bca0 <__subdf3+0x180>
 100c090:	1023883a 	mov	r17,r2
 100c094:	003f0706 	br	100bcb4 <__subdf3+0x194>
 100c098:	0101ffc4 	movi	r4,2047
 100c09c:	813f331e 	bne	r16,r4,100bd6c <__subdf3+0x24c>
 100c0a0:	003ec206 	br	100bbac <__subdf3+0x8c>
 100c0a4:	0027883a 	mov	r19,zero
 100c0a8:	003fb006 	br	100bf6c <__subdf3+0x44c>
 100c0ac:	0005883a 	mov	r2,zero
 100c0b0:	003fbb06 	br	100bfa0 <__subdf3+0x480>
 100c0b4:	2c44b03a 	or	r2,r5,r17
 100c0b8:	80008b1e 	bne	r16,zero,100c2e8 <__subdf3+0x7c8>
 100c0bc:	1000b526 	beq	r2,zero,100c394 <__subdf3+0x874>
 100c0c0:	1984b03a 	or	r2,r3,r6
 100c0c4:	103eb926 	beq	r2,zero,100bbac <__subdf3+0x8c>
 100c0c8:	3449883a 	add	r4,r6,r17
 100c0cc:	2463803a 	cmpltu	r17,r4,r17
 100c0d0:	194b883a 	add	r5,r3,r5
 100c0d4:	2c4b883a 	add	r5,r5,r17
 100c0d8:	2880202c 	andhi	r2,r5,128
 100c0dc:	2023883a 	mov	r17,r4
 100c0e0:	103f5c26 	beq	r2,zero,100be54 <__subdf3+0x334>
 100c0e4:	00bfe034 	movhi	r2,65408
 100c0e8:	10bfffc4 	addi	r2,r2,-1
 100c0ec:	4821883a 	mov	r16,r9
 100c0f0:	288a703a 	and	r5,r5,r2
 100c0f4:	003ead06 	br	100bbac <__subdf3+0x8c>
 100c0f8:	2c44b03a 	or	r2,r5,r17
 100c0fc:	8000291e 	bne	r16,zero,100c1a4 <__subdf3+0x684>
 100c100:	10004f1e 	bne	r2,zero,100c240 <__subdf3+0x720>
 100c104:	1984b03a 	or	r2,r3,r6
 100c108:	10000426 	beq	r2,zero,100c11c <__subdf3+0x5fc>
 100c10c:	180b883a 	mov	r5,r3
 100c110:	3023883a 	mov	r17,r6
 100c114:	3825883a 	mov	r18,r7
 100c118:	003ea406 	br	100bbac <__subdf3+0x8c>
 100c11c:	0011883a 	mov	r8,zero
 100c120:	000b883a 	mov	r5,zero
 100c124:	0023883a 	mov	r17,zero
 100c128:	003f0006 	br	100bd2c <__subdf3+0x20c>
 100c12c:	11fff804 	addi	r7,r2,-32
 100c130:	19c8d83a 	srl	r4,r3,r7
 100c134:	01c00804 	movi	r7,32
 100c138:	11c07e26 	beq	r2,r7,100c334 <__subdf3+0x814>
 100c13c:	01c01004 	movi	r7,64
 100c140:	3885c83a 	sub	r2,r7,r2
 100c144:	1884983a 	sll	r2,r3,r2
 100c148:	118cb03a 	or	r6,r2,r6
 100c14c:	300ec03a 	cmpne	r7,r6,zero
 100c150:	390eb03a 	or	r7,r7,r4
 100c154:	0005883a 	mov	r2,zero
 100c158:	003f0906 	br	100bd80 <__subdf3+0x260>
 100c15c:	0101ffc4 	movi	r4,2047
 100c160:	513f991e 	bne	r10,r4,100bfc8 <__subdf3+0x4a8>
 100c164:	180b883a 	mov	r5,r3
 100c168:	3023883a 	mov	r17,r6
 100c16c:	5021883a 	mov	r16,r10
 100c170:	3825883a 	mov	r18,r7
 100c174:	003e8d06 	br	100bbac <__subdf3+0x8c>
 100c178:	80001a1e 	bne	r16,zero,100c1e4 <__subdf3+0x6c4>
 100c17c:	2c48b03a 	or	r4,r5,r17
 100c180:	20005526 	beq	r4,zero,100c2d8 <__subdf3+0x7b8>
 100c184:	0084303a 	nor	r2,zero,r2
 100c188:	1000511e 	bne	r2,zero,100c2d0 <__subdf3+0x7b0>
 100c18c:	89a3883a 	add	r17,r17,r6
 100c190:	194b883a 	add	r5,r3,r5
 100c194:	898d803a 	cmpltu	r6,r17,r6
 100c198:	298b883a 	add	r5,r5,r6
 100c19c:	5021883a 	mov	r16,r10
 100c1a0:	003efc06 	br	100bd94 <__subdf3+0x274>
 100c1a4:	1000341e 	bne	r2,zero,100c278 <__subdf3+0x758>
 100c1a8:	1984b03a 	or	r2,r3,r6
 100c1ac:	10006f26 	beq	r2,zero,100c36c <__subdf3+0x84c>
 100c1b0:	180b883a 	mov	r5,r3
 100c1b4:	3023883a 	mov	r17,r6
 100c1b8:	3825883a 	mov	r18,r7
 100c1bc:	0401ffc4 	movi	r16,2047
 100c1c0:	003e7a06 	br	100bbac <__subdf3+0x8c>
 100c1c4:	2c62b03a 	or	r17,r5,r17
 100c1c8:	8822c03a 	cmpne	r17,r17,zero
 100c1cc:	0005883a 	mov	r2,zero
 100c1d0:	003f8a06 	br	100bffc <__subdf3+0x4dc>
 100c1d4:	3821883a 	mov	r16,r7
 100c1d8:	000b883a 	mov	r5,zero
 100c1dc:	0023883a 	mov	r17,zero
 100c1e0:	003ed206 	br	100bd2c <__subdf3+0x20c>
 100c1e4:	0101ffc4 	movi	r4,2047
 100c1e8:	51003b26 	beq	r10,r4,100c2d8 <__subdf3+0x7b8>
 100c1ec:	0085c83a 	sub	r2,zero,r2
 100c1f0:	29402034 	orhi	r5,r5,128
 100c1f4:	01000e04 	movi	r4,56
 100c1f8:	20806216 	blt	r4,r2,100c384 <__subdf3+0x864>
 100c1fc:	010007c4 	movi	r4,31
 100c200:	20806b16 	blt	r4,r2,100c3b0 <__subdf3+0x890>
 100c204:	01000804 	movi	r4,32
 100c208:	2089c83a 	sub	r4,r4,r2
 100c20c:	2912983a 	sll	r9,r5,r4
 100c210:	888ed83a 	srl	r7,r17,r2
 100c214:	8908983a 	sll	r4,r17,r4
 100c218:	2884d83a 	srl	r2,r5,r2
 100c21c:	49e2b03a 	or	r17,r9,r7
 100c220:	2008c03a 	cmpne	r4,r4,zero
 100c224:	8922b03a 	or	r17,r17,r4
 100c228:	89a3883a 	add	r17,r17,r6
 100c22c:	10c5883a 	add	r2,r2,r3
 100c230:	898d803a 	cmpltu	r6,r17,r6
 100c234:	118b883a 	add	r5,r2,r6
 100c238:	5021883a 	mov	r16,r10
 100c23c:	003ed506 	br	100bd94 <__subdf3+0x274>
 100c240:	1984b03a 	or	r2,r3,r6
 100c244:	103e5926 	beq	r2,zero,100bbac <__subdf3+0x8c>
 100c248:	8989c83a 	sub	r4,r17,r6
 100c24c:	8911803a 	cmpltu	r8,r17,r4
 100c250:	28c5c83a 	sub	r2,r5,r3
 100c254:	1205c83a 	sub	r2,r2,r8
 100c258:	1200202c 	andhi	r8,r2,128
 100c25c:	403ef926 	beq	r8,zero,100be44 <__subdf3+0x324>
 100c260:	3463c83a 	sub	r17,r6,r17
 100c264:	194bc83a 	sub	r5,r3,r5
 100c268:	344d803a 	cmpltu	r6,r6,r17
 100c26c:	298bc83a 	sub	r5,r5,r6
 100c270:	3825883a 	mov	r18,r7
 100c274:	003e4d06 	br	100bbac <__subdf3+0x8c>
 100c278:	1984b03a 	or	r2,r3,r6
 100c27c:	10002b26 	beq	r2,zero,100c32c <__subdf3+0x80c>
 100c280:	2808d0fa 	srli	r4,r5,3
 100c284:	8822d0fa 	srli	r17,r17,3
 100c288:	280a977a 	slli	r5,r5,29
 100c28c:	2080022c 	andhi	r2,r4,8
 100c290:	2c62b03a 	or	r17,r5,r17
 100c294:	10000826 	beq	r2,zero,100c2b8 <__subdf3+0x798>
 100c298:	1810d0fa 	srli	r8,r3,3
 100c29c:	4080022c 	andhi	r2,r8,8
 100c2a0:	1000051e 	bne	r2,zero,100c2b8 <__subdf3+0x798>
 100c2a4:	300cd0fa 	srli	r6,r6,3
 100c2a8:	1804977a 	slli	r2,r3,29
 100c2ac:	4009883a 	mov	r4,r8
 100c2b0:	3825883a 	mov	r18,r7
 100c2b4:	11a2b03a 	or	r17,r2,r6
 100c2b8:	880ad77a 	srli	r5,r17,29
 100c2bc:	200890fa 	slli	r4,r4,3
 100c2c0:	882290fa 	slli	r17,r17,3
 100c2c4:	0401ffc4 	movi	r16,2047
 100c2c8:	290ab03a 	or	r5,r5,r4
 100c2cc:	003e3706 	br	100bbac <__subdf3+0x8c>
 100c2d0:	0101ffc4 	movi	r4,2047
 100c2d4:	513fc71e 	bne	r10,r4,100c1f4 <__subdf3+0x6d4>
 100c2d8:	180b883a 	mov	r5,r3
 100c2dc:	3023883a 	mov	r17,r6
 100c2e0:	5021883a 	mov	r16,r10
 100c2e4:	003e3106 	br	100bbac <__subdf3+0x8c>
 100c2e8:	10002d26 	beq	r2,zero,100c3a0 <__subdf3+0x880>
 100c2ec:	1984b03a 	or	r2,r3,r6
 100c2f0:	10000e26 	beq	r2,zero,100c32c <__subdf3+0x80c>
 100c2f4:	2808d0fa 	srli	r4,r5,3
 100c2f8:	8822d0fa 	srli	r17,r17,3
 100c2fc:	280a977a 	slli	r5,r5,29
 100c300:	2080022c 	andhi	r2,r4,8
 100c304:	2c62b03a 	or	r17,r5,r17
 100c308:	103feb26 	beq	r2,zero,100c2b8 <__subdf3+0x798>
 100c30c:	180ed0fa 	srli	r7,r3,3
 100c310:	3880022c 	andhi	r2,r7,8
 100c314:	103fe81e 	bne	r2,zero,100c2b8 <__subdf3+0x798>
 100c318:	300cd0fa 	srli	r6,r6,3
 100c31c:	1804977a 	slli	r2,r3,29
 100c320:	3809883a 	mov	r4,r7
 100c324:	11a2b03a 	or	r17,r2,r6
 100c328:	003fe306 	br	100c2b8 <__subdf3+0x798>
 100c32c:	0401ffc4 	movi	r16,2047
 100c330:	003e1e06 	br	100bbac <__subdf3+0x8c>
 100c334:	0005883a 	mov	r2,zero
 100c338:	003f8306 	br	100c148 <__subdf3+0x628>
 100c33c:	113ff804 	addi	r4,r2,-32
 100c340:	02000804 	movi	r8,32
 100c344:	2908d83a 	srl	r4,r5,r4
 100c348:	12002526 	beq	r2,r8,100c3e0 <__subdf3+0x8c0>
 100c34c:	02001004 	movi	r8,64
 100c350:	4085c83a 	sub	r2,r8,r2
 100c354:	288a983a 	sll	r5,r5,r2
 100c358:	2c62b03a 	or	r17,r5,r17
 100c35c:	8822c03a 	cmpne	r17,r17,zero
 100c360:	8922b03a 	or	r17,r17,r4
 100c364:	0005883a 	mov	r2,zero
 100c368:	003f2406 	br	100bffc <__subdf3+0x4dc>
 100c36c:	01402034 	movhi	r5,128
 100c370:	0011883a 	mov	r8,zero
 100c374:	297fffc4 	addi	r5,r5,-1
 100c378:	047ffe04 	movi	r17,-8
 100c37c:	0401ffc4 	movi	r16,2047
 100c380:	003e6a06 	br	100bd2c <__subdf3+0x20c>
 100c384:	2c62b03a 	or	r17,r5,r17
 100c388:	8822c03a 	cmpne	r17,r17,zero
 100c38c:	0005883a 	mov	r2,zero
 100c390:	003fa506 	br	100c228 <__subdf3+0x708>
 100c394:	180b883a 	mov	r5,r3
 100c398:	3023883a 	mov	r17,r6
 100c39c:	003e0306 	br	100bbac <__subdf3+0x8c>
 100c3a0:	180b883a 	mov	r5,r3
 100c3a4:	3023883a 	mov	r17,r6
 100c3a8:	0401ffc4 	movi	r16,2047
 100c3ac:	003dff06 	br	100bbac <__subdf3+0x8c>
 100c3b0:	113ff804 	addi	r4,r2,-32
 100c3b4:	01c00804 	movi	r7,32
 100c3b8:	2908d83a 	srl	r4,r5,r4
 100c3bc:	11c00a26 	beq	r2,r7,100c3e8 <__subdf3+0x8c8>
 100c3c0:	01c01004 	movi	r7,64
 100c3c4:	3885c83a 	sub	r2,r7,r2
 100c3c8:	288a983a 	sll	r5,r5,r2
 100c3cc:	2c62b03a 	or	r17,r5,r17
 100c3d0:	8822c03a 	cmpne	r17,r17,zero
 100c3d4:	8922b03a 	or	r17,r17,r4
 100c3d8:	0005883a 	mov	r2,zero
 100c3dc:	003f9206 	br	100c228 <__subdf3+0x708>
 100c3e0:	000b883a 	mov	r5,zero
 100c3e4:	003fdc06 	br	100c358 <__subdf3+0x838>
 100c3e8:	000b883a 	mov	r5,zero
 100c3ec:	003ff706 	br	100c3cc <__subdf3+0x8ac>

0100c3f0 <__fixdfsi>:
 100c3f0:	2806d53a 	srli	r3,r5,20
 100c3f4:	00800434 	movhi	r2,16
 100c3f8:	10bfffc4 	addi	r2,r2,-1
 100c3fc:	18c1ffcc 	andi	r3,r3,2047
 100c400:	0180ff84 	movi	r6,1022
 100c404:	2884703a 	and	r2,r5,r2
 100c408:	280ad7fa 	srli	r5,r5,31
 100c40c:	30c0130e 	bge	r6,r3,100c45c <__fixdfsi+0x6c>
 100c410:	01810744 	movi	r6,1053
 100c414:	30c00d16 	blt	r6,r3,100c44c <__fixdfsi+0x5c>
 100c418:	01810cc4 	movi	r6,1075
 100c41c:	30cdc83a 	sub	r6,r6,r3
 100c420:	01c007c4 	movi	r7,31
 100c424:	10800434 	orhi	r2,r2,16
 100c428:	39800e0e 	bge	r7,r6,100c464 <__fixdfsi+0x74>
 100c42c:	010104c4 	movi	r4,1043
 100c430:	20c7c83a 	sub	r3,r4,r3
 100c434:	10c6d83a 	srl	r3,r2,r3
 100c438:	29403fcc 	andi	r5,r5,255
 100c43c:	0145c83a 	sub	r2,zero,r5
 100c440:	1884f03a 	xor	r2,r3,r2
 100c444:	1145883a 	add	r2,r2,r5
 100c448:	f800283a 	ret
 100c44c:	00a00034 	movhi	r2,32768
 100c450:	10bfffc4 	addi	r2,r2,-1
 100c454:	2885883a 	add	r2,r5,r2
 100c458:	f800283a 	ret
 100c45c:	0005883a 	mov	r2,zero
 100c460:	f800283a 	ret
 100c464:	18fefb44 	addi	r3,r3,-1043
 100c468:	2188d83a 	srl	r4,r4,r6
 100c46c:	10c6983a 	sll	r3,r2,r3
 100c470:	20c6b03a 	or	r3,r4,r3
 100c474:	003ff006 	br	100c438 <__fixdfsi+0x48>

0100c478 <__floatsidf>:
 100c478:	defffd04 	addi	sp,sp,-12
 100c47c:	dc400115 	stw	r17,4(sp)
 100c480:	dfc00215 	stw	ra,8(sp)
 100c484:	dc000015 	stw	r16,0(sp)
 100c488:	2023883a 	mov	r17,r4
 100c48c:	20001426 	beq	r4,zero,100c4e0 <__floatsidf+0x68>
 100c490:	2020d7fa 	srli	r16,r4,31
 100c494:	80000126 	beq	r16,zero,100c49c <__floatsidf+0x24>
 100c498:	0123c83a 	sub	r17,zero,r4
 100c49c:	8809883a 	mov	r4,r17
 100c4a0:	100c5ec0 	call	100c5ec <__clzsi2>
 100c4a4:	01410784 	movi	r5,1054
 100c4a8:	00c00284 	movi	r3,10
 100c4ac:	288bc83a 	sub	r5,r5,r2
 100c4b0:	18801c16 	blt	r3,r2,100c524 <__floatsidf+0xac>
 100c4b4:	00c002c4 	movi	r3,11
 100c4b8:	1887c83a 	sub	r3,r3,r2
 100c4bc:	88c8d83a 	srl	r4,r17,r3
 100c4c0:	00c00434 	movhi	r3,16
 100c4c4:	18ffffc4 	addi	r3,r3,-1
 100c4c8:	10800544 	addi	r2,r2,21
 100c4cc:	20c8703a 	and	r4,r4,r3
 100c4d0:	8884983a 	sll	r2,r17,r2
 100c4d4:	28c1ffcc 	andi	r3,r5,2047
 100c4d8:	800d883a 	mov	r6,r16
 100c4dc:	00000406 	br	100c4f0 <__floatsidf+0x78>
 100c4e0:	000d883a 	mov	r6,zero
 100c4e4:	0007883a 	mov	r3,zero
 100c4e8:	0009883a 	mov	r4,zero
 100c4ec:	0005883a 	mov	r2,zero
 100c4f0:	180a953a 	slli	r5,r3,20
 100c4f4:	31803fcc 	andi	r6,r6,255
 100c4f8:	00c00434 	movhi	r3,16
 100c4fc:	300c97fa 	slli	r6,r6,31
 100c500:	18ffffc4 	addi	r3,r3,-1
 100c504:	20c6703a 	and	r3,r4,r3
 100c508:	1946b03a 	or	r3,r3,r5
 100c50c:	1986b03a 	or	r3,r3,r6
 100c510:	dfc00217 	ldw	ra,8(sp)
 100c514:	dc400117 	ldw	r17,4(sp)
 100c518:	dc000017 	ldw	r16,0(sp)
 100c51c:	dec00304 	addi	sp,sp,12
 100c520:	f800283a 	ret
 100c524:	10fffd44 	addi	r3,r2,-11
 100c528:	88c8983a 	sll	r4,r17,r3
 100c52c:	00800434 	movhi	r2,16
 100c530:	10bfffc4 	addi	r2,r2,-1
 100c534:	2088703a 	and	r4,r4,r2
 100c538:	28c1ffcc 	andi	r3,r5,2047
 100c53c:	800d883a 	mov	r6,r16
 100c540:	0005883a 	mov	r2,zero
 100c544:	003fea06 	br	100c4f0 <__floatsidf+0x78>

0100c548 <__floatunsidf>:
 100c548:	defffe04 	addi	sp,sp,-8
 100c54c:	dc000015 	stw	r16,0(sp)
 100c550:	dfc00115 	stw	ra,4(sp)
 100c554:	2021883a 	mov	r16,r4
 100c558:	20001026 	beq	r4,zero,100c59c <__floatunsidf+0x54>
 100c55c:	100c5ec0 	call	100c5ec <__clzsi2>
 100c560:	01410784 	movi	r5,1054
 100c564:	100d883a 	mov	r6,r2
 100c568:	288bc83a 	sub	r5,r5,r2
 100c56c:	00800284 	movi	r2,10
 100c570:	11801616 	blt	r2,r6,100c5cc <__floatunsidf+0x84>
 100c574:	008002c4 	movi	r2,11
 100c578:	1185c83a 	sub	r2,r2,r6
 100c57c:	8084d83a 	srl	r2,r16,r2
 100c580:	00c00434 	movhi	r3,16
 100c584:	31c00544 	addi	r7,r6,21
 100c588:	18ffffc4 	addi	r3,r3,-1
 100c58c:	81e0983a 	sll	r16,r16,r7
 100c590:	10cc703a 	and	r6,r2,r3
 100c594:	2941ffcc 	andi	r5,r5,2047
 100c598:	00000206 	br	100c5a4 <__floatunsidf+0x5c>
 100c59c:	000b883a 	mov	r5,zero
 100c5a0:	000d883a 	mov	r6,zero
 100c5a4:	280a953a 	slli	r5,r5,20
 100c5a8:	00c00434 	movhi	r3,16
 100c5ac:	18ffffc4 	addi	r3,r3,-1
 100c5b0:	30c6703a 	and	r3,r6,r3
 100c5b4:	8005883a 	mov	r2,r16
 100c5b8:	1946b03a 	or	r3,r3,r5
 100c5bc:	dfc00117 	ldw	ra,4(sp)
 100c5c0:	dc000017 	ldw	r16,0(sp)
 100c5c4:	dec00204 	addi	sp,sp,8
 100c5c8:	f800283a 	ret
 100c5cc:	31bffd44 	addi	r6,r6,-11
 100c5d0:	818c983a 	sll	r6,r16,r6
 100c5d4:	00800434 	movhi	r2,16
 100c5d8:	10bfffc4 	addi	r2,r2,-1
 100c5dc:	2941ffcc 	andi	r5,r5,2047
 100c5e0:	0021883a 	mov	r16,zero
 100c5e4:	308c703a 	and	r6,r6,r2
 100c5e8:	003fee06 	br	100c5a4 <__floatunsidf+0x5c>

0100c5ec <__clzsi2>:
 100c5ec:	00bfffd4 	movui	r2,65535
 100c5f0:	11000b36 	bltu	r2,r4,100c620 <__clzsi2+0x34>
 100c5f4:	00803fc4 	movi	r2,255
 100c5f8:	1100122e 	bgeu	r2,r4,100c644 <__clzsi2+0x58>
 100c5fc:	00c00204 	movi	r3,8
 100c600:	01400604 	movi	r5,24
 100c604:	20c8d83a 	srl	r4,r4,r3
 100c608:	00804074 	movhi	r2,257
 100c60c:	10bbc204 	addi	r2,r2,-4344
 100c610:	1109883a 	add	r4,r2,r4
 100c614:	20800003 	ldbu	r2,0(r4)
 100c618:	2885c83a 	sub	r2,r5,r2
 100c61c:	f800283a 	ret
 100c620:	00804034 	movhi	r2,256
 100c624:	10bfffc4 	addi	r2,r2,-1
 100c628:	11000336 	bltu	r2,r4,100c638 <__clzsi2+0x4c>
 100c62c:	00c00404 	movi	r3,16
 100c630:	180b883a 	mov	r5,r3
 100c634:	003ff306 	br	100c604 <__clzsi2+0x18>
 100c638:	00c00604 	movi	r3,24
 100c63c:	01400204 	movi	r5,8
 100c640:	003ff006 	br	100c604 <__clzsi2+0x18>
 100c644:	0007883a 	mov	r3,zero
 100c648:	01400804 	movi	r5,32
 100c64c:	003fed06 	br	100c604 <__clzsi2+0x18>

0100c650 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 100c650:	defffe04 	addi	sp,sp,-8
 100c654:	dfc00115 	stw	ra,4(sp)
 100c658:	df000015 	stw	fp,0(sp)
 100c65c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 100c660:	00804074 	movhi	r2,257
 100c664:	1082c304 	addi	r2,r2,2828
 100c668:	10800017 	ldw	r2,0(r2)
 100c66c:	10000526 	beq	r2,zero,100c684 <alt_get_errno+0x34>
 100c670:	00804074 	movhi	r2,257
 100c674:	1082c304 	addi	r2,r2,2828
 100c678:	10800017 	ldw	r2,0(r2)
 100c67c:	103ee83a 	callr	r2
 100c680:	00000206 	br	100c68c <alt_get_errno+0x3c>
 100c684:	00804074 	movhi	r2,257
 100c688:	10898904 	addi	r2,r2,9764
}
 100c68c:	e037883a 	mov	sp,fp
 100c690:	dfc00117 	ldw	ra,4(sp)
 100c694:	df000017 	ldw	fp,0(sp)
 100c698:	dec00204 	addi	sp,sp,8
 100c69c:	f800283a 	ret

0100c6a0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 100c6a0:	defffb04 	addi	sp,sp,-20
 100c6a4:	dfc00415 	stw	ra,16(sp)
 100c6a8:	df000315 	stw	fp,12(sp)
 100c6ac:	df000304 	addi	fp,sp,12
 100c6b0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 100c6b4:	e0bfff17 	ldw	r2,-4(fp)
 100c6b8:	10000616 	blt	r2,zero,100c6d4 <close+0x34>
 100c6bc:	e0bfff17 	ldw	r2,-4(fp)
 100c6c0:	10c00324 	muli	r3,r2,12
 100c6c4:	00804074 	movhi	r2,257
 100c6c8:	10be4004 	addi	r2,r2,-1792
 100c6cc:	1885883a 	add	r2,r3,r2
 100c6d0:	00000106 	br	100c6d8 <close+0x38>
 100c6d4:	0005883a 	mov	r2,zero
 100c6d8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 100c6dc:	e0bffd17 	ldw	r2,-12(fp)
 100c6e0:	10001926 	beq	r2,zero,100c748 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 100c6e4:	e0bffd17 	ldw	r2,-12(fp)
 100c6e8:	10800017 	ldw	r2,0(r2)
 100c6ec:	10800417 	ldw	r2,16(r2)
 100c6f0:	10000626 	beq	r2,zero,100c70c <close+0x6c>
 100c6f4:	e0bffd17 	ldw	r2,-12(fp)
 100c6f8:	10800017 	ldw	r2,0(r2)
 100c6fc:	10800417 	ldw	r2,16(r2)
 100c700:	e13ffd17 	ldw	r4,-12(fp)
 100c704:	103ee83a 	callr	r2
 100c708:	00000106 	br	100c710 <close+0x70>
 100c70c:	0005883a 	mov	r2,zero
 100c710:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 100c714:	e13fff17 	ldw	r4,-4(fp)
 100c718:	100cd9c0 	call	100cd9c <alt_release_fd>
    if (rval < 0)
 100c71c:	e0bffe17 	ldw	r2,-8(fp)
 100c720:	1000070e 	bge	r2,zero,100c740 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 100c724:	100c6500 	call	100c650 <alt_get_errno>
 100c728:	1007883a 	mov	r3,r2
 100c72c:	e0bffe17 	ldw	r2,-8(fp)
 100c730:	0085c83a 	sub	r2,zero,r2
 100c734:	18800015 	stw	r2,0(r3)
      return -1;
 100c738:	00bfffc4 	movi	r2,-1
 100c73c:	00000706 	br	100c75c <close+0xbc>
    }
    return 0;
 100c740:	0005883a 	mov	r2,zero
 100c744:	00000506 	br	100c75c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 100c748:	100c6500 	call	100c650 <alt_get_errno>
 100c74c:	1007883a 	mov	r3,r2
 100c750:	00801444 	movi	r2,81
 100c754:	18800015 	stw	r2,0(r3)
    return -1;
 100c758:	00bfffc4 	movi	r2,-1
  }
}
 100c75c:	e037883a 	mov	sp,fp
 100c760:	dfc00117 	ldw	ra,4(sp)
 100c764:	df000017 	ldw	fp,0(sp)
 100c768:	dec00204 	addi	sp,sp,8
 100c76c:	f800283a 	ret

0100c770 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 100c770:	defffc04 	addi	sp,sp,-16
 100c774:	df000315 	stw	fp,12(sp)
 100c778:	df000304 	addi	fp,sp,12
 100c77c:	e13ffd15 	stw	r4,-12(fp)
 100c780:	e17ffe15 	stw	r5,-8(fp)
 100c784:	e1bfff15 	stw	r6,-4(fp)
  return len;
 100c788:	e0bfff17 	ldw	r2,-4(fp)
}
 100c78c:	e037883a 	mov	sp,fp
 100c790:	df000017 	ldw	fp,0(sp)
 100c794:	dec00104 	addi	sp,sp,4
 100c798:	f800283a 	ret

0100c79c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 100c79c:	defffe04 	addi	sp,sp,-8
 100c7a0:	dfc00115 	stw	ra,4(sp)
 100c7a4:	df000015 	stw	fp,0(sp)
 100c7a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 100c7ac:	00804074 	movhi	r2,257
 100c7b0:	1082c304 	addi	r2,r2,2828
 100c7b4:	10800017 	ldw	r2,0(r2)
 100c7b8:	10000526 	beq	r2,zero,100c7d0 <alt_get_errno+0x34>
 100c7bc:	00804074 	movhi	r2,257
 100c7c0:	1082c304 	addi	r2,r2,2828
 100c7c4:	10800017 	ldw	r2,0(r2)
 100c7c8:	103ee83a 	callr	r2
 100c7cc:	00000206 	br	100c7d8 <alt_get_errno+0x3c>
 100c7d0:	00804074 	movhi	r2,257
 100c7d4:	10898904 	addi	r2,r2,9764
}
 100c7d8:	e037883a 	mov	sp,fp
 100c7dc:	dfc00117 	ldw	ra,4(sp)
 100c7e0:	df000017 	ldw	fp,0(sp)
 100c7e4:	dec00204 	addi	sp,sp,8
 100c7e8:	f800283a 	ret

0100c7ec <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 100c7ec:	defffb04 	addi	sp,sp,-20
 100c7f0:	dfc00415 	stw	ra,16(sp)
 100c7f4:	df000315 	stw	fp,12(sp)
 100c7f8:	df000304 	addi	fp,sp,12
 100c7fc:	e13ffe15 	stw	r4,-8(fp)
 100c800:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 100c804:	e0bffe17 	ldw	r2,-8(fp)
 100c808:	10000616 	blt	r2,zero,100c824 <fstat+0x38>
 100c80c:	e0bffe17 	ldw	r2,-8(fp)
 100c810:	10c00324 	muli	r3,r2,12
 100c814:	00804074 	movhi	r2,257
 100c818:	10be4004 	addi	r2,r2,-1792
 100c81c:	1885883a 	add	r2,r3,r2
 100c820:	00000106 	br	100c828 <fstat+0x3c>
 100c824:	0005883a 	mov	r2,zero
 100c828:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 100c82c:	e0bffd17 	ldw	r2,-12(fp)
 100c830:	10001026 	beq	r2,zero,100c874 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 100c834:	e0bffd17 	ldw	r2,-12(fp)
 100c838:	10800017 	ldw	r2,0(r2)
 100c83c:	10800817 	ldw	r2,32(r2)
 100c840:	10000726 	beq	r2,zero,100c860 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 100c844:	e0bffd17 	ldw	r2,-12(fp)
 100c848:	10800017 	ldw	r2,0(r2)
 100c84c:	10800817 	ldw	r2,32(r2)
 100c850:	e13ffd17 	ldw	r4,-12(fp)
 100c854:	e17fff17 	ldw	r5,-4(fp)
 100c858:	103ee83a 	callr	r2
 100c85c:	00000a06 	br	100c888 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 100c860:	e0bfff17 	ldw	r2,-4(fp)
 100c864:	00c80004 	movi	r3,8192
 100c868:	10c00115 	stw	r3,4(r2)
      return 0;
 100c86c:	0005883a 	mov	r2,zero
 100c870:	00000506 	br	100c888 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 100c874:	100c79c0 	call	100c79c <alt_get_errno>
 100c878:	1007883a 	mov	r3,r2
 100c87c:	00801444 	movi	r2,81
 100c880:	18800015 	stw	r2,0(r3)
    return -1;
 100c884:	00bfffc4 	movi	r2,-1
  }
}
 100c888:	e037883a 	mov	sp,fp
 100c88c:	dfc00117 	ldw	ra,4(sp)
 100c890:	df000017 	ldw	fp,0(sp)
 100c894:	dec00204 	addi	sp,sp,8
 100c898:	f800283a 	ret

0100c89c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 100c89c:	defffe04 	addi	sp,sp,-8
 100c8a0:	dfc00115 	stw	ra,4(sp)
 100c8a4:	df000015 	stw	fp,0(sp)
 100c8a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 100c8ac:	00804074 	movhi	r2,257
 100c8b0:	1082c304 	addi	r2,r2,2828
 100c8b4:	10800017 	ldw	r2,0(r2)
 100c8b8:	10000526 	beq	r2,zero,100c8d0 <alt_get_errno+0x34>
 100c8bc:	00804074 	movhi	r2,257
 100c8c0:	1082c304 	addi	r2,r2,2828
 100c8c4:	10800017 	ldw	r2,0(r2)
 100c8c8:	103ee83a 	callr	r2
 100c8cc:	00000206 	br	100c8d8 <alt_get_errno+0x3c>
 100c8d0:	00804074 	movhi	r2,257
 100c8d4:	10898904 	addi	r2,r2,9764
}
 100c8d8:	e037883a 	mov	sp,fp
 100c8dc:	dfc00117 	ldw	ra,4(sp)
 100c8e0:	df000017 	ldw	fp,0(sp)
 100c8e4:	dec00204 	addi	sp,sp,8
 100c8e8:	f800283a 	ret

0100c8ec <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 100c8ec:	deffed04 	addi	sp,sp,-76
 100c8f0:	dfc01215 	stw	ra,72(sp)
 100c8f4:	df001115 	stw	fp,68(sp)
 100c8f8:	df001104 	addi	fp,sp,68
 100c8fc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 100c900:	e0bfff17 	ldw	r2,-4(fp)
 100c904:	10000616 	blt	r2,zero,100c920 <isatty+0x34>
 100c908:	e0bfff17 	ldw	r2,-4(fp)
 100c90c:	10c00324 	muli	r3,r2,12
 100c910:	00804074 	movhi	r2,257
 100c914:	10be4004 	addi	r2,r2,-1792
 100c918:	1885883a 	add	r2,r3,r2
 100c91c:	00000106 	br	100c924 <isatty+0x38>
 100c920:	0005883a 	mov	r2,zero
 100c924:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 100c928:	e0bfef17 	ldw	r2,-68(fp)
 100c92c:	10000e26 	beq	r2,zero,100c968 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 100c930:	e0bfef17 	ldw	r2,-68(fp)
 100c934:	10800017 	ldw	r2,0(r2)
 100c938:	10800817 	ldw	r2,32(r2)
 100c93c:	1000021e 	bne	r2,zero,100c948 <isatty+0x5c>
    {
      return 1;
 100c940:	00800044 	movi	r2,1
 100c944:	00000d06 	br	100c97c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 100c948:	e0bff004 	addi	r2,fp,-64
 100c94c:	e13fff17 	ldw	r4,-4(fp)
 100c950:	100b883a 	mov	r5,r2
 100c954:	100c7ec0 	call	100c7ec <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 100c958:	e0bff117 	ldw	r2,-60(fp)
 100c95c:	10880020 	cmpeqi	r2,r2,8192
 100c960:	10803fcc 	andi	r2,r2,255
 100c964:	00000506 	br	100c97c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 100c968:	100c89c0 	call	100c89c <alt_get_errno>
 100c96c:	1007883a 	mov	r3,r2
 100c970:	00801444 	movi	r2,81
 100c974:	18800015 	stw	r2,0(r3)
    return 0;
 100c978:	0005883a 	mov	r2,zero
  }
}
 100c97c:	e037883a 	mov	sp,fp
 100c980:	dfc00117 	ldw	ra,4(sp)
 100c984:	df000017 	ldw	fp,0(sp)
 100c988:	dec00204 	addi	sp,sp,8
 100c98c:	f800283a 	ret

0100c990 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 100c990:	defffc04 	addi	sp,sp,-16
 100c994:	df000315 	stw	fp,12(sp)
 100c998:	df000304 	addi	fp,sp,12
 100c99c:	e13ffd15 	stw	r4,-12(fp)
 100c9a0:	e17ffe15 	stw	r5,-8(fp)
 100c9a4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 100c9a8:	e0fffe17 	ldw	r3,-8(fp)
 100c9ac:	e0bffd17 	ldw	r2,-12(fp)
 100c9b0:	18800c26 	beq	r3,r2,100c9e4 <alt_load_section+0x54>
  {
    while( to != end )
 100c9b4:	00000806 	br	100c9d8 <alt_load_section+0x48>
    {
      *to++ = *from++;
 100c9b8:	e0bffe17 	ldw	r2,-8(fp)
 100c9bc:	10c00104 	addi	r3,r2,4
 100c9c0:	e0fffe15 	stw	r3,-8(fp)
 100c9c4:	e0fffd17 	ldw	r3,-12(fp)
 100c9c8:	19000104 	addi	r4,r3,4
 100c9cc:	e13ffd15 	stw	r4,-12(fp)
 100c9d0:	18c00017 	ldw	r3,0(r3)
 100c9d4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 100c9d8:	e0fffe17 	ldw	r3,-8(fp)
 100c9dc:	e0bfff17 	ldw	r2,-4(fp)
 100c9e0:	18bff51e 	bne	r3,r2,100c9b8 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
 100c9e4:	e037883a 	mov	sp,fp
 100c9e8:	df000017 	ldw	fp,0(sp)
 100c9ec:	dec00104 	addi	sp,sp,4
 100c9f0:	f800283a 	ret

0100c9f4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 100c9f4:	defffe04 	addi	sp,sp,-8
 100c9f8:	dfc00115 	stw	ra,4(sp)
 100c9fc:	df000015 	stw	fp,0(sp)
 100ca00:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 100ca04:	01004074 	movhi	r4,257
 100ca08:	2102c804 	addi	r4,r4,2848
 100ca0c:	01404074 	movhi	r5,257
 100ca10:	297c0d04 	addi	r5,r5,-4044
 100ca14:	01804074 	movhi	r6,257
 100ca18:	3182c804 	addi	r6,r6,2848
 100ca1c:	100c9900 	call	100c990 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 100ca20:	01004034 	movhi	r4,256
 100ca24:	21000804 	addi	r4,r4,32
 100ca28:	01404034 	movhi	r5,256
 100ca2c:	29400804 	addi	r5,r5,32
 100ca30:	01804034 	movhi	r6,256
 100ca34:	31806f04 	addi	r6,r6,444
 100ca38:	100c9900 	call	100c990 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 100ca3c:	01004074 	movhi	r4,257
 100ca40:	213b4504 	addi	r4,r4,-4844
 100ca44:	01404074 	movhi	r5,257
 100ca48:	297b4504 	addi	r5,r5,-4844
 100ca4c:	01804074 	movhi	r6,257
 100ca50:	31bc0d04 	addi	r6,r6,-4044
 100ca54:	100c9900 	call	100c990 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 100ca58:	100dc340 	call	100dc34 <alt_dcache_flush_all>
  alt_icache_flush_all();
 100ca5c:	100de240 	call	100de24 <alt_icache_flush_all>
}
 100ca60:	e037883a 	mov	sp,fp
 100ca64:	dfc00117 	ldw	ra,4(sp)
 100ca68:	df000017 	ldw	fp,0(sp)
 100ca6c:	dec00204 	addi	sp,sp,8
 100ca70:	f800283a 	ret

0100ca74 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 100ca74:	defffe04 	addi	sp,sp,-8
 100ca78:	dfc00115 	stw	ra,4(sp)
 100ca7c:	df000015 	stw	fp,0(sp)
 100ca80:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 100ca84:	00804074 	movhi	r2,257
 100ca88:	1082c304 	addi	r2,r2,2828
 100ca8c:	10800017 	ldw	r2,0(r2)
 100ca90:	10000526 	beq	r2,zero,100caa8 <alt_get_errno+0x34>
 100ca94:	00804074 	movhi	r2,257
 100ca98:	1082c304 	addi	r2,r2,2828
 100ca9c:	10800017 	ldw	r2,0(r2)
 100caa0:	103ee83a 	callr	r2
 100caa4:	00000206 	br	100cab0 <alt_get_errno+0x3c>
 100caa8:	00804074 	movhi	r2,257
 100caac:	10898904 	addi	r2,r2,9764
}
 100cab0:	e037883a 	mov	sp,fp
 100cab4:	dfc00117 	ldw	ra,4(sp)
 100cab8:	df000017 	ldw	fp,0(sp)
 100cabc:	dec00204 	addi	sp,sp,8
 100cac0:	f800283a 	ret

0100cac4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 100cac4:	defff904 	addi	sp,sp,-28
 100cac8:	dfc00615 	stw	ra,24(sp)
 100cacc:	df000515 	stw	fp,20(sp)
 100cad0:	df000504 	addi	fp,sp,20
 100cad4:	e13ffd15 	stw	r4,-12(fp)
 100cad8:	e17ffe15 	stw	r5,-8(fp)
 100cadc:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 100cae0:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 100cae4:	e0bffd17 	ldw	r2,-12(fp)
 100cae8:	10000616 	blt	r2,zero,100cb04 <lseek+0x40>
 100caec:	e0bffd17 	ldw	r2,-12(fp)
 100caf0:	10c00324 	muli	r3,r2,12
 100caf4:	00804074 	movhi	r2,257
 100caf8:	10be4004 	addi	r2,r2,-1792
 100cafc:	1885883a 	add	r2,r3,r2
 100cb00:	00000106 	br	100cb08 <lseek+0x44>
 100cb04:	0005883a 	mov	r2,zero
 100cb08:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 100cb0c:	e0bffc17 	ldw	r2,-16(fp)
 100cb10:	10001026 	beq	r2,zero,100cb54 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 100cb14:	e0bffc17 	ldw	r2,-16(fp)
 100cb18:	10800017 	ldw	r2,0(r2)
 100cb1c:	10800717 	ldw	r2,28(r2)
 100cb20:	10000926 	beq	r2,zero,100cb48 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 100cb24:	e0bffc17 	ldw	r2,-16(fp)
 100cb28:	10800017 	ldw	r2,0(r2)
 100cb2c:	10800717 	ldw	r2,28(r2)
 100cb30:	e13ffc17 	ldw	r4,-16(fp)
 100cb34:	e17ffe17 	ldw	r5,-8(fp)
 100cb38:	e1bfff17 	ldw	r6,-4(fp)
 100cb3c:	103ee83a 	callr	r2
 100cb40:	e0bffb15 	stw	r2,-20(fp)
 100cb44:	00000506 	br	100cb5c <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 100cb48:	00bfde84 	movi	r2,-134
 100cb4c:	e0bffb15 	stw	r2,-20(fp)
 100cb50:	00000206 	br	100cb5c <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 100cb54:	00bfebc4 	movi	r2,-81
 100cb58:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 100cb5c:	e0bffb17 	ldw	r2,-20(fp)
 100cb60:	1000070e 	bge	r2,zero,100cb80 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 100cb64:	100ca740 	call	100ca74 <alt_get_errno>
 100cb68:	1007883a 	mov	r3,r2
 100cb6c:	e0bffb17 	ldw	r2,-20(fp)
 100cb70:	0085c83a 	sub	r2,zero,r2
 100cb74:	18800015 	stw	r2,0(r3)
    rc = -1;
 100cb78:	00bfffc4 	movi	r2,-1
 100cb7c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 100cb80:	e0bffb17 	ldw	r2,-20(fp)
}
 100cb84:	e037883a 	mov	sp,fp
 100cb88:	dfc00117 	ldw	ra,4(sp)
 100cb8c:	df000017 	ldw	fp,0(sp)
 100cb90:	dec00204 	addi	sp,sp,8
 100cb94:	f800283a 	ret

0100cb98 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 100cb98:	defffd04 	addi	sp,sp,-12
 100cb9c:	dfc00215 	stw	ra,8(sp)
 100cba0:	df000115 	stw	fp,4(sp)
 100cba4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 100cba8:	0009883a 	mov	r4,zero
 100cbac:	100d02c0 	call	100d02c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 100cbb0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 100cbb4:	100d0600 	call	100d060 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 100cbb8:	01004074 	movhi	r4,257
 100cbbc:	213c0504 	addi	r4,r4,-4076
 100cbc0:	01404074 	movhi	r5,257
 100cbc4:	297c0504 	addi	r5,r5,-4076
 100cbc8:	01804074 	movhi	r6,257
 100cbcc:	31bc0504 	addi	r6,r6,-4076
 100cbd0:	100e1e40 	call	100e1e4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 100cbd4:	100dd6c0 	call	100dd6c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 100cbd8:	01004074 	movhi	r4,257
 100cbdc:	21377204 	addi	r4,r4,-8760
 100cbe0:	100e9700 	call	100e970 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 100cbe4:	d126d217 	ldw	r4,-25784(gp)
 100cbe8:	d0e6d317 	ldw	r3,-25780(gp)
 100cbec:	d0a6d417 	ldw	r2,-25776(gp)
 100cbf0:	180b883a 	mov	r5,r3
 100cbf4:	100d883a 	mov	r6,r2
 100cbf8:	10002080 	call	1000208 <main>
 100cbfc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 100cc00:	01000044 	movi	r4,1
 100cc04:	100c6a00 	call	100c6a0 <close>
  exit (result);
 100cc08:	e13fff17 	ldw	r4,-4(fp)
 100cc0c:	100e9840 	call	100e984 <exit>

0100cc10 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 100cc10:	defffe04 	addi	sp,sp,-8
 100cc14:	df000115 	stw	fp,4(sp)
 100cc18:	df000104 	addi	fp,sp,4
 100cc1c:	e13fff15 	stw	r4,-4(fp)
}
 100cc20:	e037883a 	mov	sp,fp
 100cc24:	df000017 	ldw	fp,0(sp)
 100cc28:	dec00104 	addi	sp,sp,4
 100cc2c:	f800283a 	ret

0100cc30 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 100cc30:	defffe04 	addi	sp,sp,-8
 100cc34:	df000115 	stw	fp,4(sp)
 100cc38:	df000104 	addi	fp,sp,4
 100cc3c:	e13fff15 	stw	r4,-4(fp)
}
 100cc40:	e037883a 	mov	sp,fp
 100cc44:	df000017 	ldw	fp,0(sp)
 100cc48:	dec00104 	addi	sp,sp,4
 100cc4c:	f800283a 	ret

0100cc50 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 100cc50:	defffe04 	addi	sp,sp,-8
 100cc54:	dfc00115 	stw	ra,4(sp)
 100cc58:	df000015 	stw	fp,0(sp)
 100cc5c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 100cc60:	00804074 	movhi	r2,257
 100cc64:	1082c304 	addi	r2,r2,2828
 100cc68:	10800017 	ldw	r2,0(r2)
 100cc6c:	10000526 	beq	r2,zero,100cc84 <alt_get_errno+0x34>
 100cc70:	00804074 	movhi	r2,257
 100cc74:	1082c304 	addi	r2,r2,2828
 100cc78:	10800017 	ldw	r2,0(r2)
 100cc7c:	103ee83a 	callr	r2
 100cc80:	00000206 	br	100cc8c <alt_get_errno+0x3c>
 100cc84:	00804074 	movhi	r2,257
 100cc88:	10898904 	addi	r2,r2,9764
}
 100cc8c:	e037883a 	mov	sp,fp
 100cc90:	dfc00117 	ldw	ra,4(sp)
 100cc94:	df000017 	ldw	fp,0(sp)
 100cc98:	dec00204 	addi	sp,sp,8
 100cc9c:	f800283a 	ret

0100cca0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 100cca0:	defff904 	addi	sp,sp,-28
 100cca4:	dfc00615 	stw	ra,24(sp)
 100cca8:	df000515 	stw	fp,20(sp)
 100ccac:	df000504 	addi	fp,sp,20
 100ccb0:	e13ffd15 	stw	r4,-12(fp)
 100ccb4:	e17ffe15 	stw	r5,-8(fp)
 100ccb8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 100ccbc:	e0bffd17 	ldw	r2,-12(fp)
 100ccc0:	10000616 	blt	r2,zero,100ccdc <read+0x3c>
 100ccc4:	e0bffd17 	ldw	r2,-12(fp)
 100ccc8:	10c00324 	muli	r3,r2,12
 100cccc:	00804074 	movhi	r2,257
 100ccd0:	10be4004 	addi	r2,r2,-1792
 100ccd4:	1885883a 	add	r2,r3,r2
 100ccd8:	00000106 	br	100cce0 <read+0x40>
 100ccdc:	0005883a 	mov	r2,zero
 100cce0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 100cce4:	e0bffb17 	ldw	r2,-20(fp)
 100cce8:	10002226 	beq	r2,zero,100cd74 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 100ccec:	e0bffb17 	ldw	r2,-20(fp)
 100ccf0:	10800217 	ldw	r2,8(r2)
 100ccf4:	108000cc 	andi	r2,r2,3
 100ccf8:	10800060 	cmpeqi	r2,r2,1
 100ccfc:	1000181e 	bne	r2,zero,100cd60 <read+0xc0>
        (fd->dev->read))
 100cd00:	e0bffb17 	ldw	r2,-20(fp)
 100cd04:	10800017 	ldw	r2,0(r2)
 100cd08:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 100cd0c:	10001426 	beq	r2,zero,100cd60 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 100cd10:	e0bffb17 	ldw	r2,-20(fp)
 100cd14:	10800017 	ldw	r2,0(r2)
 100cd18:	10800517 	ldw	r2,20(r2)
 100cd1c:	e0ffff17 	ldw	r3,-4(fp)
 100cd20:	e13ffb17 	ldw	r4,-20(fp)
 100cd24:	e17ffe17 	ldw	r5,-8(fp)
 100cd28:	180d883a 	mov	r6,r3
 100cd2c:	103ee83a 	callr	r2
 100cd30:	e0bffc15 	stw	r2,-16(fp)
 100cd34:	e0bffc17 	ldw	r2,-16(fp)
 100cd38:	1000070e 	bge	r2,zero,100cd58 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 100cd3c:	100cc500 	call	100cc50 <alt_get_errno>
 100cd40:	1007883a 	mov	r3,r2
 100cd44:	e0bffc17 	ldw	r2,-16(fp)
 100cd48:	0085c83a 	sub	r2,zero,r2
 100cd4c:	18800015 	stw	r2,0(r3)
          return -1;
 100cd50:	00bfffc4 	movi	r2,-1
 100cd54:	00000c06 	br	100cd88 <read+0xe8>
        }
        return rval;
 100cd58:	e0bffc17 	ldw	r2,-16(fp)
 100cd5c:	00000a06 	br	100cd88 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 100cd60:	100cc500 	call	100cc50 <alt_get_errno>
 100cd64:	1007883a 	mov	r3,r2
 100cd68:	00800344 	movi	r2,13
 100cd6c:	18800015 	stw	r2,0(r3)
 100cd70:	00000406 	br	100cd84 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 100cd74:	100cc500 	call	100cc50 <alt_get_errno>
 100cd78:	1007883a 	mov	r3,r2
 100cd7c:	00801444 	movi	r2,81
 100cd80:	18800015 	stw	r2,0(r3)
  }
  return -1;
 100cd84:	00bfffc4 	movi	r2,-1
}
 100cd88:	e037883a 	mov	sp,fp
 100cd8c:	dfc00117 	ldw	ra,4(sp)
 100cd90:	df000017 	ldw	fp,0(sp)
 100cd94:	dec00204 	addi	sp,sp,8
 100cd98:	f800283a 	ret

0100cd9c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 100cd9c:	defffe04 	addi	sp,sp,-8
 100cda0:	df000115 	stw	fp,4(sp)
 100cda4:	df000104 	addi	fp,sp,4
 100cda8:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 100cdac:	e0bfff17 	ldw	r2,-4(fp)
 100cdb0:	108000d0 	cmplti	r2,r2,3
 100cdb4:	10000d1e 	bne	r2,zero,100cdec <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 100cdb8:	00804074 	movhi	r2,257
 100cdbc:	10be4004 	addi	r2,r2,-1792
 100cdc0:	e0ffff17 	ldw	r3,-4(fp)
 100cdc4:	18c00324 	muli	r3,r3,12
 100cdc8:	18c00204 	addi	r3,r3,8
 100cdcc:	10c5883a 	add	r2,r2,r3
 100cdd0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 100cdd4:	00804074 	movhi	r2,257
 100cdd8:	10be4004 	addi	r2,r2,-1792
 100cddc:	e0ffff17 	ldw	r3,-4(fp)
 100cde0:	18c00324 	muli	r3,r3,12
 100cde4:	10c5883a 	add	r2,r2,r3
 100cde8:	10000015 	stw	zero,0(r2)
  }
}
 100cdec:	e037883a 	mov	sp,fp
 100cdf0:	df000017 	ldw	fp,0(sp)
 100cdf4:	dec00104 	addi	sp,sp,4
 100cdf8:	f800283a 	ret

0100cdfc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 100cdfc:	defff904 	addi	sp,sp,-28
 100ce00:	df000615 	stw	fp,24(sp)
 100ce04:	df000604 	addi	fp,sp,24
 100ce08:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 100ce0c:	0005303a 	rdctl	r2,status
 100ce10:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 100ce14:	e0fffc17 	ldw	r3,-16(fp)
 100ce18:	00bfff84 	movi	r2,-2
 100ce1c:	1884703a 	and	r2,r3,r2
 100ce20:	1001703a 	wrctl	status,r2
  
  return context;
 100ce24:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 100ce28:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 100ce2c:	d0a00c17 	ldw	r2,-32720(gp)
 100ce30:	10c000c4 	addi	r3,r2,3
 100ce34:	00bfff04 	movi	r2,-4
 100ce38:	1884703a 	and	r2,r3,r2
 100ce3c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 100ce40:	d0e00c17 	ldw	r3,-32720(gp)
 100ce44:	e0bfff17 	ldw	r2,-4(fp)
 100ce48:	1887883a 	add	r3,r3,r2
 100ce4c:	00808034 	movhi	r2,512
 100ce50:	10800004 	addi	r2,r2,0
 100ce54:	10c0062e 	bgeu	r2,r3,100ce70 <sbrk+0x74>
 100ce58:	e0bffa17 	ldw	r2,-24(fp)
 100ce5c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 100ce60:	e0bffd17 	ldw	r2,-12(fp)
 100ce64:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 100ce68:	00bfffc4 	movi	r2,-1
 100ce6c:	00000b06 	br	100ce9c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 100ce70:	d0a00c17 	ldw	r2,-32720(gp)
 100ce74:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 100ce78:	d0e00c17 	ldw	r3,-32720(gp)
 100ce7c:	e0bfff17 	ldw	r2,-4(fp)
 100ce80:	1885883a 	add	r2,r3,r2
 100ce84:	d0a00c15 	stw	r2,-32720(gp)
 100ce88:	e0bffa17 	ldw	r2,-24(fp)
 100ce8c:	e0bffe15 	stw	r2,-8(fp)
 100ce90:	e0bffe17 	ldw	r2,-8(fp)
 100ce94:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 100ce98:	e0bffb17 	ldw	r2,-20(fp)
} 
 100ce9c:	e037883a 	mov	sp,fp
 100cea0:	df000017 	ldw	fp,0(sp)
 100cea4:	dec00104 	addi	sp,sp,4
 100cea8:	f800283a 	ret

0100ceac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 100ceac:	defffe04 	addi	sp,sp,-8
 100ceb0:	dfc00115 	stw	ra,4(sp)
 100ceb4:	df000015 	stw	fp,0(sp)
 100ceb8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 100cebc:	00804074 	movhi	r2,257
 100cec0:	1082c304 	addi	r2,r2,2828
 100cec4:	10800017 	ldw	r2,0(r2)
 100cec8:	10000526 	beq	r2,zero,100cee0 <alt_get_errno+0x34>
 100cecc:	00804074 	movhi	r2,257
 100ced0:	1082c304 	addi	r2,r2,2828
 100ced4:	10800017 	ldw	r2,0(r2)
 100ced8:	103ee83a 	callr	r2
 100cedc:	00000206 	br	100cee8 <alt_get_errno+0x3c>
 100cee0:	00804074 	movhi	r2,257
 100cee4:	10898904 	addi	r2,r2,9764
}
 100cee8:	e037883a 	mov	sp,fp
 100ceec:	dfc00117 	ldw	ra,4(sp)
 100cef0:	df000017 	ldw	fp,0(sp)
 100cef4:	dec00204 	addi	sp,sp,8
 100cef8:	f800283a 	ret

0100cefc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 100cefc:	defff904 	addi	sp,sp,-28
 100cf00:	dfc00615 	stw	ra,24(sp)
 100cf04:	df000515 	stw	fp,20(sp)
 100cf08:	df000504 	addi	fp,sp,20
 100cf0c:	e13ffd15 	stw	r4,-12(fp)
 100cf10:	e17ffe15 	stw	r5,-8(fp)
 100cf14:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 100cf18:	e0bffd17 	ldw	r2,-12(fp)
 100cf1c:	10000616 	blt	r2,zero,100cf38 <write+0x3c>
 100cf20:	e0bffd17 	ldw	r2,-12(fp)
 100cf24:	10c00324 	muli	r3,r2,12
 100cf28:	00804074 	movhi	r2,257
 100cf2c:	10be4004 	addi	r2,r2,-1792
 100cf30:	1885883a 	add	r2,r3,r2
 100cf34:	00000106 	br	100cf3c <write+0x40>
 100cf38:	0005883a 	mov	r2,zero
 100cf3c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 100cf40:	e0bffb17 	ldw	r2,-20(fp)
 100cf44:	10002126 	beq	r2,zero,100cfcc <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 100cf48:	e0bffb17 	ldw	r2,-20(fp)
 100cf4c:	10800217 	ldw	r2,8(r2)
 100cf50:	108000cc 	andi	r2,r2,3
 100cf54:	10001826 	beq	r2,zero,100cfb8 <write+0xbc>
 100cf58:	e0bffb17 	ldw	r2,-20(fp)
 100cf5c:	10800017 	ldw	r2,0(r2)
 100cf60:	10800617 	ldw	r2,24(r2)
 100cf64:	10001426 	beq	r2,zero,100cfb8 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 100cf68:	e0bffb17 	ldw	r2,-20(fp)
 100cf6c:	10800017 	ldw	r2,0(r2)
 100cf70:	10800617 	ldw	r2,24(r2)
 100cf74:	e0ffff17 	ldw	r3,-4(fp)
 100cf78:	e13ffb17 	ldw	r4,-20(fp)
 100cf7c:	e17ffe17 	ldw	r5,-8(fp)
 100cf80:	180d883a 	mov	r6,r3
 100cf84:	103ee83a 	callr	r2
 100cf88:	e0bffc15 	stw	r2,-16(fp)
 100cf8c:	e0bffc17 	ldw	r2,-16(fp)
 100cf90:	1000070e 	bge	r2,zero,100cfb0 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 100cf94:	100ceac0 	call	100ceac <alt_get_errno>
 100cf98:	1007883a 	mov	r3,r2
 100cf9c:	e0bffc17 	ldw	r2,-16(fp)
 100cfa0:	0085c83a 	sub	r2,zero,r2
 100cfa4:	18800015 	stw	r2,0(r3)
        return -1;
 100cfa8:	00bfffc4 	movi	r2,-1
 100cfac:	00000c06 	br	100cfe0 <write+0xe4>
      }
      return rval;
 100cfb0:	e0bffc17 	ldw	r2,-16(fp)
 100cfb4:	00000a06 	br	100cfe0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 100cfb8:	100ceac0 	call	100ceac <alt_get_errno>
 100cfbc:	1007883a 	mov	r3,r2
 100cfc0:	00800344 	movi	r2,13
 100cfc4:	18800015 	stw	r2,0(r3)
 100cfc8:	00000406 	br	100cfdc <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 100cfcc:	100ceac0 	call	100ceac <alt_get_errno>
 100cfd0:	1007883a 	mov	r3,r2
 100cfd4:	00801444 	movi	r2,81
 100cfd8:	18800015 	stw	r2,0(r3)
  }
  return -1;
 100cfdc:	00bfffc4 	movi	r2,-1
}
 100cfe0:	e037883a 	mov	sp,fp
 100cfe4:	dfc00117 	ldw	ra,4(sp)
 100cfe8:	df000017 	ldw	fp,0(sp)
 100cfec:	dec00204 	addi	sp,sp,8
 100cff0:	f800283a 	ret

0100cff4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 100cff4:	defffd04 	addi	sp,sp,-12
 100cff8:	dfc00215 	stw	ra,8(sp)
 100cffc:	df000115 	stw	fp,4(sp)
 100d000:	df000104 	addi	fp,sp,4
 100d004:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 100d008:	e13fff17 	ldw	r4,-4(fp)
 100d00c:	01404074 	movhi	r5,257
 100d010:	2942c004 	addi	r5,r5,2816
 100d014:	100dcc80 	call	100dcc8 <alt_dev_llist_insert>
}
 100d018:	e037883a 	mov	sp,fp
 100d01c:	dfc00117 	ldw	ra,4(sp)
 100d020:	df000017 	ldw	fp,0(sp)
 100d024:	dec00204 	addi	sp,sp,8
 100d028:	f800283a 	ret

0100d02c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 100d02c:	defffd04 	addi	sp,sp,-12
 100d030:	dfc00215 	stw	ra,8(sp)
 100d034:	df000115 	stw	fp,4(sp)
 100d038:	df000104 	addi	fp,sp,4
 100d03c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, CPU);
 100d040:	100e66c0 	call	100e66c <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 100d044:	00800044 	movi	r2,1
 100d048:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 100d04c:	e037883a 	mov	sp,fp
 100d050:	dfc00117 	ldw	ra,4(sp)
 100d054:	df000017 	ldw	fp,0(sp)
 100d058:	dec00204 	addi	sp,sp,8
 100d05c:	f800283a 	ret

0100d060 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 100d060:	defffe04 	addi	sp,sp,-8
 100d064:	dfc00115 	stw	ra,4(sp)
 100d068:	df000015 	stw	fp,0(sp)
 100d06c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 100d070:	01004074 	movhi	r4,257
 100d074:	213eaa04 	addi	r4,r4,-1368
 100d078:	000b883a 	mov	r5,zero
 100d07c:	000d883a 	mov	r6,zero
 100d080:	100d20c0 	call	100d20c <altera_avalon_jtag_uart_init>
 100d084:	01004074 	movhi	r4,257
 100d088:	213ea004 	addi	r4,r4,-1408
 100d08c:	100cff40 	call	100cff4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
 100d090:	0001883a 	nop
}
 100d094:	e037883a 	mov	sp,fp
 100d098:	dfc00117 	ldw	ra,4(sp)
 100d09c:	df000017 	ldw	fp,0(sp)
 100d0a0:	dec00204 	addi	sp,sp,8
 100d0a4:	f800283a 	ret

0100d0a8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 100d0a8:	defffa04 	addi	sp,sp,-24
 100d0ac:	dfc00515 	stw	ra,20(sp)
 100d0b0:	df000415 	stw	fp,16(sp)
 100d0b4:	df000404 	addi	fp,sp,16
 100d0b8:	e13ffd15 	stw	r4,-12(fp)
 100d0bc:	e17ffe15 	stw	r5,-8(fp)
 100d0c0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 100d0c4:	e0bffd17 	ldw	r2,-12(fp)
 100d0c8:	10800017 	ldw	r2,0(r2)
 100d0cc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 100d0d0:	e0bffc17 	ldw	r2,-16(fp)
 100d0d4:	10c00a04 	addi	r3,r2,40
 100d0d8:	e0bffd17 	ldw	r2,-12(fp)
 100d0dc:	10800217 	ldw	r2,8(r2)
 100d0e0:	1809883a 	mov	r4,r3
 100d0e4:	e17ffe17 	ldw	r5,-8(fp)
 100d0e8:	e1bfff17 	ldw	r6,-4(fp)
 100d0ec:	100f883a 	mov	r7,r2
 100d0f0:	100d6d00 	call	100d6d0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 100d0f4:	e037883a 	mov	sp,fp
 100d0f8:	dfc00117 	ldw	ra,4(sp)
 100d0fc:	df000017 	ldw	fp,0(sp)
 100d100:	dec00204 	addi	sp,sp,8
 100d104:	f800283a 	ret

0100d108 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 100d108:	defffa04 	addi	sp,sp,-24
 100d10c:	dfc00515 	stw	ra,20(sp)
 100d110:	df000415 	stw	fp,16(sp)
 100d114:	df000404 	addi	fp,sp,16
 100d118:	e13ffd15 	stw	r4,-12(fp)
 100d11c:	e17ffe15 	stw	r5,-8(fp)
 100d120:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 100d124:	e0bffd17 	ldw	r2,-12(fp)
 100d128:	10800017 	ldw	r2,0(r2)
 100d12c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 100d130:	e0bffc17 	ldw	r2,-16(fp)
 100d134:	10c00a04 	addi	r3,r2,40
 100d138:	e0bffd17 	ldw	r2,-12(fp)
 100d13c:	10800217 	ldw	r2,8(r2)
 100d140:	1809883a 	mov	r4,r3
 100d144:	e17ffe17 	ldw	r5,-8(fp)
 100d148:	e1bfff17 	ldw	r6,-4(fp)
 100d14c:	100f883a 	mov	r7,r2
 100d150:	100d8dc0 	call	100d8dc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 100d154:	e037883a 	mov	sp,fp
 100d158:	dfc00117 	ldw	ra,4(sp)
 100d15c:	df000017 	ldw	fp,0(sp)
 100d160:	dec00204 	addi	sp,sp,8
 100d164:	f800283a 	ret

0100d168 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 100d168:	defffc04 	addi	sp,sp,-16
 100d16c:	dfc00315 	stw	ra,12(sp)
 100d170:	df000215 	stw	fp,8(sp)
 100d174:	df000204 	addi	fp,sp,8
 100d178:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 100d17c:	e0bfff17 	ldw	r2,-4(fp)
 100d180:	10800017 	ldw	r2,0(r2)
 100d184:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 100d188:	e0bffe17 	ldw	r2,-8(fp)
 100d18c:	10c00a04 	addi	r3,r2,40
 100d190:	e0bfff17 	ldw	r2,-4(fp)
 100d194:	10800217 	ldw	r2,8(r2)
 100d198:	1809883a 	mov	r4,r3
 100d19c:	100b883a 	mov	r5,r2
 100d1a0:	100d57c0 	call	100d57c <altera_avalon_jtag_uart_close>
}
 100d1a4:	e037883a 	mov	sp,fp
 100d1a8:	dfc00117 	ldw	ra,4(sp)
 100d1ac:	df000017 	ldw	fp,0(sp)
 100d1b0:	dec00204 	addi	sp,sp,8
 100d1b4:	f800283a 	ret

0100d1b8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 100d1b8:	defffa04 	addi	sp,sp,-24
 100d1bc:	dfc00515 	stw	ra,20(sp)
 100d1c0:	df000415 	stw	fp,16(sp)
 100d1c4:	df000404 	addi	fp,sp,16
 100d1c8:	e13ffd15 	stw	r4,-12(fp)
 100d1cc:	e17ffe15 	stw	r5,-8(fp)
 100d1d0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 100d1d4:	e0bffd17 	ldw	r2,-12(fp)
 100d1d8:	10800017 	ldw	r2,0(r2)
 100d1dc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 100d1e0:	e0bffc17 	ldw	r2,-16(fp)
 100d1e4:	10800a04 	addi	r2,r2,40
 100d1e8:	1009883a 	mov	r4,r2
 100d1ec:	e17ffe17 	ldw	r5,-8(fp)
 100d1f0:	e1bfff17 	ldw	r6,-4(fp)
 100d1f4:	100d5e40 	call	100d5e4 <altera_avalon_jtag_uart_ioctl>
}
 100d1f8:	e037883a 	mov	sp,fp
 100d1fc:	dfc00117 	ldw	ra,4(sp)
 100d200:	df000017 	ldw	fp,0(sp)
 100d204:	dec00204 	addi	sp,sp,8
 100d208:	f800283a 	ret

0100d20c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 100d20c:	defffa04 	addi	sp,sp,-24
 100d210:	dfc00515 	stw	ra,20(sp)
 100d214:	df000415 	stw	fp,16(sp)
 100d218:	df000404 	addi	fp,sp,16
 100d21c:	e13ffd15 	stw	r4,-12(fp)
 100d220:	e17ffe15 	stw	r5,-8(fp)
 100d224:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 100d228:	e0bffd17 	ldw	r2,-12(fp)
 100d22c:	00c00044 	movi	r3,1
 100d230:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 100d234:	e0bffd17 	ldw	r2,-12(fp)
 100d238:	10800017 	ldw	r2,0(r2)
 100d23c:	10800104 	addi	r2,r2,4
 100d240:	1007883a 	mov	r3,r2
 100d244:	e0bffd17 	ldw	r2,-12(fp)
 100d248:	10800817 	ldw	r2,32(r2)
 100d24c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 100d250:	e0fffe17 	ldw	r3,-8(fp)
 100d254:	e0bfff17 	ldw	r2,-4(fp)
 100d258:	d8000015 	stw	zero,0(sp)
 100d25c:	1809883a 	mov	r4,r3
 100d260:	100b883a 	mov	r5,r2
 100d264:	01804074 	movhi	r6,257
 100d268:	31b4b404 	addi	r6,r6,-11568
 100d26c:	e1fffd17 	ldw	r7,-12(fp)
 100d270:	100de540 	call	100de54 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 100d274:	e0bffd17 	ldw	r2,-12(fp)
 100d278:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 100d27c:	e0bffd17 	ldw	r2,-12(fp)
 100d280:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 100d284:	00804074 	movhi	r2,257
 100d288:	10898e04 	addi	r2,r2,9784
 100d28c:	10800017 	ldw	r2,0(r2)
 100d290:	1809883a 	mov	r4,r3
 100d294:	100b883a 	mov	r5,r2
 100d298:	01804074 	movhi	r6,257
 100d29c:	31b53504 	addi	r6,r6,-11052
 100d2a0:	e1fffd17 	ldw	r7,-12(fp)
 100d2a4:	100daf40 	call	100daf4 <alt_alarm_start>
 100d2a8:	1000040e 	bge	r2,zero,100d2bc <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 100d2ac:	e0fffd17 	ldw	r3,-12(fp)
 100d2b0:	00a00034 	movhi	r2,32768
 100d2b4:	10bfffc4 	addi	r2,r2,-1
 100d2b8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 100d2bc:	e037883a 	mov	sp,fp
 100d2c0:	dfc00117 	ldw	ra,4(sp)
 100d2c4:	df000017 	ldw	fp,0(sp)
 100d2c8:	dec00204 	addi	sp,sp,8
 100d2cc:	f800283a 	ret

0100d2d0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 100d2d0:	defff804 	addi	sp,sp,-32
 100d2d4:	df000715 	stw	fp,28(sp)
 100d2d8:	df000704 	addi	fp,sp,28
 100d2dc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 100d2e0:	e0bfff17 	ldw	r2,-4(fp)
 100d2e4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 100d2e8:	e0bffb17 	ldw	r2,-20(fp)
 100d2ec:	10800017 	ldw	r2,0(r2)
 100d2f0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 100d2f4:	e0bffc17 	ldw	r2,-16(fp)
 100d2f8:	10800104 	addi	r2,r2,4
 100d2fc:	10800037 	ldwio	r2,0(r2)
 100d300:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 100d304:	e0bffd17 	ldw	r2,-12(fp)
 100d308:	1080c00c 	andi	r2,r2,768
 100d30c:	1000011e 	bne	r2,zero,100d314 <altera_avalon_jtag_uart_irq+0x44>
      break;
 100d310:	00006c06 	br	100d4c4 <altera_avalon_jtag_uart_irq+0x1f4>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 100d314:	e0bffd17 	ldw	r2,-12(fp)
 100d318:	1080400c 	andi	r2,r2,256
 100d31c:	10003426 	beq	r2,zero,100d3f0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 100d320:	00800074 	movhi	r2,1
 100d324:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 100d328:	e0bffb17 	ldw	r2,-20(fp)
 100d32c:	10800a17 	ldw	r2,40(r2)
 100d330:	10800044 	addi	r2,r2,1
 100d334:	1081ffcc 	andi	r2,r2,2047
 100d338:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 100d33c:	e0bffb17 	ldw	r2,-20(fp)
 100d340:	10c00b17 	ldw	r3,44(r2)
 100d344:	e0bffe17 	ldw	r2,-8(fp)
 100d348:	1880011e 	bne	r3,r2,100d350 <altera_avalon_jtag_uart_irq+0x80>
          break;
 100d34c:	00001606 	br	100d3a8 <altera_avalon_jtag_uart_irq+0xd8>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 100d350:	e0bffc17 	ldw	r2,-16(fp)
 100d354:	10800037 	ldwio	r2,0(r2)
 100d358:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 100d35c:	e0bff917 	ldw	r2,-28(fp)
 100d360:	10a0000c 	andi	r2,r2,32768
 100d364:	1000011e 	bne	r2,zero,100d36c <altera_avalon_jtag_uart_irq+0x9c>
          break;
 100d368:	00000f06 	br	100d3a8 <altera_avalon_jtag_uart_irq+0xd8>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 100d36c:	e0bffb17 	ldw	r2,-20(fp)
 100d370:	10800a17 	ldw	r2,40(r2)
 100d374:	e0fff917 	ldw	r3,-28(fp)
 100d378:	1809883a 	mov	r4,r3
 100d37c:	e0fffb17 	ldw	r3,-20(fp)
 100d380:	1885883a 	add	r2,r3,r2
 100d384:	10800e04 	addi	r2,r2,56
 100d388:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 100d38c:	e0bffb17 	ldw	r2,-20(fp)
 100d390:	10800a17 	ldw	r2,40(r2)
 100d394:	10800044 	addi	r2,r2,1
 100d398:	10c1ffcc 	andi	r3,r2,2047
 100d39c:	e0bffb17 	ldw	r2,-20(fp)
 100d3a0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 100d3a4:	003fe006 	br	100d328 <altera_avalon_jtag_uart_irq+0x58>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 100d3a8:	e0bff917 	ldw	r2,-28(fp)
 100d3ac:	10bfffec 	andhi	r2,r2,65535
 100d3b0:	10000f26 	beq	r2,zero,100d3f0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 100d3b4:	e0bffb17 	ldw	r2,-20(fp)
 100d3b8:	10c00817 	ldw	r3,32(r2)
 100d3bc:	00bfff84 	movi	r2,-2
 100d3c0:	1886703a 	and	r3,r3,r2
 100d3c4:	e0bffb17 	ldw	r2,-20(fp)
 100d3c8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 100d3cc:	e0bffc17 	ldw	r2,-16(fp)
 100d3d0:	10800104 	addi	r2,r2,4
 100d3d4:	1007883a 	mov	r3,r2
 100d3d8:	e0bffb17 	ldw	r2,-20(fp)
 100d3dc:	10800817 	ldw	r2,32(r2)
 100d3e0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 100d3e4:	e0bffc17 	ldw	r2,-16(fp)
 100d3e8:	10800104 	addi	r2,r2,4
 100d3ec:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 100d3f0:	e0bffd17 	ldw	r2,-12(fp)
 100d3f4:	1080800c 	andi	r2,r2,512
 100d3f8:	10003126 	beq	r2,zero,100d4c0 <altera_avalon_jtag_uart_irq+0x1f0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 100d3fc:	e0bffd17 	ldw	r2,-12(fp)
 100d400:	1004d43a 	srli	r2,r2,16
 100d404:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 100d408:	00001406 	br	100d45c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 100d40c:	e0bffc17 	ldw	r2,-16(fp)
 100d410:	e0fffb17 	ldw	r3,-20(fp)
 100d414:	18c00d17 	ldw	r3,52(r3)
 100d418:	e13ffb17 	ldw	r4,-20(fp)
 100d41c:	20c7883a 	add	r3,r4,r3
 100d420:	18c20e04 	addi	r3,r3,2104
 100d424:	18c00003 	ldbu	r3,0(r3)
 100d428:	18c03fcc 	andi	r3,r3,255
 100d42c:	18c0201c 	xori	r3,r3,128
 100d430:	18ffe004 	addi	r3,r3,-128
 100d434:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 100d438:	e0bffb17 	ldw	r2,-20(fp)
 100d43c:	10800d17 	ldw	r2,52(r2)
 100d440:	10800044 	addi	r2,r2,1
 100d444:	10c1ffcc 	andi	r3,r2,2047
 100d448:	e0bffb17 	ldw	r2,-20(fp)
 100d44c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 100d450:	e0bffa17 	ldw	r2,-24(fp)
 100d454:	10bfffc4 	addi	r2,r2,-1
 100d458:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 100d45c:	e0bffa17 	ldw	r2,-24(fp)
 100d460:	10000526 	beq	r2,zero,100d478 <altera_avalon_jtag_uart_irq+0x1a8>
 100d464:	e0bffb17 	ldw	r2,-20(fp)
 100d468:	10c00d17 	ldw	r3,52(r2)
 100d46c:	e0bffb17 	ldw	r2,-20(fp)
 100d470:	10800c17 	ldw	r2,48(r2)
 100d474:	18bfe51e 	bne	r3,r2,100d40c <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 100d478:	e0bffa17 	ldw	r2,-24(fp)
 100d47c:	10001026 	beq	r2,zero,100d4c0 <altera_avalon_jtag_uart_irq+0x1f0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 100d480:	e0bffb17 	ldw	r2,-20(fp)
 100d484:	10c00817 	ldw	r3,32(r2)
 100d488:	00bfff44 	movi	r2,-3
 100d48c:	1886703a 	and	r3,r3,r2
 100d490:	e0bffb17 	ldw	r2,-20(fp)
 100d494:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 100d498:	e0bffb17 	ldw	r2,-20(fp)
 100d49c:	10800017 	ldw	r2,0(r2)
 100d4a0:	10800104 	addi	r2,r2,4
 100d4a4:	1007883a 	mov	r3,r2
 100d4a8:	e0bffb17 	ldw	r2,-20(fp)
 100d4ac:	10800817 	ldw	r2,32(r2)
 100d4b0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 100d4b4:	e0bffc17 	ldw	r2,-16(fp)
 100d4b8:	10800104 	addi	r2,r2,4
 100d4bc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 100d4c0:	003f8c06 	br	100d2f4 <altera_avalon_jtag_uart_irq+0x24>
}
 100d4c4:	e037883a 	mov	sp,fp
 100d4c8:	df000017 	ldw	fp,0(sp)
 100d4cc:	dec00104 	addi	sp,sp,4
 100d4d0:	f800283a 	ret

0100d4d4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 100d4d4:	defff804 	addi	sp,sp,-32
 100d4d8:	df000715 	stw	fp,28(sp)
 100d4dc:	df000704 	addi	fp,sp,28
 100d4e0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 100d4e4:	e0bffb17 	ldw	r2,-20(fp)
 100d4e8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 100d4ec:	e0bff917 	ldw	r2,-28(fp)
 100d4f0:	10800017 	ldw	r2,0(r2)
 100d4f4:	10800104 	addi	r2,r2,4
 100d4f8:	10800037 	ldwio	r2,0(r2)
 100d4fc:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 100d500:	e0bffa17 	ldw	r2,-24(fp)
 100d504:	1081000c 	andi	r2,r2,1024
 100d508:	10000b26 	beq	r2,zero,100d538 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 100d50c:	e0bff917 	ldw	r2,-28(fp)
 100d510:	10800017 	ldw	r2,0(r2)
 100d514:	10800104 	addi	r2,r2,4
 100d518:	1007883a 	mov	r3,r2
 100d51c:	e0bff917 	ldw	r2,-28(fp)
 100d520:	10800817 	ldw	r2,32(r2)
 100d524:	10810014 	ori	r2,r2,1024
 100d528:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 100d52c:	e0bff917 	ldw	r2,-28(fp)
 100d530:	10000915 	stw	zero,36(r2)
 100d534:	00000a06 	br	100d560 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 100d538:	e0bff917 	ldw	r2,-28(fp)
 100d53c:	10c00917 	ldw	r3,36(r2)
 100d540:	00a00034 	movhi	r2,32768
 100d544:	10bfff04 	addi	r2,r2,-4
 100d548:	10c00536 	bltu	r2,r3,100d560 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 100d54c:	e0bff917 	ldw	r2,-28(fp)
 100d550:	10800917 	ldw	r2,36(r2)
 100d554:	10c00044 	addi	r3,r2,1
 100d558:	e0bff917 	ldw	r2,-28(fp)
 100d55c:	10c00915 	stw	r3,36(r2)
 100d560:	00804074 	movhi	r2,257
 100d564:	10898e04 	addi	r2,r2,9784
 100d568:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 100d56c:	e037883a 	mov	sp,fp
 100d570:	df000017 	ldw	fp,0(sp)
 100d574:	dec00104 	addi	sp,sp,4
 100d578:	f800283a 	ret

0100d57c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 100d57c:	defffd04 	addi	sp,sp,-12
 100d580:	df000215 	stw	fp,8(sp)
 100d584:	df000204 	addi	fp,sp,8
 100d588:	e13ffe15 	stw	r4,-8(fp)
 100d58c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 100d590:	00000506 	br	100d5a8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 100d594:	e0bfff17 	ldw	r2,-4(fp)
 100d598:	1090000c 	andi	r2,r2,16384
 100d59c:	10000226 	beq	r2,zero,100d5a8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 100d5a0:	00bffd44 	movi	r2,-11
 100d5a4:	00000b06 	br	100d5d4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 100d5a8:	e0bffe17 	ldw	r2,-8(fp)
 100d5ac:	10c00d17 	ldw	r3,52(r2)
 100d5b0:	e0bffe17 	ldw	r2,-8(fp)
 100d5b4:	10800c17 	ldw	r2,48(r2)
 100d5b8:	18800526 	beq	r3,r2,100d5d0 <altera_avalon_jtag_uart_close+0x54>
 100d5bc:	e0bffe17 	ldw	r2,-8(fp)
 100d5c0:	10c00917 	ldw	r3,36(r2)
 100d5c4:	e0bffe17 	ldw	r2,-8(fp)
 100d5c8:	10800117 	ldw	r2,4(r2)
 100d5cc:	18bff136 	bltu	r3,r2,100d594 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 100d5d0:	0005883a 	mov	r2,zero
}
 100d5d4:	e037883a 	mov	sp,fp
 100d5d8:	df000017 	ldw	fp,0(sp)
 100d5dc:	dec00104 	addi	sp,sp,4
 100d5e0:	f800283a 	ret

0100d5e4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 100d5e4:	defffa04 	addi	sp,sp,-24
 100d5e8:	df000515 	stw	fp,20(sp)
 100d5ec:	df000504 	addi	fp,sp,20
 100d5f0:	e13ffd15 	stw	r4,-12(fp)
 100d5f4:	e17ffe15 	stw	r5,-8(fp)
 100d5f8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 100d5fc:	00bff9c4 	movi	r2,-25
 100d600:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 100d604:	e0bffe17 	ldw	r2,-8(fp)
 100d608:	10da8060 	cmpeqi	r3,r2,27137
 100d60c:	1800031e 	bne	r3,zero,100d61c <altera_avalon_jtag_uart_ioctl+0x38>
 100d610:	109a80a0 	cmpeqi	r2,r2,27138
 100d614:	1000191e 	bne	r2,zero,100d67c <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 100d618:	00002806 	br	100d6bc <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 100d61c:	e0bffd17 	ldw	r2,-12(fp)
 100d620:	10c00117 	ldw	r3,4(r2)
 100d624:	00a00034 	movhi	r2,32768
 100d628:	10bfffc4 	addi	r2,r2,-1
 100d62c:	18801226 	beq	r3,r2,100d678 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
 100d630:	e0bfff17 	ldw	r2,-4(fp)
 100d634:	10800017 	ldw	r2,0(r2)
 100d638:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 100d63c:	e0bffc17 	ldw	r2,-16(fp)
 100d640:	10800090 	cmplti	r2,r2,2
 100d644:	1000061e 	bne	r2,zero,100d660 <altera_avalon_jtag_uart_ioctl+0x7c>
 100d648:	e0fffc17 	ldw	r3,-16(fp)
 100d64c:	00a00034 	movhi	r2,32768
 100d650:	10bfffc4 	addi	r2,r2,-1
 100d654:	18800226 	beq	r3,r2,100d660 <altera_avalon_jtag_uart_ioctl+0x7c>
 100d658:	e0bffc17 	ldw	r2,-16(fp)
 100d65c:	00000206 	br	100d668 <altera_avalon_jtag_uart_ioctl+0x84>
 100d660:	00a00034 	movhi	r2,32768
 100d664:	10bfff84 	addi	r2,r2,-2
 100d668:	e0fffd17 	ldw	r3,-12(fp)
 100d66c:	18800115 	stw	r2,4(r3)
      rc = 0;
 100d670:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 100d674:	00001106 	br	100d6bc <altera_avalon_jtag_uart_ioctl+0xd8>
 100d678:	00001006 	br	100d6bc <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 100d67c:	e0bffd17 	ldw	r2,-12(fp)
 100d680:	10c00117 	ldw	r3,4(r2)
 100d684:	00a00034 	movhi	r2,32768
 100d688:	10bfffc4 	addi	r2,r2,-1
 100d68c:	18800a26 	beq	r3,r2,100d6b8 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 100d690:	e0bffd17 	ldw	r2,-12(fp)
 100d694:	10c00917 	ldw	r3,36(r2)
 100d698:	e0bffd17 	ldw	r2,-12(fp)
 100d69c:	10800117 	ldw	r2,4(r2)
 100d6a0:	1885803a 	cmpltu	r2,r3,r2
 100d6a4:	10c03fcc 	andi	r3,r2,255
 100d6a8:	e0bfff17 	ldw	r2,-4(fp)
 100d6ac:	10c00015 	stw	r3,0(r2)
      rc = 0;
 100d6b0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 100d6b4:	00000006 	br	100d6b8 <altera_avalon_jtag_uart_ioctl+0xd4>
 100d6b8:	0001883a 	nop

  default:
    break;
  }

  return rc;
 100d6bc:	e0bffb17 	ldw	r2,-20(fp)
}
 100d6c0:	e037883a 	mov	sp,fp
 100d6c4:	df000017 	ldw	fp,0(sp)
 100d6c8:	dec00104 	addi	sp,sp,4
 100d6cc:	f800283a 	ret

0100d6d0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 100d6d0:	defff304 	addi	sp,sp,-52
 100d6d4:	dfc00c15 	stw	ra,48(sp)
 100d6d8:	df000b15 	stw	fp,44(sp)
 100d6dc:	df000b04 	addi	fp,sp,44
 100d6e0:	e13ffc15 	stw	r4,-16(fp)
 100d6e4:	e17ffd15 	stw	r5,-12(fp)
 100d6e8:	e1bffe15 	stw	r6,-8(fp)
 100d6ec:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 100d6f0:	e0bffd17 	ldw	r2,-12(fp)
 100d6f4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 100d6f8:	00004906 	br	100d820 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 100d6fc:	e0bffc17 	ldw	r2,-16(fp)
 100d700:	10800a17 	ldw	r2,40(r2)
 100d704:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 100d708:	e0bffc17 	ldw	r2,-16(fp)
 100d70c:	10800b17 	ldw	r2,44(r2)
 100d710:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 100d714:	e0fff717 	ldw	r3,-36(fp)
 100d718:	e0bff817 	ldw	r2,-32(fp)
 100d71c:	18800536 	bltu	r3,r2,100d734 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 100d720:	e0fff717 	ldw	r3,-36(fp)
 100d724:	e0bff817 	ldw	r2,-32(fp)
 100d728:	1885c83a 	sub	r2,r3,r2
 100d72c:	e0bff615 	stw	r2,-40(fp)
 100d730:	00000406 	br	100d744 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 100d734:	00c20004 	movi	r3,2048
 100d738:	e0bff817 	ldw	r2,-32(fp)
 100d73c:	1885c83a 	sub	r2,r3,r2
 100d740:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 100d744:	e0bff617 	ldw	r2,-40(fp)
 100d748:	1000011e 	bne	r2,zero,100d750 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
 100d74c:	00001d06 	br	100d7c4 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
 100d750:	e0fffe17 	ldw	r3,-8(fp)
 100d754:	e0bff617 	ldw	r2,-40(fp)
 100d758:	1880022e 	bgeu	r3,r2,100d764 <altera_avalon_jtag_uart_read+0x94>
        n = space;
 100d75c:	e0bffe17 	ldw	r2,-8(fp)
 100d760:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 100d764:	e0bff817 	ldw	r2,-32(fp)
 100d768:	10800e04 	addi	r2,r2,56
 100d76c:	e0fffc17 	ldw	r3,-16(fp)
 100d770:	1885883a 	add	r2,r3,r2
 100d774:	e13ff517 	ldw	r4,-44(fp)
 100d778:	100b883a 	mov	r5,r2
 100d77c:	e1bff617 	ldw	r6,-40(fp)
 100d780:	1005ab00 	call	1005ab0 <memcpy>
      ptr   += n;
 100d784:	e0fff517 	ldw	r3,-44(fp)
 100d788:	e0bff617 	ldw	r2,-40(fp)
 100d78c:	1885883a 	add	r2,r3,r2
 100d790:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 100d794:	e0fffe17 	ldw	r3,-8(fp)
 100d798:	e0bff617 	ldw	r2,-40(fp)
 100d79c:	1885c83a 	sub	r2,r3,r2
 100d7a0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 100d7a4:	e0fff817 	ldw	r3,-32(fp)
 100d7a8:	e0bff617 	ldw	r2,-40(fp)
 100d7ac:	1885883a 	add	r2,r3,r2
 100d7b0:	10c1ffcc 	andi	r3,r2,2047
 100d7b4:	e0bffc17 	ldw	r2,-16(fp)
 100d7b8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 100d7bc:	e0bffe17 	ldw	r2,-8(fp)
 100d7c0:	00bfce16 	blt	zero,r2,100d6fc <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
 100d7c4:	e0fff517 	ldw	r3,-44(fp)
 100d7c8:	e0bffd17 	ldw	r2,-12(fp)
 100d7cc:	18800126 	beq	r3,r2,100d7d4 <altera_avalon_jtag_uart_read+0x104>
      break;
 100d7d0:	00001506 	br	100d828 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 100d7d4:	e0bfff17 	ldw	r2,-4(fp)
 100d7d8:	1090000c 	andi	r2,r2,16384
 100d7dc:	10000126 	beq	r2,zero,100d7e4 <altera_avalon_jtag_uart_read+0x114>
      break;
 100d7e0:	00001106 	br	100d828 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 100d7e4:	0001883a 	nop
 100d7e8:	e0bffc17 	ldw	r2,-16(fp)
 100d7ec:	10c00a17 	ldw	r3,40(r2)
 100d7f0:	e0bff717 	ldw	r2,-36(fp)
 100d7f4:	1880051e 	bne	r3,r2,100d80c <altera_avalon_jtag_uart_read+0x13c>
 100d7f8:	e0bffc17 	ldw	r2,-16(fp)
 100d7fc:	10c00917 	ldw	r3,36(r2)
 100d800:	e0bffc17 	ldw	r2,-16(fp)
 100d804:	10800117 	ldw	r2,4(r2)
 100d808:	18bff736 	bltu	r3,r2,100d7e8 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 100d80c:	e0bffc17 	ldw	r2,-16(fp)
 100d810:	10c00a17 	ldw	r3,40(r2)
 100d814:	e0bff717 	ldw	r2,-36(fp)
 100d818:	1880011e 	bne	r3,r2,100d820 <altera_avalon_jtag_uart_read+0x150>
      break;
 100d81c:	00000206 	br	100d828 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 100d820:	e0bffe17 	ldw	r2,-8(fp)
 100d824:	00bfb516 	blt	zero,r2,100d6fc <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 100d828:	e0fff517 	ldw	r3,-44(fp)
 100d82c:	e0bffd17 	ldw	r2,-12(fp)
 100d830:	18801826 	beq	r3,r2,100d894 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 100d834:	0005303a 	rdctl	r2,status
 100d838:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 100d83c:	e0fffa17 	ldw	r3,-24(fp)
 100d840:	00bfff84 	movi	r2,-2
 100d844:	1884703a 	and	r2,r3,r2
 100d848:	1001703a 	wrctl	status,r2
  
  return context;
 100d84c:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 100d850:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 100d854:	e0bffc17 	ldw	r2,-16(fp)
 100d858:	10800817 	ldw	r2,32(r2)
 100d85c:	10c00054 	ori	r3,r2,1
 100d860:	e0bffc17 	ldw	r2,-16(fp)
 100d864:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 100d868:	e0bffc17 	ldw	r2,-16(fp)
 100d86c:	10800017 	ldw	r2,0(r2)
 100d870:	10800104 	addi	r2,r2,4
 100d874:	1007883a 	mov	r3,r2
 100d878:	e0bffc17 	ldw	r2,-16(fp)
 100d87c:	10800817 	ldw	r2,32(r2)
 100d880:	18800035 	stwio	r2,0(r3)
 100d884:	e0bff917 	ldw	r2,-28(fp)
 100d888:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 100d88c:	e0bffb17 	ldw	r2,-20(fp)
 100d890:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 100d894:	e0fff517 	ldw	r3,-44(fp)
 100d898:	e0bffd17 	ldw	r2,-12(fp)
 100d89c:	18800426 	beq	r3,r2,100d8b0 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
 100d8a0:	e0fff517 	ldw	r3,-44(fp)
 100d8a4:	e0bffd17 	ldw	r2,-12(fp)
 100d8a8:	1885c83a 	sub	r2,r3,r2
 100d8ac:	00000606 	br	100d8c8 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
 100d8b0:	e0bfff17 	ldw	r2,-4(fp)
 100d8b4:	1090000c 	andi	r2,r2,16384
 100d8b8:	10000226 	beq	r2,zero,100d8c4 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
 100d8bc:	00bffd44 	movi	r2,-11
 100d8c0:	00000106 	br	100d8c8 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
 100d8c4:	00bffec4 	movi	r2,-5
}
 100d8c8:	e037883a 	mov	sp,fp
 100d8cc:	dfc00117 	ldw	ra,4(sp)
 100d8d0:	df000017 	ldw	fp,0(sp)
 100d8d4:	dec00204 	addi	sp,sp,8
 100d8d8:	f800283a 	ret

0100d8dc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 100d8dc:	defff304 	addi	sp,sp,-52
 100d8e0:	dfc00c15 	stw	ra,48(sp)
 100d8e4:	df000b15 	stw	fp,44(sp)
 100d8e8:	df000b04 	addi	fp,sp,44
 100d8ec:	e13ffc15 	stw	r4,-16(fp)
 100d8f0:	e17ffd15 	stw	r5,-12(fp)
 100d8f4:	e1bffe15 	stw	r6,-8(fp)
 100d8f8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 100d8fc:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 100d900:	e0bffd17 	ldw	r2,-12(fp)
 100d904:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 100d908:	00003806 	br	100d9ec <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 100d90c:	e0bffc17 	ldw	r2,-16(fp)
 100d910:	10800c17 	ldw	r2,48(r2)
 100d914:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
 100d918:	e0bffc17 	ldw	r2,-16(fp)
 100d91c:	10800d17 	ldw	r2,52(r2)
 100d920:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 100d924:	e0fff817 	ldw	r3,-32(fp)
 100d928:	e0bff517 	ldw	r2,-44(fp)
 100d92c:	1880062e 	bgeu	r3,r2,100d948 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 100d930:	e0fff517 	ldw	r3,-44(fp)
 100d934:	e0bff817 	ldw	r2,-32(fp)
 100d938:	1885c83a 	sub	r2,r3,r2
 100d93c:	10bfffc4 	addi	r2,r2,-1
 100d940:	e0bff615 	stw	r2,-40(fp)
 100d944:	00000b06 	br	100d974 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 100d948:	e0bff517 	ldw	r2,-44(fp)
 100d94c:	10000526 	beq	r2,zero,100d964 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 100d950:	00c20004 	movi	r3,2048
 100d954:	e0bff817 	ldw	r2,-32(fp)
 100d958:	1885c83a 	sub	r2,r3,r2
 100d95c:	e0bff615 	stw	r2,-40(fp)
 100d960:	00000406 	br	100d974 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 100d964:	00c1ffc4 	movi	r3,2047
 100d968:	e0bff817 	ldw	r2,-32(fp)
 100d96c:	1885c83a 	sub	r2,r3,r2
 100d970:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 100d974:	e0bff617 	ldw	r2,-40(fp)
 100d978:	1000011e 	bne	r2,zero,100d980 <altera_avalon_jtag_uart_write+0xa4>
        break;
 100d97c:	00001d06 	br	100d9f4 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
 100d980:	e0fffe17 	ldw	r3,-8(fp)
 100d984:	e0bff617 	ldw	r2,-40(fp)
 100d988:	1880022e 	bgeu	r3,r2,100d994 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
 100d98c:	e0bffe17 	ldw	r2,-8(fp)
 100d990:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 100d994:	e0bff817 	ldw	r2,-32(fp)
 100d998:	10820e04 	addi	r2,r2,2104
 100d99c:	e0fffc17 	ldw	r3,-16(fp)
 100d9a0:	1885883a 	add	r2,r3,r2
 100d9a4:	1009883a 	mov	r4,r2
 100d9a8:	e17ffd17 	ldw	r5,-12(fp)
 100d9ac:	e1bff617 	ldw	r6,-40(fp)
 100d9b0:	1005ab00 	call	1005ab0 <memcpy>
      ptr   += n;
 100d9b4:	e0fffd17 	ldw	r3,-12(fp)
 100d9b8:	e0bff617 	ldw	r2,-40(fp)
 100d9bc:	1885883a 	add	r2,r3,r2
 100d9c0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 100d9c4:	e0fffe17 	ldw	r3,-8(fp)
 100d9c8:	e0bff617 	ldw	r2,-40(fp)
 100d9cc:	1885c83a 	sub	r2,r3,r2
 100d9d0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 100d9d4:	e0fff817 	ldw	r3,-32(fp)
 100d9d8:	e0bff617 	ldw	r2,-40(fp)
 100d9dc:	1885883a 	add	r2,r3,r2
 100d9e0:	10c1ffcc 	andi	r3,r2,2047
 100d9e4:	e0bffc17 	ldw	r2,-16(fp)
 100d9e8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 100d9ec:	e0bffe17 	ldw	r2,-8(fp)
 100d9f0:	00bfc616 	blt	zero,r2,100d90c <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 100d9f4:	0005303a 	rdctl	r2,status
 100d9f8:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 100d9fc:	e0fffa17 	ldw	r3,-24(fp)
 100da00:	00bfff84 	movi	r2,-2
 100da04:	1884703a 	and	r2,r3,r2
 100da08:	1001703a 	wrctl	status,r2
  
  return context;
 100da0c:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 100da10:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 100da14:	e0bffc17 	ldw	r2,-16(fp)
 100da18:	10800817 	ldw	r2,32(r2)
 100da1c:	10c00094 	ori	r3,r2,2
 100da20:	e0bffc17 	ldw	r2,-16(fp)
 100da24:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 100da28:	e0bffc17 	ldw	r2,-16(fp)
 100da2c:	10800017 	ldw	r2,0(r2)
 100da30:	10800104 	addi	r2,r2,4
 100da34:	1007883a 	mov	r3,r2
 100da38:	e0bffc17 	ldw	r2,-16(fp)
 100da3c:	10800817 	ldw	r2,32(r2)
 100da40:	18800035 	stwio	r2,0(r3)
 100da44:	e0bff917 	ldw	r2,-28(fp)
 100da48:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 100da4c:	e0bffb17 	ldw	r2,-20(fp)
 100da50:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 100da54:	e0bffe17 	ldw	r2,-8(fp)
 100da58:	0080120e 	bge	zero,r2,100daa4 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 100da5c:	e0bfff17 	ldw	r2,-4(fp)
 100da60:	1090000c 	andi	r2,r2,16384
 100da64:	10000126 	beq	r2,zero,100da6c <altera_avalon_jtag_uart_write+0x190>
        break;
 100da68:	00001006 	br	100daac <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 100da6c:	0001883a 	nop
 100da70:	e0bffc17 	ldw	r2,-16(fp)
 100da74:	10c00d17 	ldw	r3,52(r2)
 100da78:	e0bff517 	ldw	r2,-44(fp)
 100da7c:	1880051e 	bne	r3,r2,100da94 <altera_avalon_jtag_uart_write+0x1b8>
 100da80:	e0bffc17 	ldw	r2,-16(fp)
 100da84:	10c00917 	ldw	r3,36(r2)
 100da88:	e0bffc17 	ldw	r2,-16(fp)
 100da8c:	10800117 	ldw	r2,4(r2)
 100da90:	18bff736 	bltu	r3,r2,100da70 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 100da94:	e0bffc17 	ldw	r2,-16(fp)
 100da98:	10800917 	ldw	r2,36(r2)
 100da9c:	10000126 	beq	r2,zero,100daa4 <altera_avalon_jtag_uart_write+0x1c8>
         break;
 100daa0:	00000206 	br	100daac <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
 100daa4:	e0bffe17 	ldw	r2,-8(fp)
 100daa8:	00bf9716 	blt	zero,r2,100d908 <altera_avalon_jtag_uart_write+0x2c>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 100daac:	e0fffd17 	ldw	r3,-12(fp)
 100dab0:	e0bff717 	ldw	r2,-36(fp)
 100dab4:	18800426 	beq	r3,r2,100dac8 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
 100dab8:	e0fffd17 	ldw	r3,-12(fp)
 100dabc:	e0bff717 	ldw	r2,-36(fp)
 100dac0:	1885c83a 	sub	r2,r3,r2
 100dac4:	00000606 	br	100dae0 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
 100dac8:	e0bfff17 	ldw	r2,-4(fp)
 100dacc:	1090000c 	andi	r2,r2,16384
 100dad0:	10000226 	beq	r2,zero,100dadc <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
 100dad4:	00bffd44 	movi	r2,-11
 100dad8:	00000106 	br	100dae0 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 100dadc:	00bffec4 	movi	r2,-5
}
 100dae0:	e037883a 	mov	sp,fp
 100dae4:	dfc00117 	ldw	ra,4(sp)
 100dae8:	df000017 	ldw	fp,0(sp)
 100daec:	dec00204 	addi	sp,sp,8
 100daf0:	f800283a 	ret

0100daf4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 100daf4:	defff504 	addi	sp,sp,-44
 100daf8:	df000a15 	stw	fp,40(sp)
 100dafc:	df000a04 	addi	fp,sp,40
 100db00:	e13ffc15 	stw	r4,-16(fp)
 100db04:	e17ffd15 	stw	r5,-12(fp)
 100db08:	e1bffe15 	stw	r6,-8(fp)
 100db0c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 100db10:	e03ff615 	stw	zero,-40(fp)
 100db14:	00804074 	movhi	r2,257
 100db18:	10898e04 	addi	r2,r2,9784
 100db1c:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 100db20:	10003f26 	beq	r2,zero,100dc20 <alt_alarm_start+0x12c>
  {
    if (alarm)
 100db24:	e0bffc17 	ldw	r2,-16(fp)
 100db28:	10003b26 	beq	r2,zero,100dc18 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 100db2c:	e0bffc17 	ldw	r2,-16(fp)
 100db30:	e0fffe17 	ldw	r3,-8(fp)
 100db34:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 100db38:	e0bffc17 	ldw	r2,-16(fp)
 100db3c:	e0ffff17 	ldw	r3,-4(fp)
 100db40:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 100db44:	0005303a 	rdctl	r2,status
 100db48:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 100db4c:	e0fff817 	ldw	r3,-32(fp)
 100db50:	00bfff84 	movi	r2,-2
 100db54:	1884703a 	and	r2,r3,r2
 100db58:	1001703a 	wrctl	status,r2
  
  return context;
 100db5c:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 100db60:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 100db64:	00804074 	movhi	r2,257
 100db68:	10898f04 	addi	r2,r2,9788
 100db6c:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 100db70:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 100db74:	e0fffd17 	ldw	r3,-12(fp)
 100db78:	e0bff617 	ldw	r2,-40(fp)
 100db7c:	1885883a 	add	r2,r3,r2
 100db80:	10c00044 	addi	r3,r2,1
 100db84:	e0bffc17 	ldw	r2,-16(fp)
 100db88:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 100db8c:	e0bffc17 	ldw	r2,-16(fp)
 100db90:	10c00217 	ldw	r3,8(r2)
 100db94:	e0bff617 	ldw	r2,-40(fp)
 100db98:	1880042e 	bgeu	r3,r2,100dbac <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 100db9c:	e0bffc17 	ldw	r2,-16(fp)
 100dba0:	00c00044 	movi	r3,1
 100dba4:	10c00405 	stb	r3,16(r2)
 100dba8:	00000206 	br	100dbb4 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 100dbac:	e0bffc17 	ldw	r2,-16(fp)
 100dbb0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 100dbb4:	e0fffc17 	ldw	r3,-16(fp)
 100dbb8:	00804074 	movhi	r2,257
 100dbbc:	1082c604 	addi	r2,r2,2840
 100dbc0:	e0bff915 	stw	r2,-28(fp)
 100dbc4:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 100dbc8:	e0bffa17 	ldw	r2,-24(fp)
 100dbcc:	e0fff917 	ldw	r3,-28(fp)
 100dbd0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 100dbd4:	e0bff917 	ldw	r2,-28(fp)
 100dbd8:	10c00017 	ldw	r3,0(r2)
 100dbdc:	e0bffa17 	ldw	r2,-24(fp)
 100dbe0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 100dbe4:	e0bff917 	ldw	r2,-28(fp)
 100dbe8:	10800017 	ldw	r2,0(r2)
 100dbec:	e0fffa17 	ldw	r3,-24(fp)
 100dbf0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 100dbf4:	e0bff917 	ldw	r2,-28(fp)
 100dbf8:	e0fffa17 	ldw	r3,-24(fp)
 100dbfc:	10c00015 	stw	r3,0(r2)
 100dc00:	e0bff717 	ldw	r2,-36(fp)
 100dc04:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 100dc08:	e0bffb17 	ldw	r2,-20(fp)
 100dc0c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 100dc10:	0005883a 	mov	r2,zero
 100dc14:	00000306 	br	100dc24 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 100dc18:	00bffa84 	movi	r2,-22
 100dc1c:	00000106 	br	100dc24 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 100dc20:	00bfde84 	movi	r2,-134
  }
}
 100dc24:	e037883a 	mov	sp,fp
 100dc28:	df000017 	ldw	fp,0(sp)
 100dc2c:	dec00104 	addi	sp,sp,4
 100dc30:	f800283a 	ret

0100dc34 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 100dc34:	defffe04 	addi	sp,sp,-8
 100dc38:	df000115 	stw	fp,4(sp)
 100dc3c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 100dc40:	e03fff15 	stw	zero,-4(fp)
 100dc44:	00000506 	br	100dc5c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 100dc48:	e0bfff17 	ldw	r2,-4(fp)
 100dc4c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 100dc50:	e0bfff17 	ldw	r2,-4(fp)
 100dc54:	10800804 	addi	r2,r2,32
 100dc58:	e0bfff15 	stw	r2,-4(fp)
 100dc5c:	e0bfff17 	ldw	r2,-4(fp)
 100dc60:	10820030 	cmpltui	r2,r2,2048
 100dc64:	103ff81e 	bne	r2,zero,100dc48 <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 100dc68:	e037883a 	mov	sp,fp
 100dc6c:	df000017 	ldw	fp,0(sp)
 100dc70:	dec00104 	addi	sp,sp,4
 100dc74:	f800283a 	ret

0100dc78 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 100dc78:	defffe04 	addi	sp,sp,-8
 100dc7c:	dfc00115 	stw	ra,4(sp)
 100dc80:	df000015 	stw	fp,0(sp)
 100dc84:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 100dc88:	00804074 	movhi	r2,257
 100dc8c:	1082c304 	addi	r2,r2,2828
 100dc90:	10800017 	ldw	r2,0(r2)
 100dc94:	10000526 	beq	r2,zero,100dcac <alt_get_errno+0x34>
 100dc98:	00804074 	movhi	r2,257
 100dc9c:	1082c304 	addi	r2,r2,2828
 100dca0:	10800017 	ldw	r2,0(r2)
 100dca4:	103ee83a 	callr	r2
 100dca8:	00000206 	br	100dcb4 <alt_get_errno+0x3c>
 100dcac:	00804074 	movhi	r2,257
 100dcb0:	10898904 	addi	r2,r2,9764
}
 100dcb4:	e037883a 	mov	sp,fp
 100dcb8:	dfc00117 	ldw	ra,4(sp)
 100dcbc:	df000017 	ldw	fp,0(sp)
 100dcc0:	dec00204 	addi	sp,sp,8
 100dcc4:	f800283a 	ret

0100dcc8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 100dcc8:	defffa04 	addi	sp,sp,-24
 100dccc:	dfc00515 	stw	ra,20(sp)
 100dcd0:	df000415 	stw	fp,16(sp)
 100dcd4:	df000404 	addi	fp,sp,16
 100dcd8:	e13ffe15 	stw	r4,-8(fp)
 100dcdc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 100dce0:	e0bffe17 	ldw	r2,-8(fp)
 100dce4:	10000326 	beq	r2,zero,100dcf4 <alt_dev_llist_insert+0x2c>
 100dce8:	e0bffe17 	ldw	r2,-8(fp)
 100dcec:	10800217 	ldw	r2,8(r2)
 100dcf0:	1000061e 	bne	r2,zero,100dd0c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 100dcf4:	100dc780 	call	100dc78 <alt_get_errno>
 100dcf8:	1007883a 	mov	r3,r2
 100dcfc:	00800584 	movi	r2,22
 100dd00:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 100dd04:	00bffa84 	movi	r2,-22
 100dd08:	00001306 	br	100dd58 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 100dd0c:	e0bffe17 	ldw	r2,-8(fp)
 100dd10:	e0ffff17 	ldw	r3,-4(fp)
 100dd14:	e0fffc15 	stw	r3,-16(fp)
 100dd18:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 100dd1c:	e0bffd17 	ldw	r2,-12(fp)
 100dd20:	e0fffc17 	ldw	r3,-16(fp)
 100dd24:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 100dd28:	e0bffc17 	ldw	r2,-16(fp)
 100dd2c:	10c00017 	ldw	r3,0(r2)
 100dd30:	e0bffd17 	ldw	r2,-12(fp)
 100dd34:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 100dd38:	e0bffc17 	ldw	r2,-16(fp)
 100dd3c:	10800017 	ldw	r2,0(r2)
 100dd40:	e0fffd17 	ldw	r3,-12(fp)
 100dd44:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 100dd48:	e0bffc17 	ldw	r2,-16(fp)
 100dd4c:	e0fffd17 	ldw	r3,-12(fp)
 100dd50:	10c00015 	stw	r3,0(r2)

  return 0;  
 100dd54:	0005883a 	mov	r2,zero
}
 100dd58:	e037883a 	mov	sp,fp
 100dd5c:	dfc00117 	ldw	ra,4(sp)
 100dd60:	df000017 	ldw	fp,0(sp)
 100dd64:	dec00204 	addi	sp,sp,8
 100dd68:	f800283a 	ret

0100dd6c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 100dd6c:	defffd04 	addi	sp,sp,-12
 100dd70:	dfc00215 	stw	ra,8(sp)
 100dd74:	df000115 	stw	fp,4(sp)
 100dd78:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 100dd7c:	00804074 	movhi	r2,257
 100dd80:	10bb4404 	addi	r2,r2,-4848
 100dd84:	e0bfff15 	stw	r2,-4(fp)
 100dd88:	00000606 	br	100dda4 <_do_ctors+0x38>
        (*ctor) (); 
 100dd8c:	e0bfff17 	ldw	r2,-4(fp)
 100dd90:	10800017 	ldw	r2,0(r2)
 100dd94:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 100dd98:	e0bfff17 	ldw	r2,-4(fp)
 100dd9c:	10bfff04 	addi	r2,r2,-4
 100dda0:	e0bfff15 	stw	r2,-4(fp)
 100dda4:	e0ffff17 	ldw	r3,-4(fp)
 100dda8:	00804074 	movhi	r2,257
 100ddac:	10bb4504 	addi	r2,r2,-4844
 100ddb0:	18bff62e 	bgeu	r3,r2,100dd8c <_do_ctors+0x20>
        (*ctor) (); 
}
 100ddb4:	e037883a 	mov	sp,fp
 100ddb8:	dfc00117 	ldw	ra,4(sp)
 100ddbc:	df000017 	ldw	fp,0(sp)
 100ddc0:	dec00204 	addi	sp,sp,8
 100ddc4:	f800283a 	ret

0100ddc8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 100ddc8:	defffd04 	addi	sp,sp,-12
 100ddcc:	dfc00215 	stw	ra,8(sp)
 100ddd0:	df000115 	stw	fp,4(sp)
 100ddd4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 100ddd8:	00804074 	movhi	r2,257
 100dddc:	10bb4404 	addi	r2,r2,-4848
 100dde0:	e0bfff15 	stw	r2,-4(fp)
 100dde4:	00000606 	br	100de00 <_do_dtors+0x38>
        (*dtor) (); 
 100dde8:	e0bfff17 	ldw	r2,-4(fp)
 100ddec:	10800017 	ldw	r2,0(r2)
 100ddf0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 100ddf4:	e0bfff17 	ldw	r2,-4(fp)
 100ddf8:	10bfff04 	addi	r2,r2,-4
 100ddfc:	e0bfff15 	stw	r2,-4(fp)
 100de00:	e0ffff17 	ldw	r3,-4(fp)
 100de04:	00804074 	movhi	r2,257
 100de08:	10bb4504 	addi	r2,r2,-4844
 100de0c:	18bff62e 	bgeu	r3,r2,100dde8 <_do_dtors+0x20>
        (*dtor) (); 
}
 100de10:	e037883a 	mov	sp,fp
 100de14:	dfc00117 	ldw	ra,4(sp)
 100de18:	df000017 	ldw	fp,0(sp)
 100de1c:	dec00204 	addi	sp,sp,8
 100de20:	f800283a 	ret

0100de24 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 100de24:	defffe04 	addi	sp,sp,-8
 100de28:	dfc00115 	stw	ra,4(sp)
 100de2c:	df000015 	stw	fp,0(sp)
 100de30:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 100de34:	0009883a 	mov	r4,zero
 100de38:	01440004 	movi	r5,4096
 100de3c:	100e8e40 	call	100e8e4 <alt_icache_flush>
#endif
}
 100de40:	e037883a 	mov	sp,fp
 100de44:	dfc00117 	ldw	ra,4(sp)
 100de48:	df000017 	ldw	fp,0(sp)
 100de4c:	dec00204 	addi	sp,sp,8
 100de50:	f800283a 	ret

0100de54 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 100de54:	defff904 	addi	sp,sp,-28
 100de58:	dfc00615 	stw	ra,24(sp)
 100de5c:	df000515 	stw	fp,20(sp)
 100de60:	df000504 	addi	fp,sp,20
 100de64:	e13ffc15 	stw	r4,-16(fp)
 100de68:	e17ffd15 	stw	r5,-12(fp)
 100de6c:	e1bffe15 	stw	r6,-8(fp)
 100de70:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 100de74:	e0800217 	ldw	r2,8(fp)
 100de78:	d8800015 	stw	r2,0(sp)
 100de7c:	e13ffc17 	ldw	r4,-16(fp)
 100de80:	e17ffd17 	ldw	r5,-12(fp)
 100de84:	e1bffe17 	ldw	r6,-8(fp)
 100de88:	e1ffff17 	ldw	r7,-4(fp)
 100de8c:	100e0340 	call	100e034 <alt_iic_isr_register>
}  
 100de90:	e037883a 	mov	sp,fp
 100de94:	dfc00117 	ldw	ra,4(sp)
 100de98:	df000017 	ldw	fp,0(sp)
 100de9c:	dec00204 	addi	sp,sp,8
 100dea0:	f800283a 	ret

0100dea4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 100dea4:	defff904 	addi	sp,sp,-28
 100dea8:	df000615 	stw	fp,24(sp)
 100deac:	df000604 	addi	fp,sp,24
 100deb0:	e13ffe15 	stw	r4,-8(fp)
 100deb4:	e17fff15 	stw	r5,-4(fp)
 100deb8:	e0bfff17 	ldw	r2,-4(fp)
 100debc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 100dec0:	0005303a 	rdctl	r2,status
 100dec4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 100dec8:	e0fffb17 	ldw	r3,-20(fp)
 100decc:	00bfff84 	movi	r2,-2
 100ded0:	1884703a 	and	r2,r3,r2
 100ded4:	1001703a 	wrctl	status,r2
  
  return context;
 100ded8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 100dedc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 100dee0:	e0bffa17 	ldw	r2,-24(fp)
 100dee4:	00c00044 	movi	r3,1
 100dee8:	1884983a 	sll	r2,r3,r2
 100deec:	1007883a 	mov	r3,r2
 100def0:	00804074 	movhi	r2,257
 100def4:	10898d04 	addi	r2,r2,9780
 100def8:	10800017 	ldw	r2,0(r2)
 100defc:	1886b03a 	or	r3,r3,r2
 100df00:	00804074 	movhi	r2,257
 100df04:	10898d04 	addi	r2,r2,9780
 100df08:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 100df0c:	00804074 	movhi	r2,257
 100df10:	10898d04 	addi	r2,r2,9780
 100df14:	10800017 	ldw	r2,0(r2)
 100df18:	100170fa 	wrctl	ienable,r2
 100df1c:	e0bffc17 	ldw	r2,-16(fp)
 100df20:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 100df24:	e0bffd17 	ldw	r2,-12(fp)
 100df28:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 100df2c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 100df30:	0001883a 	nop
}
 100df34:	e037883a 	mov	sp,fp
 100df38:	df000017 	ldw	fp,0(sp)
 100df3c:	dec00104 	addi	sp,sp,4
 100df40:	f800283a 	ret

0100df44 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 100df44:	defff904 	addi	sp,sp,-28
 100df48:	df000615 	stw	fp,24(sp)
 100df4c:	df000604 	addi	fp,sp,24
 100df50:	e13ffe15 	stw	r4,-8(fp)
 100df54:	e17fff15 	stw	r5,-4(fp)
 100df58:	e0bfff17 	ldw	r2,-4(fp)
 100df5c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 100df60:	0005303a 	rdctl	r2,status
 100df64:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 100df68:	e0fffb17 	ldw	r3,-20(fp)
 100df6c:	00bfff84 	movi	r2,-2
 100df70:	1884703a 	and	r2,r3,r2
 100df74:	1001703a 	wrctl	status,r2
  
  return context;
 100df78:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 100df7c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 100df80:	e0bffa17 	ldw	r2,-24(fp)
 100df84:	00c00044 	movi	r3,1
 100df88:	1884983a 	sll	r2,r3,r2
 100df8c:	0084303a 	nor	r2,zero,r2
 100df90:	1007883a 	mov	r3,r2
 100df94:	00804074 	movhi	r2,257
 100df98:	10898d04 	addi	r2,r2,9780
 100df9c:	10800017 	ldw	r2,0(r2)
 100dfa0:	1886703a 	and	r3,r3,r2
 100dfa4:	00804074 	movhi	r2,257
 100dfa8:	10898d04 	addi	r2,r2,9780
 100dfac:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 100dfb0:	00804074 	movhi	r2,257
 100dfb4:	10898d04 	addi	r2,r2,9780
 100dfb8:	10800017 	ldw	r2,0(r2)
 100dfbc:	100170fa 	wrctl	ienable,r2
 100dfc0:	e0bffc17 	ldw	r2,-16(fp)
 100dfc4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 100dfc8:	e0bffd17 	ldw	r2,-12(fp)
 100dfcc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 100dfd0:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 100dfd4:	0001883a 	nop
}
 100dfd8:	e037883a 	mov	sp,fp
 100dfdc:	df000017 	ldw	fp,0(sp)
 100dfe0:	dec00104 	addi	sp,sp,4
 100dfe4:	f800283a 	ret

0100dfe8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 100dfe8:	defffc04 	addi	sp,sp,-16
 100dfec:	df000315 	stw	fp,12(sp)
 100dff0:	df000304 	addi	fp,sp,12
 100dff4:	e13ffe15 	stw	r4,-8(fp)
 100dff8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 100dffc:	000530fa 	rdctl	r2,ienable
 100e000:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 100e004:	e0bfff17 	ldw	r2,-4(fp)
 100e008:	00c00044 	movi	r3,1
 100e00c:	1884983a 	sll	r2,r3,r2
 100e010:	1007883a 	mov	r3,r2
 100e014:	e0bffd17 	ldw	r2,-12(fp)
 100e018:	1884703a 	and	r2,r3,r2
 100e01c:	1004c03a 	cmpne	r2,r2,zero
 100e020:	10803fcc 	andi	r2,r2,255
}
 100e024:	e037883a 	mov	sp,fp
 100e028:	df000017 	ldw	fp,0(sp)
 100e02c:	dec00104 	addi	sp,sp,4
 100e030:	f800283a 	ret

0100e034 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 100e034:	defff504 	addi	sp,sp,-44
 100e038:	dfc00a15 	stw	ra,40(sp)
 100e03c:	df000915 	stw	fp,36(sp)
 100e040:	df000904 	addi	fp,sp,36
 100e044:	e13ffc15 	stw	r4,-16(fp)
 100e048:	e17ffd15 	stw	r5,-12(fp)
 100e04c:	e1bffe15 	stw	r6,-8(fp)
 100e050:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 100e054:	00bffa84 	movi	r2,-22
 100e058:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 100e05c:	e0bffd17 	ldw	r2,-12(fp)
 100e060:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 100e064:	e0bff817 	ldw	r2,-32(fp)
 100e068:	10800808 	cmpgei	r2,r2,32
 100e06c:	1000271e 	bne	r2,zero,100e10c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 100e070:	0005303a 	rdctl	r2,status
 100e074:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 100e078:	e0fffa17 	ldw	r3,-24(fp)
 100e07c:	00bfff84 	movi	r2,-2
 100e080:	1884703a 	and	r2,r3,r2
 100e084:	1001703a 	wrctl	status,r2
  
  return context;
 100e088:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 100e08c:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
 100e090:	00804074 	movhi	r2,257
 100e094:	10899a04 	addi	r2,r2,9832
 100e098:	e0fff817 	ldw	r3,-32(fp)
 100e09c:	180690fa 	slli	r3,r3,3
 100e0a0:	10c5883a 	add	r2,r2,r3
 100e0a4:	e0fffe17 	ldw	r3,-8(fp)
 100e0a8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 100e0ac:	00804074 	movhi	r2,257
 100e0b0:	10899a04 	addi	r2,r2,9832
 100e0b4:	e0fff817 	ldw	r3,-32(fp)
 100e0b8:	180690fa 	slli	r3,r3,3
 100e0bc:	18c00104 	addi	r3,r3,4
 100e0c0:	10c5883a 	add	r2,r2,r3
 100e0c4:	e0ffff17 	ldw	r3,-4(fp)
 100e0c8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 100e0cc:	e0bffe17 	ldw	r2,-8(fp)
 100e0d0:	10000526 	beq	r2,zero,100e0e8 <alt_iic_isr_register+0xb4>
 100e0d4:	e0bff817 	ldw	r2,-32(fp)
 100e0d8:	e13ffc17 	ldw	r4,-16(fp)
 100e0dc:	100b883a 	mov	r5,r2
 100e0e0:	100dea40 	call	100dea4 <alt_ic_irq_enable>
 100e0e4:	00000406 	br	100e0f8 <alt_iic_isr_register+0xc4>
 100e0e8:	e0bff817 	ldw	r2,-32(fp)
 100e0ec:	e13ffc17 	ldw	r4,-16(fp)
 100e0f0:	100b883a 	mov	r5,r2
 100e0f4:	100df440 	call	100df44 <alt_ic_irq_disable>
 100e0f8:	e0bff715 	stw	r2,-36(fp)
 100e0fc:	e0bff917 	ldw	r2,-28(fp)
 100e100:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 100e104:	e0bffb17 	ldw	r2,-20(fp)
 100e108:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 100e10c:	e0bff717 	ldw	r2,-36(fp)
}
 100e110:	e037883a 	mov	sp,fp
 100e114:	dfc00117 	ldw	ra,4(sp)
 100e118:	df000017 	ldw	fp,0(sp)
 100e11c:	dec00204 	addi	sp,sp,8
 100e120:	f800283a 	ret

0100e124 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 100e124:	defff904 	addi	sp,sp,-28
 100e128:	dfc00615 	stw	ra,24(sp)
 100e12c:	df000515 	stw	fp,20(sp)
 100e130:	df000504 	addi	fp,sp,20
 100e134:	e13ffc15 	stw	r4,-16(fp)
 100e138:	e17ffd15 	stw	r5,-12(fp)
 100e13c:	e1bffe15 	stw	r6,-8(fp)
 100e140:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 100e144:	e13ffd17 	ldw	r4,-12(fp)
 100e148:	e17ffe17 	ldw	r5,-8(fp)
 100e14c:	e1bfff17 	ldw	r6,-4(fp)
 100e150:	100e3780 	call	100e378 <open>
 100e154:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 100e158:	e0bffb17 	ldw	r2,-20(fp)
 100e15c:	10001c16 	blt	r2,zero,100e1d0 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 100e160:	00804074 	movhi	r2,257
 100e164:	10be4004 	addi	r2,r2,-1792
 100e168:	e0fffb17 	ldw	r3,-20(fp)
 100e16c:	18c00324 	muli	r3,r3,12
 100e170:	10c5883a 	add	r2,r2,r3
 100e174:	10c00017 	ldw	r3,0(r2)
 100e178:	e0bffc17 	ldw	r2,-16(fp)
 100e17c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 100e180:	00804074 	movhi	r2,257
 100e184:	10be4004 	addi	r2,r2,-1792
 100e188:	e0fffb17 	ldw	r3,-20(fp)
 100e18c:	18c00324 	muli	r3,r3,12
 100e190:	18c00104 	addi	r3,r3,4
 100e194:	10c5883a 	add	r2,r2,r3
 100e198:	10c00017 	ldw	r3,0(r2)
 100e19c:	e0bffc17 	ldw	r2,-16(fp)
 100e1a0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 100e1a4:	00804074 	movhi	r2,257
 100e1a8:	10be4004 	addi	r2,r2,-1792
 100e1ac:	e0fffb17 	ldw	r3,-20(fp)
 100e1b0:	18c00324 	muli	r3,r3,12
 100e1b4:	18c00204 	addi	r3,r3,8
 100e1b8:	10c5883a 	add	r2,r2,r3
 100e1bc:	10c00017 	ldw	r3,0(r2)
 100e1c0:	e0bffc17 	ldw	r2,-16(fp)
 100e1c4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 100e1c8:	e13ffb17 	ldw	r4,-20(fp)
 100e1cc:	100cd9c0 	call	100cd9c <alt_release_fd>
  }
} 
 100e1d0:	e037883a 	mov	sp,fp
 100e1d4:	dfc00117 	ldw	ra,4(sp)
 100e1d8:	df000017 	ldw	fp,0(sp)
 100e1dc:	dec00204 	addi	sp,sp,8
 100e1e0:	f800283a 	ret

0100e1e4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 100e1e4:	defffb04 	addi	sp,sp,-20
 100e1e8:	dfc00415 	stw	ra,16(sp)
 100e1ec:	df000315 	stw	fp,12(sp)
 100e1f0:	df000304 	addi	fp,sp,12
 100e1f4:	e13ffd15 	stw	r4,-12(fp)
 100e1f8:	e17ffe15 	stw	r5,-8(fp)
 100e1fc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 100e200:	01004074 	movhi	r4,257
 100e204:	213e4304 	addi	r4,r4,-1780
 100e208:	e17ffd17 	ldw	r5,-12(fp)
 100e20c:	01800044 	movi	r6,1
 100e210:	01c07fc4 	movi	r7,511
 100e214:	100e1240 	call	100e124 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 100e218:	01004074 	movhi	r4,257
 100e21c:	213e4004 	addi	r4,r4,-1792
 100e220:	e17ffe17 	ldw	r5,-8(fp)
 100e224:	000d883a 	mov	r6,zero
 100e228:	01c07fc4 	movi	r7,511
 100e22c:	100e1240 	call	100e124 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 100e230:	01004074 	movhi	r4,257
 100e234:	213e4604 	addi	r4,r4,-1768
 100e238:	e17fff17 	ldw	r5,-4(fp)
 100e23c:	01800044 	movi	r6,1
 100e240:	01c07fc4 	movi	r7,511
 100e244:	100e1240 	call	100e124 <alt_open_fd>
}  
 100e248:	e037883a 	mov	sp,fp
 100e24c:	dfc00117 	ldw	ra,4(sp)
 100e250:	df000017 	ldw	fp,0(sp)
 100e254:	dec00204 	addi	sp,sp,8
 100e258:	f800283a 	ret

0100e25c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 100e25c:	defffe04 	addi	sp,sp,-8
 100e260:	dfc00115 	stw	ra,4(sp)
 100e264:	df000015 	stw	fp,0(sp)
 100e268:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 100e26c:	00804074 	movhi	r2,257
 100e270:	1082c304 	addi	r2,r2,2828
 100e274:	10800017 	ldw	r2,0(r2)
 100e278:	10000526 	beq	r2,zero,100e290 <alt_get_errno+0x34>
 100e27c:	00804074 	movhi	r2,257
 100e280:	1082c304 	addi	r2,r2,2828
 100e284:	10800017 	ldw	r2,0(r2)
 100e288:	103ee83a 	callr	r2
 100e28c:	00000206 	br	100e298 <alt_get_errno+0x3c>
 100e290:	00804074 	movhi	r2,257
 100e294:	10898904 	addi	r2,r2,9764
}
 100e298:	e037883a 	mov	sp,fp
 100e29c:	dfc00117 	ldw	ra,4(sp)
 100e2a0:	df000017 	ldw	fp,0(sp)
 100e2a4:	dec00204 	addi	sp,sp,8
 100e2a8:	f800283a 	ret

0100e2ac <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 100e2ac:	defffd04 	addi	sp,sp,-12
 100e2b0:	df000215 	stw	fp,8(sp)
 100e2b4:	df000204 	addi	fp,sp,8
 100e2b8:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 100e2bc:	e0bfff17 	ldw	r2,-4(fp)
 100e2c0:	10800217 	ldw	r2,8(r2)
 100e2c4:	10d00034 	orhi	r3,r2,16384
 100e2c8:	e0bfff17 	ldw	r2,-4(fp)
 100e2cc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 100e2d0:	e03ffe15 	stw	zero,-8(fp)
 100e2d4:	00001d06 	br	100e34c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 100e2d8:	00804074 	movhi	r2,257
 100e2dc:	10be4004 	addi	r2,r2,-1792
 100e2e0:	e0fffe17 	ldw	r3,-8(fp)
 100e2e4:	18c00324 	muli	r3,r3,12
 100e2e8:	10c5883a 	add	r2,r2,r3
 100e2ec:	10c00017 	ldw	r3,0(r2)
 100e2f0:	e0bfff17 	ldw	r2,-4(fp)
 100e2f4:	10800017 	ldw	r2,0(r2)
 100e2f8:	1880111e 	bne	r3,r2,100e340 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 100e2fc:	00804074 	movhi	r2,257
 100e300:	10be4004 	addi	r2,r2,-1792
 100e304:	e0fffe17 	ldw	r3,-8(fp)
 100e308:	18c00324 	muli	r3,r3,12
 100e30c:	18c00204 	addi	r3,r3,8
 100e310:	10c5883a 	add	r2,r2,r3
 100e314:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 100e318:	1000090e 	bge	r2,zero,100e340 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 100e31c:	e0bffe17 	ldw	r2,-8(fp)
 100e320:	10c00324 	muli	r3,r2,12
 100e324:	00804074 	movhi	r2,257
 100e328:	10be4004 	addi	r2,r2,-1792
 100e32c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 100e330:	e0bfff17 	ldw	r2,-4(fp)
 100e334:	18800226 	beq	r3,r2,100e340 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 100e338:	00bffcc4 	movi	r2,-13
 100e33c:	00000a06 	br	100e368 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 100e340:	e0bffe17 	ldw	r2,-8(fp)
 100e344:	10800044 	addi	r2,r2,1
 100e348:	e0bffe15 	stw	r2,-8(fp)
 100e34c:	00804074 	movhi	r2,257
 100e350:	1082c204 	addi	r2,r2,2824
 100e354:	10800017 	ldw	r2,0(r2)
 100e358:	1007883a 	mov	r3,r2
 100e35c:	e0bffe17 	ldw	r2,-8(fp)
 100e360:	18bfdd2e 	bgeu	r3,r2,100e2d8 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 100e364:	0005883a 	mov	r2,zero
}
 100e368:	e037883a 	mov	sp,fp
 100e36c:	df000017 	ldw	fp,0(sp)
 100e370:	dec00104 	addi	sp,sp,4
 100e374:	f800283a 	ret

0100e378 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 100e378:	defff604 	addi	sp,sp,-40
 100e37c:	dfc00915 	stw	ra,36(sp)
 100e380:	df000815 	stw	fp,32(sp)
 100e384:	df000804 	addi	fp,sp,32
 100e388:	e13ffd15 	stw	r4,-12(fp)
 100e38c:	e17ffe15 	stw	r5,-8(fp)
 100e390:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 100e394:	00bfffc4 	movi	r2,-1
 100e398:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 100e39c:	00bffb44 	movi	r2,-19
 100e3a0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 100e3a4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 100e3a8:	e13ffd17 	ldw	r4,-12(fp)
 100e3ac:	01404074 	movhi	r5,257
 100e3b0:	2942c004 	addi	r5,r5,2816
 100e3b4:	100e68c0 	call	100e68c <alt_find_dev>
 100e3b8:	e0bff815 	stw	r2,-32(fp)
 100e3bc:	e0bff817 	ldw	r2,-32(fp)
 100e3c0:	1000051e 	bne	r2,zero,100e3d8 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 100e3c4:	e13ffd17 	ldw	r4,-12(fp)
 100e3c8:	100e71c0 	call	100e71c <alt_find_file>
 100e3cc:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 100e3d0:	00800044 	movi	r2,1
 100e3d4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 100e3d8:	e0bff817 	ldw	r2,-32(fp)
 100e3dc:	10002926 	beq	r2,zero,100e484 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
 100e3e0:	e13ff817 	ldw	r4,-32(fp)
 100e3e4:	100e8300 	call	100e830 <alt_get_fd>
 100e3e8:	e0bff915 	stw	r2,-28(fp)
 100e3ec:	e0bff917 	ldw	r2,-28(fp)
 100e3f0:	1000030e 	bge	r2,zero,100e400 <open+0x88>
    {
      status = index;
 100e3f4:	e0bff917 	ldw	r2,-28(fp)
 100e3f8:	e0bffa15 	stw	r2,-24(fp)
 100e3fc:	00002306 	br	100e48c <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
 100e400:	e0bff917 	ldw	r2,-28(fp)
 100e404:	10c00324 	muli	r3,r2,12
 100e408:	00804074 	movhi	r2,257
 100e40c:	10be4004 	addi	r2,r2,-1792
 100e410:	1885883a 	add	r2,r3,r2
 100e414:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 100e418:	e0fffe17 	ldw	r3,-8(fp)
 100e41c:	00900034 	movhi	r2,16384
 100e420:	10bfffc4 	addi	r2,r2,-1
 100e424:	1886703a 	and	r3,r3,r2
 100e428:	e0bffc17 	ldw	r2,-16(fp)
 100e42c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 100e430:	e0bffb17 	ldw	r2,-20(fp)
 100e434:	1000051e 	bne	r2,zero,100e44c <open+0xd4>
 100e438:	e13ffc17 	ldw	r4,-16(fp)
 100e43c:	100e2ac0 	call	100e2ac <alt_file_locked>
 100e440:	e0bffa15 	stw	r2,-24(fp)
 100e444:	e0bffa17 	ldw	r2,-24(fp)
 100e448:	10001016 	blt	r2,zero,100e48c <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 100e44c:	e0bff817 	ldw	r2,-32(fp)
 100e450:	10800317 	ldw	r2,12(r2)
 100e454:	10000826 	beq	r2,zero,100e478 <open+0x100>
 100e458:	e0bff817 	ldw	r2,-32(fp)
 100e45c:	10800317 	ldw	r2,12(r2)
 100e460:	e13ffc17 	ldw	r4,-16(fp)
 100e464:	e17ffd17 	ldw	r5,-12(fp)
 100e468:	e1bffe17 	ldw	r6,-8(fp)
 100e46c:	e1ffff17 	ldw	r7,-4(fp)
 100e470:	103ee83a 	callr	r2
 100e474:	00000106 	br	100e47c <open+0x104>
 100e478:	0005883a 	mov	r2,zero
 100e47c:	e0bffa15 	stw	r2,-24(fp)
 100e480:	00000206 	br	100e48c <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
 100e484:	00bffb44 	movi	r2,-19
 100e488:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 100e48c:	e0bffa17 	ldw	r2,-24(fp)
 100e490:	1000090e 	bge	r2,zero,100e4b8 <open+0x140>
  {
    alt_release_fd (index);  
 100e494:	e13ff917 	ldw	r4,-28(fp)
 100e498:	100cd9c0 	call	100cd9c <alt_release_fd>
    ALT_ERRNO = -status;
 100e49c:	100e25c0 	call	100e25c <alt_get_errno>
 100e4a0:	1007883a 	mov	r3,r2
 100e4a4:	e0bffa17 	ldw	r2,-24(fp)
 100e4a8:	0085c83a 	sub	r2,zero,r2
 100e4ac:	18800015 	stw	r2,0(r3)
    return -1;
 100e4b0:	00bfffc4 	movi	r2,-1
 100e4b4:	00000106 	br	100e4bc <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
 100e4b8:	e0bff917 	ldw	r2,-28(fp)
}
 100e4bc:	e037883a 	mov	sp,fp
 100e4c0:	dfc00117 	ldw	ra,4(sp)
 100e4c4:	df000017 	ldw	fp,0(sp)
 100e4c8:	dec00204 	addi	sp,sp,8
 100e4cc:	f800283a 	ret

0100e4d0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 100e4d0:	defffa04 	addi	sp,sp,-24
 100e4d4:	df000515 	stw	fp,20(sp)
 100e4d8:	df000504 	addi	fp,sp,20
 100e4dc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 100e4e0:	0005303a 	rdctl	r2,status
 100e4e4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 100e4e8:	e0fffc17 	ldw	r3,-16(fp)
 100e4ec:	00bfff84 	movi	r2,-2
 100e4f0:	1884703a 	and	r2,r3,r2
 100e4f4:	1001703a 	wrctl	status,r2
  
  return context;
 100e4f8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 100e4fc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 100e500:	e0bfff17 	ldw	r2,-4(fp)
 100e504:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 100e508:	e0bffd17 	ldw	r2,-12(fp)
 100e50c:	10800017 	ldw	r2,0(r2)
 100e510:	e0fffd17 	ldw	r3,-12(fp)
 100e514:	18c00117 	ldw	r3,4(r3)
 100e518:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 100e51c:	e0bffd17 	ldw	r2,-12(fp)
 100e520:	10800117 	ldw	r2,4(r2)
 100e524:	e0fffd17 	ldw	r3,-12(fp)
 100e528:	18c00017 	ldw	r3,0(r3)
 100e52c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 100e530:	e0bffd17 	ldw	r2,-12(fp)
 100e534:	e0fffd17 	ldw	r3,-12(fp)
 100e538:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 100e53c:	e0bffd17 	ldw	r2,-12(fp)
 100e540:	e0fffd17 	ldw	r3,-12(fp)
 100e544:	10c00015 	stw	r3,0(r2)
 100e548:	e0bffb17 	ldw	r2,-20(fp)
 100e54c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 100e550:	e0bffe17 	ldw	r2,-8(fp)
 100e554:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 100e558:	e037883a 	mov	sp,fp
 100e55c:	df000017 	ldw	fp,0(sp)
 100e560:	dec00104 	addi	sp,sp,4
 100e564:	f800283a 	ret

0100e568 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 100e568:	defffb04 	addi	sp,sp,-20
 100e56c:	dfc00415 	stw	ra,16(sp)
 100e570:	df000315 	stw	fp,12(sp)
 100e574:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 100e578:	d0a00e17 	ldw	r2,-32712(gp)
 100e57c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 100e580:	d0a6d717 	ldw	r2,-25764(gp)
 100e584:	10800044 	addi	r2,r2,1
 100e588:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 100e58c:	00002e06 	br	100e648 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 100e590:	e0bffd17 	ldw	r2,-12(fp)
 100e594:	10800017 	ldw	r2,0(r2)
 100e598:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 100e59c:	e0bffd17 	ldw	r2,-12(fp)
 100e5a0:	10800403 	ldbu	r2,16(r2)
 100e5a4:	10803fcc 	andi	r2,r2,255
 100e5a8:	10000426 	beq	r2,zero,100e5bc <alt_tick+0x54>
 100e5ac:	d0a6d717 	ldw	r2,-25764(gp)
 100e5b0:	1000021e 	bne	r2,zero,100e5bc <alt_tick+0x54>
    {
      alarm->rollover = 0;
 100e5b4:	e0bffd17 	ldw	r2,-12(fp)
 100e5b8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 100e5bc:	e0bffd17 	ldw	r2,-12(fp)
 100e5c0:	10800217 	ldw	r2,8(r2)
 100e5c4:	d0e6d717 	ldw	r3,-25764(gp)
 100e5c8:	18801d36 	bltu	r3,r2,100e640 <alt_tick+0xd8>
 100e5cc:	e0bffd17 	ldw	r2,-12(fp)
 100e5d0:	10800403 	ldbu	r2,16(r2)
 100e5d4:	10803fcc 	andi	r2,r2,255
 100e5d8:	1000191e 	bne	r2,zero,100e640 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 100e5dc:	e0bffd17 	ldw	r2,-12(fp)
 100e5e0:	10800317 	ldw	r2,12(r2)
 100e5e4:	e0fffd17 	ldw	r3,-12(fp)
 100e5e8:	18c00517 	ldw	r3,20(r3)
 100e5ec:	1809883a 	mov	r4,r3
 100e5f0:	103ee83a 	callr	r2
 100e5f4:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 100e5f8:	e0bfff17 	ldw	r2,-4(fp)
 100e5fc:	1000031e 	bne	r2,zero,100e60c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 100e600:	e13ffd17 	ldw	r4,-12(fp)
 100e604:	100e4d00 	call	100e4d0 <alt_alarm_stop>
 100e608:	00000d06 	br	100e640 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 100e60c:	e0bffd17 	ldw	r2,-12(fp)
 100e610:	10c00217 	ldw	r3,8(r2)
 100e614:	e0bfff17 	ldw	r2,-4(fp)
 100e618:	1887883a 	add	r3,r3,r2
 100e61c:	e0bffd17 	ldw	r2,-12(fp)
 100e620:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 100e624:	e0bffd17 	ldw	r2,-12(fp)
 100e628:	10c00217 	ldw	r3,8(r2)
 100e62c:	d0a6d717 	ldw	r2,-25764(gp)
 100e630:	1880032e 	bgeu	r3,r2,100e640 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 100e634:	e0bffd17 	ldw	r2,-12(fp)
 100e638:	00c00044 	movi	r3,1
 100e63c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 100e640:	e0bffe17 	ldw	r2,-8(fp)
 100e644:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 100e648:	e0fffd17 	ldw	r3,-12(fp)
 100e64c:	d0a00e04 	addi	r2,gp,-32712
 100e650:	18bfcf1e 	bne	r3,r2,100e590 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 100e654:	0001883a 	nop
}
 100e658:	e037883a 	mov	sp,fp
 100e65c:	dfc00117 	ldw	ra,4(sp)
 100e660:	df000017 	ldw	fp,0(sp)
 100e664:	dec00204 	addi	sp,sp,8
 100e668:	f800283a 	ret

0100e66c <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 100e66c:	deffff04 	addi	sp,sp,-4
 100e670:	df000015 	stw	fp,0(sp)
 100e674:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 100e678:	000170fa 	wrctl	ienable,zero
}
 100e67c:	e037883a 	mov	sp,fp
 100e680:	df000017 	ldw	fp,0(sp)
 100e684:	dec00104 	addi	sp,sp,4
 100e688:	f800283a 	ret

0100e68c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 100e68c:	defffa04 	addi	sp,sp,-24
 100e690:	dfc00515 	stw	ra,20(sp)
 100e694:	df000415 	stw	fp,16(sp)
 100e698:	df000404 	addi	fp,sp,16
 100e69c:	e13ffe15 	stw	r4,-8(fp)
 100e6a0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 100e6a4:	e0bfff17 	ldw	r2,-4(fp)
 100e6a8:	10800017 	ldw	r2,0(r2)
 100e6ac:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 100e6b0:	e13ffe17 	ldw	r4,-8(fp)
 100e6b4:	10003b40 	call	10003b4 <strlen>
 100e6b8:	10800044 	addi	r2,r2,1
 100e6bc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 100e6c0:	00000d06 	br	100e6f8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 100e6c4:	e0bffc17 	ldw	r2,-16(fp)
 100e6c8:	10c00217 	ldw	r3,8(r2)
 100e6cc:	e0bffd17 	ldw	r2,-12(fp)
 100e6d0:	1809883a 	mov	r4,r3
 100e6d4:	e17ffe17 	ldw	r5,-8(fp)
 100e6d8:	100d883a 	mov	r6,r2
 100e6dc:	100e9bc0 	call	100e9bc <memcmp>
 100e6e0:	1000021e 	bne	r2,zero,100e6ec <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 100e6e4:	e0bffc17 	ldw	r2,-16(fp)
 100e6e8:	00000706 	br	100e708 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 100e6ec:	e0bffc17 	ldw	r2,-16(fp)
 100e6f0:	10800017 	ldw	r2,0(r2)
 100e6f4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 100e6f8:	e0fffc17 	ldw	r3,-16(fp)
 100e6fc:	e0bfff17 	ldw	r2,-4(fp)
 100e700:	18bff01e 	bne	r3,r2,100e6c4 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 100e704:	0005883a 	mov	r2,zero
}
 100e708:	e037883a 	mov	sp,fp
 100e70c:	dfc00117 	ldw	ra,4(sp)
 100e710:	df000017 	ldw	fp,0(sp)
 100e714:	dec00204 	addi	sp,sp,8
 100e718:	f800283a 	ret

0100e71c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 100e71c:	defffb04 	addi	sp,sp,-20
 100e720:	dfc00415 	stw	ra,16(sp)
 100e724:	df000315 	stw	fp,12(sp)
 100e728:	df000304 	addi	fp,sp,12
 100e72c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 100e730:	00804074 	movhi	r2,257
 100e734:	1082be04 	addi	r2,r2,2808
 100e738:	10800017 	ldw	r2,0(r2)
 100e73c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 100e740:	00003106 	br	100e808 <alt_find_file+0xec>
  {
    len = strlen(next->name);
 100e744:	e0bffd17 	ldw	r2,-12(fp)
 100e748:	10800217 	ldw	r2,8(r2)
 100e74c:	1009883a 	mov	r4,r2
 100e750:	10003b40 	call	10003b4 <strlen>
 100e754:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 100e758:	e0bffd17 	ldw	r2,-12(fp)
 100e75c:	10c00217 	ldw	r3,8(r2)
 100e760:	e0bffe17 	ldw	r2,-8(fp)
 100e764:	10bfffc4 	addi	r2,r2,-1
 100e768:	1885883a 	add	r2,r3,r2
 100e76c:	10800003 	ldbu	r2,0(r2)
 100e770:	10803fcc 	andi	r2,r2,255
 100e774:	1080201c 	xori	r2,r2,128
 100e778:	10bfe004 	addi	r2,r2,-128
 100e77c:	10800bd8 	cmpnei	r2,r2,47
 100e780:	1000031e 	bne	r2,zero,100e790 <alt_find_file+0x74>
    {
      len -= 1;
 100e784:	e0bffe17 	ldw	r2,-8(fp)
 100e788:	10bfffc4 	addi	r2,r2,-1
 100e78c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 100e790:	e0bffe17 	ldw	r2,-8(fp)
 100e794:	e0ffff17 	ldw	r3,-4(fp)
 100e798:	1885883a 	add	r2,r3,r2
 100e79c:	10800003 	ldbu	r2,0(r2)
 100e7a0:	10803fcc 	andi	r2,r2,255
 100e7a4:	1080201c 	xori	r2,r2,128
 100e7a8:	10bfe004 	addi	r2,r2,-128
 100e7ac:	10800be0 	cmpeqi	r2,r2,47
 100e7b0:	1000081e 	bne	r2,zero,100e7d4 <alt_find_file+0xb8>
 100e7b4:	e0bffe17 	ldw	r2,-8(fp)
 100e7b8:	e0ffff17 	ldw	r3,-4(fp)
 100e7bc:	1885883a 	add	r2,r3,r2
 100e7c0:	10800003 	ldbu	r2,0(r2)
 100e7c4:	10803fcc 	andi	r2,r2,255
 100e7c8:	1080201c 	xori	r2,r2,128
 100e7cc:	10bfe004 	addi	r2,r2,-128
 100e7d0:	10000a1e 	bne	r2,zero,100e7fc <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 100e7d4:	e0bffd17 	ldw	r2,-12(fp)
 100e7d8:	10c00217 	ldw	r3,8(r2)
 100e7dc:	e0bffe17 	ldw	r2,-8(fp)
 100e7e0:	1809883a 	mov	r4,r3
 100e7e4:	e17fff17 	ldw	r5,-4(fp)
 100e7e8:	100d883a 	mov	r6,r2
 100e7ec:	100e9bc0 	call	100e9bc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 100e7f0:	1000021e 	bne	r2,zero,100e7fc <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 100e7f4:	e0bffd17 	ldw	r2,-12(fp)
 100e7f8:	00000806 	br	100e81c <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 100e7fc:	e0bffd17 	ldw	r2,-12(fp)
 100e800:	10800017 	ldw	r2,0(r2)
 100e804:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 100e808:	e0fffd17 	ldw	r3,-12(fp)
 100e80c:	00804074 	movhi	r2,257
 100e810:	1082be04 	addi	r2,r2,2808
 100e814:	18bfcb1e 	bne	r3,r2,100e744 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 100e818:	0005883a 	mov	r2,zero
}
 100e81c:	e037883a 	mov	sp,fp
 100e820:	dfc00117 	ldw	ra,4(sp)
 100e824:	df000017 	ldw	fp,0(sp)
 100e828:	dec00204 	addi	sp,sp,8
 100e82c:	f800283a 	ret

0100e830 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 100e830:	defffc04 	addi	sp,sp,-16
 100e834:	df000315 	stw	fp,12(sp)
 100e838:	df000304 	addi	fp,sp,12
 100e83c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 100e840:	00bffa04 	movi	r2,-24
 100e844:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 100e848:	e03ffd15 	stw	zero,-12(fp)
 100e84c:	00001d06 	br	100e8c4 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
 100e850:	00804074 	movhi	r2,257
 100e854:	10be4004 	addi	r2,r2,-1792
 100e858:	e0fffd17 	ldw	r3,-12(fp)
 100e85c:	18c00324 	muli	r3,r3,12
 100e860:	10c5883a 	add	r2,r2,r3
 100e864:	10800017 	ldw	r2,0(r2)
 100e868:	1000131e 	bne	r2,zero,100e8b8 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
 100e86c:	00804074 	movhi	r2,257
 100e870:	10be4004 	addi	r2,r2,-1792
 100e874:	e0fffd17 	ldw	r3,-12(fp)
 100e878:	18c00324 	muli	r3,r3,12
 100e87c:	10c5883a 	add	r2,r2,r3
 100e880:	e0ffff17 	ldw	r3,-4(fp)
 100e884:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 100e888:	00804074 	movhi	r2,257
 100e88c:	1082c204 	addi	r2,r2,2824
 100e890:	10c00017 	ldw	r3,0(r2)
 100e894:	e0bffd17 	ldw	r2,-12(fp)
 100e898:	1880040e 	bge	r3,r2,100e8ac <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
 100e89c:	00804074 	movhi	r2,257
 100e8a0:	1082c204 	addi	r2,r2,2824
 100e8a4:	e0fffd17 	ldw	r3,-12(fp)
 100e8a8:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 100e8ac:	e0bffd17 	ldw	r2,-12(fp)
 100e8b0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 100e8b4:	00000606 	br	100e8d0 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 100e8b8:	e0bffd17 	ldw	r2,-12(fp)
 100e8bc:	10800044 	addi	r2,r2,1
 100e8c0:	e0bffd15 	stw	r2,-12(fp)
 100e8c4:	e0bffd17 	ldw	r2,-12(fp)
 100e8c8:	10800810 	cmplti	r2,r2,32
 100e8cc:	103fe01e 	bne	r2,zero,100e850 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 100e8d0:	e0bffe17 	ldw	r2,-8(fp)
}
 100e8d4:	e037883a 	mov	sp,fp
 100e8d8:	df000017 	ldw	fp,0(sp)
 100e8dc:	dec00104 	addi	sp,sp,4
 100e8e0:	f800283a 	ret

0100e8e4 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 100e8e4:	defffb04 	addi	sp,sp,-20
 100e8e8:	df000415 	stw	fp,16(sp)
 100e8ec:	df000404 	addi	fp,sp,16
 100e8f0:	e13ffe15 	stw	r4,-8(fp)
 100e8f4:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 100e8f8:	e0bfff17 	ldw	r2,-4(fp)
 100e8fc:	10840070 	cmpltui	r2,r2,4097
 100e900:	1000021e 	bne	r2,zero,100e90c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 100e904:	00840004 	movi	r2,4096
 100e908:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 100e90c:	e0fffe17 	ldw	r3,-8(fp)
 100e910:	e0bfff17 	ldw	r2,-4(fp)
 100e914:	1885883a 	add	r2,r3,r2
 100e918:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 100e91c:	e0bffe17 	ldw	r2,-8(fp)
 100e920:	e0bffc15 	stw	r2,-16(fp)
 100e924:	00000506 	br	100e93c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 100e928:	e0bffc17 	ldw	r2,-16(fp)
 100e92c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 100e930:	e0bffc17 	ldw	r2,-16(fp)
 100e934:	10800804 	addi	r2,r2,32
 100e938:	e0bffc15 	stw	r2,-16(fp)
 100e93c:	e0fffc17 	ldw	r3,-16(fp)
 100e940:	e0bffd17 	ldw	r2,-12(fp)
 100e944:	18bff836 	bltu	r3,r2,100e928 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 100e948:	e0bffe17 	ldw	r2,-8(fp)
 100e94c:	108007cc 	andi	r2,r2,31
 100e950:	10000226 	beq	r2,zero,100e95c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 100e954:	e0bffc17 	ldw	r2,-16(fp)
 100e958:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 100e95c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 100e960:	e037883a 	mov	sp,fp
 100e964:	df000017 	ldw	fp,0(sp)
 100e968:	dec00104 	addi	sp,sp,4
 100e96c:	f800283a 	ret

0100e970 <atexit>:
 100e970:	200b883a 	mov	r5,r4
 100e974:	000d883a 	mov	r6,zero
 100e978:	0009883a 	mov	r4,zero
 100e97c:	000f883a 	mov	r7,zero
 100e980:	100ea381 	jmpi	100ea38 <__register_exitproc>

0100e984 <exit>:
 100e984:	defffe04 	addi	sp,sp,-8
 100e988:	000b883a 	mov	r5,zero
 100e98c:	dc000015 	stw	r16,0(sp)
 100e990:	dfc00115 	stw	ra,4(sp)
 100e994:	2021883a 	mov	r16,r4
 100e998:	100eb4c0 	call	100eb4c <__call_exitprocs>
 100e99c:	00804074 	movhi	r2,257
 100e9a0:	1082b804 	addi	r2,r2,2784
 100e9a4:	11000017 	ldw	r4,0(r2)
 100e9a8:	20800f17 	ldw	r2,60(r4)
 100e9ac:	10000126 	beq	r2,zero,100e9b4 <exit+0x30>
 100e9b0:	103ee83a 	callr	r2
 100e9b4:	8009883a 	mov	r4,r16
 100e9b8:	100ece00 	call	100ece0 <_exit>

0100e9bc <memcmp>:
 100e9bc:	01c000c4 	movi	r7,3
 100e9c0:	3980192e 	bgeu	r7,r6,100ea28 <memcmp+0x6c>
 100e9c4:	2144b03a 	or	r2,r4,r5
 100e9c8:	11c4703a 	and	r2,r2,r7
 100e9cc:	10000f26 	beq	r2,zero,100ea0c <memcmp+0x50>
 100e9d0:	20800003 	ldbu	r2,0(r4)
 100e9d4:	28c00003 	ldbu	r3,0(r5)
 100e9d8:	10c0151e 	bne	r2,r3,100ea30 <memcmp+0x74>
 100e9dc:	31bfff84 	addi	r6,r6,-2
 100e9e0:	01ffffc4 	movi	r7,-1
 100e9e4:	00000406 	br	100e9f8 <memcmp+0x3c>
 100e9e8:	20800003 	ldbu	r2,0(r4)
 100e9ec:	28c00003 	ldbu	r3,0(r5)
 100e9f0:	31bfffc4 	addi	r6,r6,-1
 100e9f4:	10c00e1e 	bne	r2,r3,100ea30 <memcmp+0x74>
 100e9f8:	21000044 	addi	r4,r4,1
 100e9fc:	29400044 	addi	r5,r5,1
 100ea00:	31fff91e 	bne	r6,r7,100e9e8 <memcmp+0x2c>
 100ea04:	0005883a 	mov	r2,zero
 100ea08:	f800283a 	ret
 100ea0c:	20c00017 	ldw	r3,0(r4)
 100ea10:	28800017 	ldw	r2,0(r5)
 100ea14:	1880041e 	bne	r3,r2,100ea28 <memcmp+0x6c>
 100ea18:	31bfff04 	addi	r6,r6,-4
 100ea1c:	21000104 	addi	r4,r4,4
 100ea20:	29400104 	addi	r5,r5,4
 100ea24:	39bff936 	bltu	r7,r6,100ea0c <memcmp+0x50>
 100ea28:	303fe91e 	bne	r6,zero,100e9d0 <memcmp+0x14>
 100ea2c:	003ff506 	br	100ea04 <memcmp+0x48>
 100ea30:	10c5c83a 	sub	r2,r2,r3
 100ea34:	f800283a 	ret

0100ea38 <__register_exitproc>:
 100ea38:	00804074 	movhi	r2,257
 100ea3c:	defffa04 	addi	sp,sp,-24
 100ea40:	1082b804 	addi	r2,r2,2784
 100ea44:	dc000315 	stw	r16,12(sp)
 100ea48:	14000017 	ldw	r16,0(r2)
 100ea4c:	dc400415 	stw	r17,16(sp)
 100ea50:	dfc00515 	stw	ra,20(sp)
 100ea54:	80805217 	ldw	r2,328(r16)
 100ea58:	2023883a 	mov	r17,r4
 100ea5c:	10003626 	beq	r2,zero,100eb38 <__register_exitproc+0x100>
 100ea60:	10c00117 	ldw	r3,4(r2)
 100ea64:	010007c4 	movi	r4,31
 100ea68:	20c00e16 	blt	r4,r3,100eaa4 <__register_exitproc+0x6c>
 100ea6c:	1a400044 	addi	r9,r3,1
 100ea70:	8800211e 	bne	r17,zero,100eaf8 <__register_exitproc+0xc0>
 100ea74:	18c00084 	addi	r3,r3,2
 100ea78:	18c7883a 	add	r3,r3,r3
 100ea7c:	18c7883a 	add	r3,r3,r3
 100ea80:	12400115 	stw	r9,4(r2)
 100ea84:	10c7883a 	add	r3,r2,r3
 100ea88:	19400015 	stw	r5,0(r3)
 100ea8c:	0005883a 	mov	r2,zero
 100ea90:	dfc00517 	ldw	ra,20(sp)
 100ea94:	dc400417 	ldw	r17,16(sp)
 100ea98:	dc000317 	ldw	r16,12(sp)
 100ea9c:	dec00604 	addi	sp,sp,24
 100eaa0:	f800283a 	ret
 100eaa4:	00800034 	movhi	r2,0
 100eaa8:	10800004 	addi	r2,r2,0
 100eaac:	10002526 	beq	r2,zero,100eb44 <__register_exitproc+0x10c>
 100eab0:	01006404 	movi	r4,400
 100eab4:	d9400015 	stw	r5,0(sp)
 100eab8:	d9800115 	stw	r6,4(sp)
 100eabc:	d9c00215 	stw	r7,8(sp)
 100eac0:	00000000 	call	0 <__alt_mem_SDRAM_ctrl-0x1000000>
 100eac4:	d9400017 	ldw	r5,0(sp)
 100eac8:	d9800117 	ldw	r6,4(sp)
 100eacc:	d9c00217 	ldw	r7,8(sp)
 100ead0:	10001c26 	beq	r2,zero,100eb44 <__register_exitproc+0x10c>
 100ead4:	80c05217 	ldw	r3,328(r16)
 100ead8:	10000115 	stw	zero,4(r2)
 100eadc:	02400044 	movi	r9,1
 100eae0:	10c00015 	stw	r3,0(r2)
 100eae4:	80805215 	stw	r2,328(r16)
 100eae8:	10006215 	stw	zero,392(r2)
 100eaec:	10006315 	stw	zero,396(r2)
 100eaf0:	0007883a 	mov	r3,zero
 100eaf4:	883fdf26 	beq	r17,zero,100ea74 <__register_exitproc+0x3c>
 100eaf8:	18d1883a 	add	r8,r3,r3
 100eafc:	4211883a 	add	r8,r8,r8
 100eb00:	1211883a 	add	r8,r2,r8
 100eb04:	41802215 	stw	r6,136(r8)
 100eb08:	01000044 	movi	r4,1
 100eb0c:	11806217 	ldw	r6,392(r2)
 100eb10:	20c8983a 	sll	r4,r4,r3
 100eb14:	310cb03a 	or	r6,r6,r4
 100eb18:	11806215 	stw	r6,392(r2)
 100eb1c:	41c04215 	stw	r7,264(r8)
 100eb20:	01800084 	movi	r6,2
 100eb24:	89bfd31e 	bne	r17,r6,100ea74 <__register_exitproc+0x3c>
 100eb28:	11806317 	ldw	r6,396(r2)
 100eb2c:	3108b03a 	or	r4,r6,r4
 100eb30:	11006315 	stw	r4,396(r2)
 100eb34:	003fcf06 	br	100ea74 <__register_exitproc+0x3c>
 100eb38:	80805304 	addi	r2,r16,332
 100eb3c:	80805215 	stw	r2,328(r16)
 100eb40:	003fc706 	br	100ea60 <__register_exitproc+0x28>
 100eb44:	00bfffc4 	movi	r2,-1
 100eb48:	003fd106 	br	100ea90 <__register_exitproc+0x58>

0100eb4c <__call_exitprocs>:
 100eb4c:	00804074 	movhi	r2,257
 100eb50:	1082b804 	addi	r2,r2,2784
 100eb54:	10800017 	ldw	r2,0(r2)
 100eb58:	defff404 	addi	sp,sp,-48
 100eb5c:	dd800815 	stw	r22,32(sp)
 100eb60:	d8800015 	stw	r2,0(sp)
 100eb64:	10805204 	addi	r2,r2,328
 100eb68:	dd000615 	stw	r20,24(sp)
 100eb6c:	dc800415 	stw	r18,16(sp)
 100eb70:	dfc00b15 	stw	ra,44(sp)
 100eb74:	df000a15 	stw	fp,40(sp)
 100eb78:	ddc00915 	stw	r23,36(sp)
 100eb7c:	dd400715 	stw	r21,28(sp)
 100eb80:	dcc00515 	stw	r19,20(sp)
 100eb84:	dc400315 	stw	r17,12(sp)
 100eb88:	dc000215 	stw	r16,8(sp)
 100eb8c:	2025883a 	mov	r18,r4
 100eb90:	2829883a 	mov	r20,r5
 100eb94:	d8800115 	stw	r2,4(sp)
 100eb98:	05bfffc4 	movi	r22,-1
 100eb9c:	d8800017 	ldw	r2,0(sp)
 100eba0:	14c05217 	ldw	r19,328(r2)
 100eba4:	98001d26 	beq	r19,zero,100ec1c <__call_exitprocs+0xd0>
 100eba8:	dd400117 	ldw	r21,4(sp)
 100ebac:	98800117 	ldw	r2,4(r19)
 100ebb0:	173fffc4 	addi	fp,r2,-1
 100ebb4:	e0000d16 	blt	fp,zero,100ebec <__call_exitprocs+0xa0>
 100ebb8:	14000044 	addi	r16,r2,1
 100ebbc:	8421883a 	add	r16,r16,r16
 100ebc0:	8421883a 	add	r16,r16,r16
 100ebc4:	84402004 	addi	r17,r16,128
 100ebc8:	9c63883a 	add	r17,r19,r17
 100ebcc:	9c21883a 	add	r16,r19,r16
 100ebd0:	a0001e26 	beq	r20,zero,100ec4c <__call_exitprocs+0x100>
 100ebd4:	80804017 	ldw	r2,256(r16)
 100ebd8:	15001c26 	beq	r2,r20,100ec4c <__call_exitprocs+0x100>
 100ebdc:	e73fffc4 	addi	fp,fp,-1
 100ebe0:	843fff04 	addi	r16,r16,-4
 100ebe4:	8c7fff04 	addi	r17,r17,-4
 100ebe8:	e5bff91e 	bne	fp,r22,100ebd0 <__call_exitprocs+0x84>
 100ebec:	00800034 	movhi	r2,0
 100ebf0:	10800004 	addi	r2,r2,0
 100ebf4:	10000926 	beq	r2,zero,100ec1c <__call_exitprocs+0xd0>
 100ebf8:	98800117 	ldw	r2,4(r19)
 100ebfc:	1000311e 	bne	r2,zero,100ecc4 <__call_exitprocs+0x178>
 100ec00:	98800017 	ldw	r2,0(r19)
 100ec04:	10003426 	beq	r2,zero,100ecd8 <__call_exitprocs+0x18c>
 100ec08:	9809883a 	mov	r4,r19
 100ec0c:	a8800015 	stw	r2,0(r21)
 100ec10:	00000000 	call	0 <__alt_mem_SDRAM_ctrl-0x1000000>
 100ec14:	acc00017 	ldw	r19,0(r21)
 100ec18:	983fe41e 	bne	r19,zero,100ebac <__call_exitprocs+0x60>
 100ec1c:	dfc00b17 	ldw	ra,44(sp)
 100ec20:	df000a17 	ldw	fp,40(sp)
 100ec24:	ddc00917 	ldw	r23,36(sp)
 100ec28:	dd800817 	ldw	r22,32(sp)
 100ec2c:	dd400717 	ldw	r21,28(sp)
 100ec30:	dd000617 	ldw	r20,24(sp)
 100ec34:	dcc00517 	ldw	r19,20(sp)
 100ec38:	dc800417 	ldw	r18,16(sp)
 100ec3c:	dc400317 	ldw	r17,12(sp)
 100ec40:	dc000217 	ldw	r16,8(sp)
 100ec44:	dec00c04 	addi	sp,sp,48
 100ec48:	f800283a 	ret
 100ec4c:	98800117 	ldw	r2,4(r19)
 100ec50:	80c00017 	ldw	r3,0(r16)
 100ec54:	10bfffc4 	addi	r2,r2,-1
 100ec58:	17001526 	beq	r2,fp,100ecb0 <__call_exitprocs+0x164>
 100ec5c:	80000015 	stw	zero,0(r16)
 100ec60:	183fde26 	beq	r3,zero,100ebdc <__call_exitprocs+0x90>
 100ec64:	00800044 	movi	r2,1
 100ec68:	1708983a 	sll	r4,r2,fp
 100ec6c:	98806217 	ldw	r2,392(r19)
 100ec70:	9dc00117 	ldw	r23,4(r19)
 100ec74:	2084703a 	and	r2,r4,r2
 100ec78:	1000061e 	bne	r2,zero,100ec94 <__call_exitprocs+0x148>
 100ec7c:	183ee83a 	callr	r3
 100ec80:	98800117 	ldw	r2,4(r19)
 100ec84:	15ffc51e 	bne	r2,r23,100eb9c <__call_exitprocs+0x50>
 100ec88:	a8800017 	ldw	r2,0(r21)
 100ec8c:	14ffd326 	beq	r2,r19,100ebdc <__call_exitprocs+0x90>
 100ec90:	003fc206 	br	100eb9c <__call_exitprocs+0x50>
 100ec94:	98806317 	ldw	r2,396(r19)
 100ec98:	2084703a 	and	r2,r4,r2
 100ec9c:	1000061e 	bne	r2,zero,100ecb8 <__call_exitprocs+0x16c>
 100eca0:	89400017 	ldw	r5,0(r17)
 100eca4:	9009883a 	mov	r4,r18
 100eca8:	183ee83a 	callr	r3
 100ecac:	003ff406 	br	100ec80 <__call_exitprocs+0x134>
 100ecb0:	9f000115 	stw	fp,4(r19)
 100ecb4:	003fea06 	br	100ec60 <__call_exitprocs+0x114>
 100ecb8:	89000017 	ldw	r4,0(r17)
 100ecbc:	183ee83a 	callr	r3
 100ecc0:	003fef06 	br	100ec80 <__call_exitprocs+0x134>
 100ecc4:	98800017 	ldw	r2,0(r19)
 100ecc8:	982b883a 	mov	r21,r19
 100eccc:	1027883a 	mov	r19,r2
 100ecd0:	983fb61e 	bne	r19,zero,100ebac <__call_exitprocs+0x60>
 100ecd4:	003fd106 	br	100ec1c <__call_exitprocs+0xd0>
 100ecd8:	0005883a 	mov	r2,zero
 100ecdc:	003ffa06 	br	100ecc8 <__call_exitprocs+0x17c>

0100ece0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 100ece0:	defffd04 	addi	sp,sp,-12
 100ece4:	df000215 	stw	fp,8(sp)
 100ece8:	df000204 	addi	fp,sp,8
 100ecec:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 100ecf0:	0001883a 	nop
 100ecf4:	e0bfff17 	ldw	r2,-4(fp)
 100ecf8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 100ecfc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 100ed00:	10000226 	beq	r2,zero,100ed0c <_exit+0x2c>
    ALT_SIM_FAIL();
 100ed04:	002af070 	cmpltui	zero,zero,43969
 100ed08:	00000106 	br	100ed10 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 100ed0c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 100ed10:	003fff06 	br	100ed10 <_exit+0x30>
